{"version":3,"file":"taskpane.js","mappings":";iGACIA,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,OACf,CAGAJ,EAAoBO,EAAID,ECxBxBN,EAAoBQ,EAAI,SAASJ,EAASK,GACzC,IAAI,IAAIC,KAAOD,EACXT,EAAoBW,EAAEF,EAAYC,KAASV,EAAoBW,EAAEP,EAASM,IAC5EE,OAAOC,eAAeT,EAASM,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAG3E,ECPAV,EAAoBgB,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,EAChB,CAAE,MAAOC,GACR,GAAsB,iBAAXC,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxBrB,EAAoBW,EAAI,SAASW,EAAKC,GAAQ,OAAOX,OAAOY,UAAUC,eAAeC,KAAKJ,EAAKC,EAAO,E,WCAtG,IAAII,EACA3B,EAAoBgB,EAAEY,gBAAeD,EAAY3B,EAAoBgB,EAAEa,SAAW,IACtF,IAAIC,EAAW9B,EAAoBgB,EAAEc,SACrC,IAAKH,GAAaG,IACbA,EAASC,eAAkE,WAAjDD,EAASC,cAAcC,QAAQC,gBAC5DN,EAAYG,EAASC,cAAcG,MAC/BP,GAAW,CACf,IAAIQ,EAAUL,EAASM,qBAAqB,UAC5C,GAAGD,EAAQE,OAEV,IADA,IAAIC,EAAIH,EAAQE,OAAS,EAClBC,GAAK,KAAOX,IAAc,aAAaY,KAAKZ,KAAaA,EAAYQ,EAAQG,KAAKJ,GAE3F,CAID,IAAKP,EAAW,MAAM,IAAIa,MAAM,yDAChCb,EAAYA,EAAUc,QAAQ,SAAU,IAAIA,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KAC1GzC,EAAoB0C,EAAIf,C,IClBxB3B,EAAoB2C,EAAIb,SAASc,SAAWC,KAAKhB,SAASiB,K,orGCC1D,IAAA1B,EAAA2B,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAxC,EAAAqC,EAAAI,aAAA,yBAAAd,EAAAU,EAAAE,EAAAvC,EAAA2B,GAAA,IAAAe,EAAAH,GAAAA,EAAA1B,qBAAA8B,EAAAJ,EAAAI,EAAAC,EAAA3C,OAAA4C,OAAAH,EAAA7B,WAAA,OAAAiC,EAAAF,EAAA,mBAAAP,EAAAE,EAAAvC,GAAA,IAAA2B,EAAAe,EAAAE,EAAAG,EAAA,EAAAhB,EAAA/B,GAAA,GAAAgD,GAAA,EAAAC,EAAA,CAAAlB,EAAA,EAAAQ,EAAA,EAAAW,EAAAzC,EAAA0C,EAAAtD,EAAAkD,EAAAlD,EAAAuD,KAAA3C,EAAA,GAAAZ,EAAA,SAAAuC,EAAAC,GAAA,OAAAV,EAAAS,EAAAM,EAAA,EAAAE,EAAAnC,EAAAwC,EAAAV,EAAAF,EAAAc,CAAA,YAAAtD,EAAAwC,EAAAE,GAAA,IAAAG,EAAAL,EAAAO,EAAAL,EAAAH,EAAA,GAAAY,GAAAD,IAAA/C,GAAAoC,EAAAL,EAAAL,OAAAU,IAAA,KAAApC,EAAA2B,EAAAI,EAAAK,GAAAvC,EAAAoD,EAAAlB,EAAAsB,EAAA1B,EAAA,GAAAU,EAAA,GAAArC,EAAAqD,IAAAd,KAAAK,EAAAjB,GAAAe,EAAAf,EAAA,OAAAe,EAAA,MAAAf,EAAA,GAAAA,EAAA,GAAAlB,GAAAkB,EAAA,IAAA9B,KAAAG,EAAAqC,EAAA,GAAAxC,EAAA8B,EAAA,KAAAe,EAAA,EAAAO,EAAAC,EAAAX,EAAAU,EAAAV,EAAAZ,EAAA,IAAA9B,EAAAwD,IAAArD,EAAAqC,EAAA,GAAAV,EAAA,GAAAY,GAAAA,EAAAc,KAAA1B,EAAA,GAAAU,EAAAV,EAAA,GAAAY,EAAAU,EAAAV,EAAAc,EAAAX,EAAA,OAAA1C,GAAAqC,EAAA,SAAAc,EAAA,MAAAH,GAAA,EAAAT,CAAA,iBAAAvC,EAAA+B,EAAAsB,GAAA,GAAAN,EAAA,QAAAO,UAAA,oCAAAN,GAAA,IAAAjB,GAAAlC,EAAAkC,EAAAsB,GAAAX,EAAAX,EAAAa,EAAAS,GAAAjB,EAAAM,EAAA,EAAAjC,EAAAmC,KAAAI,GAAA,CAAArB,IAAAe,EAAAA,EAAA,GAAAA,EAAA,IAAAO,EAAAV,GAAA,GAAA1C,EAAA6C,EAAAE,IAAAK,EAAAV,EAAAK,EAAAK,EAAAC,EAAAN,GAAA,OAAAG,EAAA,EAAApB,EAAA,IAAAe,IAAA1C,EAAA,QAAAoC,EAAAT,EAAA3B,GAAA,MAAAoC,EAAAA,EAAArB,KAAAY,EAAAiB,IAAA,MAAAU,UAAA,wCAAAlB,EAAAmB,KAAA,OAAAnB,EAAAQ,EAAAR,EAAAoB,MAAAd,EAAA,IAAAA,EAAA,YAAAA,IAAAN,EAAAT,EAAA8B,SAAArB,EAAArB,KAAAY,GAAAe,EAAA,IAAAE,EAAAU,UAAA,oCAAAtD,EAAA,YAAA0C,EAAA,GAAAf,EAAAlB,CAAA,UAAA2B,GAAAY,EAAAC,EAAAV,EAAA,GAAAK,EAAAP,EAAAtB,KAAAwB,EAAAU,MAAAE,EAAA,YAAAf,GAAAT,EAAAlB,EAAAiC,EAAA,EAAAE,EAAAR,CAAA,SAAAW,EAAA,UAAAS,MAAApB,EAAAmB,KAAAP,EAAA,GAAAX,EAAArC,EAAA2B,IAAA,GAAAiB,CAAA,KAAAO,EAAA,YAAAR,IAAA,UAAAe,IAAA,UAAAC,IAAA,CAAAvB,EAAAnC,OAAA2D,eAAA,IAAAlB,EAAA,GAAAH,GAAAH,EAAAA,EAAA,GAAAG,QAAAO,EAAAV,EAAA,GAAAG,EAAA,yBAAAH,GAAAQ,EAAAe,EAAA9C,UAAA8B,EAAA9B,UAAAZ,OAAA4C,OAAAH,GAAA,SAAAK,EAAAtC,GAAA,OAAAR,OAAA4D,eAAA5D,OAAA4D,eAAApD,EAAAkD,IAAAlD,EAAAqD,UAAAH,EAAAb,EAAArC,EAAAT,EAAA,sBAAAS,EAAAI,UAAAZ,OAAA4C,OAAAD,GAAAnC,CAAA,QAAAiD,EAAA7C,UAAA8C,EAAAb,EAAAF,EAAA,cAAAe,GAAAb,EAAAa,EAAA,cAAAD,GAAAA,EAAAK,YAAA,oBAAAjB,EAAAa,EAAA3D,EAAA,qBAAA8C,EAAAF,GAAAE,EAAAF,EAAA5C,EAAA,aAAA8C,EAAAF,EAAAL,EAAA,yBAAAO,EAAAF,EAAA,oDAAAoB,EAAA,kBAAAC,EAAAtC,EAAA/B,EAAAmD,EAAA,cAAAD,EAAArC,EAAA4B,EAAAE,EAAAH,GAAA,IAAAT,EAAA1B,OAAAC,eAAA,IAAAyB,EAAA,gBAAAlB,GAAAkB,EAAA,EAAAmB,EAAA,SAAArC,EAAA4B,EAAAE,EAAAH,GAAA,SAAApC,EAAAqC,EAAAE,GAAAO,EAAArC,EAAA4B,EAAA,SAAA5B,GAAA,YAAAyD,QAAA7B,EAAAE,EAAA9B,EAAA,GAAA4B,EAAAV,EAAAA,EAAAlB,EAAA4B,EAAA,CAAAmB,MAAAjB,EAAApC,YAAAiC,EAAA+B,cAAA/B,EAAAgC,UAAAhC,IAAA3B,EAAA4B,GAAAE,GAAAvC,EAAA,UAAAA,EAAA,WAAAA,EAAA,cAAA8C,EAAArC,EAAA4B,EAAAE,EAAAH,EAAA,UAAAiC,EAAA9B,EAAAH,EAAA3B,EAAA4B,EAAArC,EAAAmD,EAAAT,GAAA,QAAAf,EAAAY,EAAAY,GAAAT,GAAAE,EAAAjB,EAAA6B,KAAA,OAAAjB,GAAA,YAAA9B,EAAA8B,EAAA,CAAAZ,EAAA4B,KAAAnB,EAAAQ,GAAA0B,QAAAC,QAAA3B,GAAA4B,KAAAnC,EAAArC,EAAA,UAAAyE,EAAAlC,GAAA,sBAAAH,EAAA,KAAA3B,EAAAiE,UAAA,WAAAJ,QAAA,SAAAjC,EAAArC,GAAA,IAAAmD,EAAAZ,EAAAoC,MAAAvC,EAAA3B,GAAA,SAAAmE,EAAArC,GAAA8B,EAAAlB,EAAAd,EAAArC,EAAA4E,EAAAC,EAAA,OAAAtC,EAAA,UAAAsC,EAAAtC,GAAA8B,EAAAlB,EAAAd,EAAArC,EAAA4E,EAAAC,EAAA,QAAAtC,EAAA,CAAAqC,OAAA,MAoCAzD,SAAS2D,eAAe,aAAaC,iBAAiB,SAAQ,eAAAC,EAAAP,EAAAT,IAAApE,EAAE,SAAAqF,EAAOxE,GAAC,IAAAyE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA7B,IAAAC,EAAA,SAAA6B,GAAA,cAAAA,EAAA/D,EAAA+D,EAAAvD,GAAA,OAU/B,OATrC9B,EAAEsF,iBAEIb,EAAQzE,EAAEuF,OAAOd,MAAM1B,MACvB2B,EAAW1E,EAAEuF,OAAOb,SAAS3B,MAG7B4B,EAAYjE,SAAS2D,eAAe,aACpCO,EAAelE,SAAS2D,eAAe,gBAC7CM,EAAUa,MAAMC,QAAU,OAC1Bb,EAAaY,MAAMC,QAAU,QAAQJ,EAAA/D,EAAA,EAAA+D,EAAAvD,EAAA,EAGX4D,MAAM,qDAAsD,CAC9EC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEtB,MAAAA,EAAOC,SAAAA,MAChC,OAJW,IAAPG,EAAOQ,EAAA5C,GAMAuD,GAAI,CAAFX,EAAAvD,EAAA,cAAQ,IAAIV,MAAM,gBAAe,cAAAiE,EAAAvD,EAAA,EAE7B+C,EAAQoB,OAAM,OAAvB,IAAJnB,EAAIO,EAAA5C,IAEIqC,EAAKoB,OAAM,CAAAb,EAAAvD,EAAA,cAAQ,IAAIV,MAAM,qBAAoB,cAAAiE,EAAAvD,EAAA,EAGnC4D,MAAM,0DAA2D,CACzFC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEI,QAASrB,EAAKoB,WACvC,OAJiB,IAAbnB,EAAaM,EAAA5C,GAMAuD,GAAI,CAAFX,EAAAvD,EAAA,cAAQ,IAAIV,MAAM,2BAA0B,cAAAiE,EAAAvD,EAAA,EAExCiD,EAAckB,OAAM,OAAvCjB,EAAUK,EAAA5C,EAGhB/B,SAAS2D,eAAe,eAAemB,MAAMC,QAAU,OACvD/E,SAAS2D,eAAe,oBAAoBmB,MAAMC,QAAU,OAE/B,QAAzBT,EAAWoB,WACXC,aAAaC,QAAQ,OAAQR,KAAKC,UAAUjB,IAC5CuB,aAAaC,QAAQ,aAAcR,KAAKC,UAAUf,IAElDtE,SAAS2D,eAAe,iBAAiBmB,MAAMC,QAAU,QACzD/E,SAAS2D,eAAe,WAAWmB,MAAMC,QAAU,QACnD/E,SAAS2D,eAAe,aAAamB,MAAMC,QAAU,QAE/CR,EAAcvE,SAAS2D,eAAe,eACtCa,EAAWxE,SAAS2D,eAAe,YAErCS,EAAKyB,WACLrB,EAASsB,YAAc1B,EAAKyB,SACtBpB,EAAWL,EAAKyB,SAASE,MAAM,KAAKC,IAAI,SAAA5E,GAAC,OAAIA,EAAE,EAAE,GAAE6E,KAAK,IAAI9F,cAClEoE,EAAYuB,YAAcrB,IAG9BzE,SAAS2D,eAAe,oBAAoBmB,MAAMC,QAAU,OAC/DJ,EAAAvD,EAAA,gBAAAuD,EAAA/D,EAAA,EAAA8D,EAAAC,EAAA5C,EAGDmE,QAAQC,MAAKzB,GACb1E,SAAS2D,eAAe,eAAemB,MAAMC,QAAU,OACvD/E,SAAS2D,eAAe,iBAAiBmB,MAAMC,QAAU,OACzD/E,SAAS2D,eAAe,oBAAoBmB,MAAMC,QAAU,OAAO,QAG/B,OAH+BJ,EAAA/D,EAAA,GAEnEqD,EAAUa,MAAMC,QAAU,QAC1Bb,EAAaY,MAAMC,QAAU,OAAOJ,EAAA/C,EAAA,mBAAA+C,EAAA3C,EAAA,KAAA8B,EAAA,uBAE3C,gBAAAsC,GAAA,OAAAvC,EAAAL,MAAA,KAAAD,UAAA,EArE6D,IAuE9DhE,OAAOqE,iBAAiB,mBAAoB,WACxC,IAAMyC,EAAYV,aAAaW,QAAQ,QACjCC,EAAkBZ,aAAaW,QAAQ,cAE7C,GAAID,GAAaE,EAAiB,CAC9B,IAAMnC,EAAOgB,KAAKoB,MAAMH,GAGxB,GAA6B,QAFVjB,KAAKoB,MAAMD,GAEfb,UAAqB,CAEhC1F,SAAS2D,eAAe,iBAAiBmB,MAAMC,QAAU,QACzD/E,SAAS2D,eAAe,WAAWmB,MAAMC,QAAU,QACnD/E,SAAS2D,eAAe,aAAamB,MAAMC,QAAU,QAErD,IAAMR,EAAcvE,SAAS2D,eAAe,eACtCa,EAAWxE,SAAS2D,eAAe,YAEzC,GAAIS,GAAQA,EAAKyB,SAAU,CACvBrB,EAASsB,YAAc1B,EAAKyB,SAC5B,IAAMpB,EAAWL,EAAKyB,SAASE,MAAM,KAAKC,IAAI,SAAA5E,GAAC,OAAIA,EAAE,EAAE,GAAE6E,KAAK,IAAI9F,cAClEoE,EAAYuB,YAAcrB,CAC9B,CAEA,MACJ,CACJ,CAGAzE,SAAS2D,eAAe,eAAemB,MAAMC,QAAU,MAC3D,GAKA/E,SAAS2D,eAAe,aAAaC,iBAAiB,QAAS,WAC3D+B,aAAac,WAAW,QACxBd,aAAac,WAAW,cAExBzG,SAAS2D,eAAe,iBAAiBmB,MAAMC,QAAU,OACzD/E,SAAS2D,eAAe,WAAWmB,MAAMC,QAAU,OACnD/E,SAAS2D,eAAe,aAAamB,MAAMC,QAAU,OACrD/E,SAAS2D,eAAe,eAAemB,MAAMC,QAAU,MAC3D,GAIA2B,OAAOC,QAAO,eAAAC,EAAAtD,EAAAT,IAAApE,EAAC,SAAAoI,EAAOC,GAAI,IAAAC,EAMO,OAAAlE,IAAAC,EAAC,SAADkE,GAAA,cAAAA,EAAA5F,GAAA,OAQ5B,GAbG0F,EAAKG,OAASP,OAAOQ,SAASC,MAAK,CAAAH,EAAA5F,EAAA,eAAA4F,EAAAhF,EAAA,UAEjC+E,EAAa/G,SAAS2D,eAAe,cAC3B3D,SAAS2D,eAAe,WAahCyD,QAAU,WACd,IACMC,EADSrH,SAAS2D,eAAe,kBAChB2D,QAAQjF,MAC/B,IAAKgF,EAAS,OAAOE,MAAM,2BAE3B,IAAMC,EAAM,6CAAHC,OAAgDC,mBAAmBL,IAC5E9H,OAAOoI,KAAKH,EAAK,SACrB,EAGAT,EAAWK,QAAO9D,EAAAT,IAAApE,EAAG,SAAAmJ,IAAA,IAAAC,EAAAR,EAAAS,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA5G,IAAAC,EAAA,SAAA4G,GAAA,cAAAA,EAAA9I,EAAA8I,EAAAtI,GAAA,OAGc,GAFzByG,EAAS7H,SAAS2D,eAAe,kBACjC0D,EAAUQ,EAAOP,QAAQjF,MACzByF,EAAOD,EAAO/B,YAEfuB,EAAS,CAAFqC,EAAAtI,EAAA,eAAAsI,EAAA1H,EAAA,EAASuF,MAAM,4BAA0B,OAgBjD,OAdEQ,EAAa/H,SAAS2D,eAAe,kBAAkB2D,QAAQqC,OAG/D3B,EAAahI,SAAS2D,eAAe,cACrCsE,EAAUD,EAAW4B,QAGrB1B,EAAcD,EAAU,GAAK,MAEnC/B,QAAQ2D,IAAI9B,GAAW2B,EAAA9I,EAAA,EAGnBsF,QAAQ2D,IAAI,2BAADpC,OAA4BJ,EAAO,OAAAI,OAAMK,EAAI,aAAAL,OAAYQ,EAAU,KAAO,OAErFyB,EAAAtI,EAAA,EAMsB+B,QAAQ2G,IAAI,CAG1B9E,MAAM,gEAAiE,CACnEC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEgC,QAAAA,EAAS0C,KAAM,IAAKJ,OAAQ5B,EAAYiC,MAAO,WAAFvC,OAAaS,OAErFlD,MAAM,gEAAiE,CACnEC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEgC,QAAAA,EAAS0C,KAAM,IAAKJ,OAAQ5B,EAAYiC,MAAO,WAAFvC,OAAaS,OAIrFlD,MAAM,gEAAiE,CACnEC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEgC,QAAAA,EAAS0C,KAAM,IAAKJ,OAAQ5B,EAAYiC,MAAO,cAAFvC,OAAgBS,OAExFlD,MAAM,gEAAiE,CACnEC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEgC,QAAAA,EAAS0C,KAAM,IAAKJ,OAAQ5B,EAAYiC,MAAO,cAAFvC,OAAgBS,OAIxFlD,MAAM,gEAAiE,CACnEC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEgC,QAAAA,EAAS0C,KAAM,IAAKJ,OAAQ5B,EAAYiC,MAAO,eAAFvC,OAAiBS,OAEzFlD,MAAM,gEAAiE,CACnEC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEgC,QAAAA,EAAS0C,KAAM,IAAKJ,OAAQ5B,EAAYiC,MAAO,eAAFvC,OAAiBS,OAIzFlD,MAAM,gEAAiE,CACnEC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEgC,QAAAA,EAAS0C,KAAM,IAAKJ,OAAQ5B,EAAYiC,MAAO,aAAFvC,OAAeS,OAEvFlD,MAAM,gEAAiE,CACnEC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEgC,QAAAA,EAAS0C,KAAM,IAAKJ,OAAQ5B,EAAYiC,MAAO,aAAFvC,OAAeS,OAIvFlD,MAAM,+DAAgE,CAClEC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEgC,QAAAA,EAAS0C,KAAM,IAAKE,YAAalC,QAE9D,OAxDM,OAwDNI,EAAAuB,EAAA3H,EAAAqG,EAAA8B,EAAA/B,EAAA,GA5DFE,EAASD,EAAA,GAAEE,EAASF,EAAA,GACpBG,EAAQH,EAAA,GAAEI,EAAQJ,EAAA,GAClBK,EAAOL,EAAA,GAAEM,EAAON,EAAA,GAChBO,EAAOP,EAAA,GAAEQ,EAAOR,EAAA,GAChBS,EAAQT,EAAA,GAAAsB,EAAAtI,EAAA,EA+DU+B,QAAQ2G,IAAI,CAC9BzB,EAAU9C,OAAQ+C,EAAU/C,OAC5BgD,EAAShD,OAAQiD,EAASjD,OAC1BkD,EAAQlD,OAAQmD,EAAQnD,OACxBoD,EAAQpD,OAAQqD,EAAQrD,OACxBsD,EAAStD,SACX,OANU,OAMVuD,EAAAY,EAAA3H,EAAAgH,EAAAmB,EAAApB,EAAA,GAVEE,EAASD,EAAA,GAAEE,EAASF,EAAA,GACpBG,EAAQH,EAAA,GAAEI,EAAQJ,EAAA,GAClBK,EAAOL,EAAA,GAAEM,EAAON,EAAA,GAChBO,EAAOP,EAAA,GAAEQ,EAAOR,EAAA,GAChBS,EAAQT,EAAA,GAAAW,EAAAtI,EAAA,EAQN+F,MAAMgD,IAAG,eAAAC,EAAA9G,EAAAT,IAAApE,EAAC,SAAA4L,EAAOC,GAAO,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAd,EAAAe,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAzJ,IAAAC,EAAA,SAAAyJ,GAAA,cAAAA,EAAAnL,GAAA,OAGa,OAFjCoJ,EAAWF,EAAQE,SACnBC,EAAa,CAAC,iBAAkB,iBAAkB,eACxDD,EAASgC,WAAWC,KAAK,cAAcF,EAAAnL,EAAA,EACjCkJ,EAAQoC,OAAM,OAMpB,IAJMhC,EAAgBF,EAASgC,WAAWG,MAAM3G,IAAI,SAAA4G,GAAC,OAAIA,EAAE9E,IAAI,GACzD6C,EAAY,CAAC,EAGnBC,EAAA,EAAAC,EAAwBJ,EAAUG,EAAAC,EAAAtK,OAAAqK,IAAvBE,EAASD,EAAAD,GACZZ,OAAK,EACLU,EAAcmC,SAAS/B,IACvBd,EAAQQ,EAASgC,WAAWlG,QAAQwE,GAChB,QAApBC,EAAAf,EAAM8C,sBAAc,IAAA/B,GAApBA,EAAsBgC,SAEtB/C,EAAQQ,EAASgC,WAAWQ,IAAIlC,GAEpCH,EAAUG,GAAad,GAGjBgB,EAAWhB,EAAMiD,SAAS,OACvBC,OAAS,CAAC,CAACpF,IACpBkD,EAASmC,OAAOC,KAAKC,MAAO,EAC5BrC,EAASmC,OAAOC,KAAKE,KAAO,GAC5BtC,EAASmC,OAAOI,KAAKC,MAAQ,UAG7BxD,EAAMiD,SAAS,OAAOE,OAAOM,YAAc,IAC9C,OAAAlB,EAAAnL,EAAA,EAEKkJ,EAAQoC,OAAM,OAiFpB,IA9EMzB,EAAuB,SAACyC,GAG1B,IAFA,IAAIC,EAAO,GACPC,EAAS,GACNF,EAAS,GACZC,GAAQD,EAAS,GAAK,GACtBE,EAASC,OAAOC,aAAaH,EAAO,IAAMC,EAC1CF,GAAUA,EAASC,EAAO,GAAK,GAEnC,OAAOC,CACX,EAEM1C,EAAc,SAAClB,EAAO+D,EAAUC,EAAO9I,EAASgI,GAClD,IAAMe,EAAUhD,EAAqB/F,EAAQ3E,QAGvCgL,EAAYvB,EAAMiD,SAAS,IAADxF,OAAKsG,IACrCxC,EAAU2B,OAAS,CAAC,CAACc,IACrBzC,EAAU4B,OAAOC,KAAKC,MAAO,EAC7BU,IAGA,IAAMG,EAAclE,EAAMiD,SAAS,IAADxF,OAAKsG,EAAQ,KAAAtG,OAAIwG,GAAOxG,OAAGsG,IAgB7D,OAfAG,EAAYhB,OAAS,CAAChI,GACtBgJ,EAAYf,OAAOI,KAAKC,MAAQ,UAChCU,EAAYf,OAAOC,KAAKC,MAAO,EAC/BU,IAGIb,EAAO3M,OAAS,GACEyJ,EAAMiD,SAAS,IAADxF,OAAKsG,EAAQ,KAAAtG,OAAIwG,GAAOxG,OAAGsG,EAAWb,EAAO3M,OAAS,IAC5E2M,OAASA,EACnBa,GAAYb,EAAO3M,SAEnByJ,EAAMiD,SAAS,IAADxF,OAAKsG,IAAYb,OAAS,CAAC,CAAC,sBAC1Ca,KAGGA,EAAW,CACtB,EAGM5C,EAAiB,QAEnBT,EAAcmC,SAAS1B,IACvBC,EAAaZ,EAASgC,WAAWlG,QAAQ6E,GAChB,QAAzBE,EAAAD,EAAW0B,sBAAc,IAAAzB,GAAzBA,EAA2B0B,SAE3B3B,EAAaZ,EAASgC,WAAWQ,IAAI7B,GAEzCR,EAAUQ,GAAkBC,EAGbA,EAAW6B,SAAS,SAC5BE,OAAOI,KAAKC,MAAQ,WAGrBlC,EAAWF,EAAW6B,SAAS,OAC5BC,OAAS,CAAC,CAAC,sHACpB5B,EAAS6B,OAAOgB,oBAAsB,SACtC7C,EAAS6B,OAAOiB,UAAY,IAEtB7C,EAAYH,EAAW6B,SAAS,OAC5BC,OAAS,CAAC,CAAC,oBACrB3B,EAAU4B,OAAOC,KAAKC,MAAO,EAC7B9B,EAAU4B,OAAOC,KAAKE,KAAO,GAC7B/B,EAAU4B,OAAOgB,oBAAsB,wBAYnC3C,EAAS,EACbC,EAAA,EAAAC,EAViB,CACb,CAAE5D,KAAM,iBAAkBjD,OAAQ,qBAClC,CAAEiD,KAAM,iBAAkBjD,OAAQ,qBAClC,CAAEiD,KAAM,8BAA+BjD,OAAQ,kBAC/C,CAAEiD,KAAM,2BAA4BjD,OAAQ,mBAC5C,CAAEiD,KAAM,6BAA8BjD,OAAQ,oBAKpB4G,EAAAC,EAAAnL,OAAAkL,IAAnBE,EAAOD,EAAAD,IACRG,EAAOR,EAAW6B,SAAS,IAADxF,OAAK+D,KAChC0B,OAAS,CAAC,CAACvB,EAAQ7D,OACxB8D,EAAKyC,SAAW,CAAC,CAAC,kBAAD5G,OAAkBkE,EAAQ9G,OAAOkB,MAAM,KAAK,GAAE,MAAA0B,OAAKkE,EAAQ9G,OAAOkB,MAAM,KAAK,GAAE,QAAA0B,OAAOkE,EAAQ7D,KAAI,QACnH8D,EAAKuB,OAAOC,KAAKI,MAAQ,UACzB5B,EAAKuB,OAAOC,KAAKkB,UAAY,SAC7B1C,EAAKuB,OAAOgB,oBAAsB,OAClC3C,IAwJ+F,OApJnGJ,EAAW6B,SAAS,OAAOE,OAAOM,YAAc,GAGhDrC,EAAW6B,SAAS,OAASzB,GAAQ2B,OAAOgB,oBAAsB,wBAG5DtC,EAAWlB,EAAU,mBACvBnB,SAAe,QAAPe,EAARf,EAAUnH,aAAK,IAAAkI,OAAA,EAAfA,EAAiBhK,QAAS,IACpBuL,EAAWtC,EAASnH,MACpB0J,EAAe,CAAC,aAChBC,EAAiB,IAAIuC,IAE3BzC,EAAS0C,QAAQ,SAAAlC,GACbxN,OAAO2P,KAAKnC,GAAKkC,QAAQ,SAAA5P,IAChBmN,EAAac,SAASjO,IAAQ,gBAAgB6B,KAAK7B,IAAMoN,EAAegB,IAAIpO,EACrF,EACJ,GAEMqN,EAAuByC,MAAMC,KAAK3C,GAAgB4C,KAAK,SAAC5M,EAAGnB,GAAC,OAC9DgO,SAAS7M,EAAErB,QAAQ,KAAM,IAAIA,QAAQ,IAAK,KAAOkO,SAAShO,EAAEF,QAAQ,KAAM,IAAIA,QAAQ,IAAK,IAAI,GAE7FuL,EAAa,CAAC,aAAWzE,OAAAqH,EAAK7C,IAC9BE,EAAYL,EAAS9F,IAAI,SAAAsG,GAAG,OAAIJ,EAAWlG,IAAI,SAAA+I,GAAC,IAAAC,EAAAC,EAAA,OAAU,QAAVD,EAAI1C,EAAIyC,UAAE,IAAAC,EAAAA,EAAW,cAAND,GAAiC,QAAhBE,EAAG3C,EAAI4C,iBAAS,IAAAD,EAAAA,EAAS,EAAE,EAAE,GAInHpD,EAASoB,SAAS,IAADxF,OADA,IACiByF,OAAS,CAAC,CAAC,mBAC7CrB,EAASoB,SAAS,IAADxF,OAFA,IAEiB0F,OAAOC,KAAKC,MAAO,EACrDxB,EAASoB,SAAS,IAADxF,OAHA,IAGiB0F,OAAOC,KAAKE,KAAO,GACrDzB,EAASoB,SAAS,IAADxF,OAJA,IAIiB0F,OAAOI,KAAKC,MAAQ,UACtD3B,EAASoB,SAAS,IAADxF,OALA,IAKiB0F,OAAOgB,oBAAsB,wBAG/DjD,EAAYW,EARK,EAQe,iBAAkBK,EAAYC,IAG5DgD,EAA0B,SAACC,GAAoB,IAAdC,EAAK9L,UAAAhD,OAAA,QAAAlC,IAAAkF,UAAA,GAAAA,UAAA,GAAG,EAC3C,IAAK6L,EAAM,MAAO,GAClB,IACsBE,EADhBC,EAAO,GAAGC,EAAAC,EACEL,GAAI,IAAtB,IAAAI,EAAA5C,MAAA0C,EAAAE,EAAApO,KAAAgB,MAAwB,KAAAsN,EAAbpD,EAAGgD,EAAAjN,MACVkN,EAAKI,KAAIC,EAAAA,EAAC,CAAC,EAAItD,GAAG,IAAEuD,OAAQR,KACf,QAAbK,EAAIpD,EAAIwD,aAAK,IAAAJ,GAATA,EAAWnP,QACXgP,EAAKI,KAAInM,MAAT+L,EAAIT,EAASK,EAAwB7C,EAAIwD,MAAOT,EAAQ,IAEhE,CAAC,OAAAU,GAAAP,EAAAlQ,EAAAyQ,EAAA,SAAAP,EAAA5N,GAAA,CACD,OAAO2N,CACX,EAIMlD,EAAkB,SAACrC,EAAO+D,EAAUiC,EAAgBC,EAAkBC,GACxE,IAAMnE,EAAe,CAAC,aAEhBoE,EAAa,SAACf,GAChB,GAAKA,UAAAA,EAAM7O,OAAQ,MAAO,GAC1B,IAAM2E,EAAU,IAAIqJ,IAMpB,OALAa,EAAKZ,QAAQ,SAAAlC,GACTxN,OAAO2P,KAAKnC,GAAKkC,QAAQ,SAAA4B,IAChBrE,EAAac,SAASuD,IAAM,uBAAuB3P,KAAK2P,IAAIlL,EAAQ8H,IAAIoD,EACjF,EACJ,GACO1B,MAAMC,KAAKzJ,GAAS0J,KAAK,SAAC5M,EAAGnB,GAChC,IAAMwP,EAAS,CAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,GAAGC,IAAI,IAClFC,EAAY,SAAAtE,GAAK,IAAAuE,EAA8DC,EAAAlH,EAArC0C,EAAEyE,MAAM,yBAA2B,GAAE,GAAlDC,GAAFF,EAAA,GAAKA,EAAA,IAAEG,EAAIH,EAAA,GAA2C,OAAO,IAAII,KAAK3C,SAAS0C,GAAkB,QAAbJ,EAAEd,EAAOiB,UAAI,IAAAH,EAAAA,EAAE,EAAI,EACxI,OAAOD,EAAUlP,GAAKkP,EAAUrQ,EACpC,EACJ,EAEiBsP,EAAWH,GACXG,EAAWF,GAG5BjG,EAAMiD,SAAS,IAADxF,OAAKsG,IAAYb,OAAS,CAAC,CAACgD,IAC1ClG,EAAMiD,SAAS,IAADxF,OAAKsG,IAAYZ,OAAOC,KAAKC,MAAO,EAClDrD,EAAMiD,SAAS,IAADxF,OAAKsG,IAAYZ,OAAOC,KAAKE,KAAO,GAClDtD,EAAMiD,SAAS,IAADxF,OAAKsG,IAAYZ,OAAOI,KAAKC,MAAQ,UACnDxD,EAAMiD,SAAS,IAADxF,OAAKsG,IAAYZ,OAAOgB,oBAAsB,wBAC5DJ,IAEA,IAAM0D,EAAc,SAACrC,EAAMpB,GACvB,GAAKoB,UAAAA,EAAM7O,OAAQ,OAAOwN,EAE1B,IAAM2D,EAAWvC,EAAwBC,GACnClK,EAAU,CAAC,aAAWuC,OAAAqH,EAAKqB,EAAWf,KACtClC,EAASwE,EAAS1L,IAAI,SAAAsG,GAAG,OAAIpH,EAAQc,IAAI,SAAA+I,GAAC,IAAA4C,EAAAC,EAAA,MAAU,cAAN7C,EAC9C,IAAI8C,OAAoB,EAAbvF,EAAIuD,SAA4B,QAAjB8B,EAAIrF,EAAI4C,iBAAS,IAAAyC,EAAAA,EAAI,IACzC,QAD4CC,EAClDtF,EAAIyC,UAAE,IAAA6C,EAAAA,EAAI,EAAE,EAAC,GAEbE,EAAe/D,EACrBA,EAAW7C,EAAYlB,EAAO8H,EAAc9D,EAAO9I,EAASgI,GAG5DwE,EAASlD,QAAQ,SAAClC,EAAKyF,GACfzF,EAAIuD,OAAS,IACH7F,EAAMiD,SAAS,IAADxF,OAAKqK,EAAe,EAAIC,EAAG,KAAAtK,OAAIoG,OAAOC,aAAa,GAAK5I,EAAQ3E,OAAS,IAAEkH,OAAGqK,EAAe,EAAIC,IACvH5E,OAAOC,KAAKE,KAAO,GAE7B,GAIA,IADA,IAAI9M,EAAI,EACDA,EAAIkR,EAASnR,QAAQ,CACxB,IAAMyR,EAAaN,EAASlR,GACtByR,EAAUP,EAASlR,EAAI,GAG7B,GAAIyR,GAAWA,EAAQpC,OAASmC,EAAWnC,OAAQ,CAK/C,IAJA,IAAMqC,EAAgBJ,EAAe,GAAKtR,EAAI,GAC1C2R,EAAI3R,EAAI,EAGL2R,EAAIT,EAASnR,QAAUmR,EAASS,GAAGtC,OAASmC,EAAWnC,QAC1DsC,IAGJ,IAAMC,EAAcN,EAAe,GAAKK,EAAI,GAGxCD,GAAiBE,GACjBpI,EAAMiD,SAAS,IAADxF,OAAKyK,EAAa,MAAAzK,OAAK2K,IAAeC,eAAeC,QAIvE9R,EAAI2R,CACR,MAEI3R,GAER,CAEA,OAAOuN,CACX,EAKA,OAHAA,EAAW0D,EAAYxB,EAAkB,gBACzClC,EAAW0D,EAAYzB,EAAgB,aAG3C,EAGA3D,EAAgB1B,EAAU,kBAAmB,EAAGxB,EAAS9G,MAAO6G,EAAS7G,MAAO,iBAG5EiK,EAAM,EACVA,EAAMD,EAAgB1B,EAAU,eAAgB2B,EAAKjD,EAAQhH,MAAO+G,EAAQ/G,MAAO,iBACnFiK,IACAA,EAAMD,EAAgB1B,EAAU,eAAgB2B,EAAKrD,EAAU5G,MAAO2G,EAAU3G,MAAO,cACvFiK,IACAA,EAAMD,EAAgB1B,EAAU,eAAgB2B,EAAK/C,EAAQlH,MAAOiH,EAAQjH,MAAO,gBAAgBkK,EAAAnL,EAAA,EAE7FkJ,EAAQoC,OAAM,cAAAH,EAAAvK,EAAA,KAAAqI,EAAA,IACvB,gBAAAkI,GAAA,OAAAnI,EAAA5G,MAAA,KAAAD,UAAA,EAlRc,IAkRb,OAEF2C,QAAQ2D,IAAI,wCAAwCH,EAAAtI,EAAA,eAAAsI,EAAA9I,EAAA,EAAA6I,EAAAC,EAAA3H,EAGpDmE,QAAQC,MAAM,yBAAwBsD,GACtClC,MAAM,4DAA4D,cAAAmC,EAAA1H,EAAA,KAAA4F,EAAA,iBAExE,cAAAZ,EAAAhF,EAAA,KAAA6E,EAAA,IACL,gBAAA2L,GAAA,OAAA5L,EAAApD,MAAA,KAAAD,UAAA,EAxZa,G,ICzJmB,IAAIkP,IAAI,a","sources":["webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/define property getters","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global console, document, Excel, Office */\n\n/*Office.onReady((info) => {\n  if (info.host === Office.HostType.Excel) {\n    document.getElementById(\"sideload-msg\").style.display = \"none\";\n    document.getElementById(\"app-body\").style.display = \"flex\";\n    document.getElementById(\"run\").onclick = run;\n  }\n});*/\n\nexport async function run() {\n  try {\n    await Excel.run(async (context) => {\n      /**\n       * Insert your Excel code here\n       */\n      const range = context.workbook.getSelectedRange();\n\n      // Read the range address\n      range.load(\"address\");\n\n      // Update the fill color\n      range.format.fill.color = \"yellow\";\n\n      await context.sync();\n      console.log(`The range address was ${range.address}.`);\n    });\n  } catch (error) {\n    console.error(error);\n  }\n}\n\ndocument.getElementById(\"loginForm\").addEventListener(\"submit\", async (e) => {\n    e.preventDefault();\n\n    const email = e.target.email.value;\n    const password = e.target.password.value;\n\n    // Show spinner\n    const loginText = document.getElementById(\"loginText\");\n    const loginSpinner = document.getElementById(\"loginSpinner\");\n    loginText.style.display = \"none\";\n    loginSpinner.style.display = \"block\";\n\n    try {\n        const resUser = await fetch(\"https://www.transcriptanalyser.com/payment/getUser\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ email, password })\n        });\n\n        if (!resUser.ok) throw new Error(\"Login failed\");\n\n        const user = await resUser.json();\n\n        if (!user || !user.UserId) throw new Error(\"Invalid user data\");\n\n\n        const resMembership = await fetch(\"https://transcriptanalyser.com/payment/check_membership\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ user_id: user.UserId })\n        });\n\n        if (!resMembership.ok) throw new Error(\"Membership check failed\");\n\n        const membership = await resMembership.json();\n\n\n        document.getElementById(\"loginScreen\").style.display = \"none\";\n        document.getElementById(\"blockedContainer\").style.display = \"none\";\n\n        if (membership.is_member === \"yes\") {\n            localStorage.setItem(\"user\", JSON.stringify(user));\n            localStorage.setItem(\"membership\", JSON.stringify(membership));\n\n            document.getElementById(\"memberContent\").style.display = \"block\";\n            document.getElementById(\"addinUI\").style.display = \"block\";\n            document.getElementById(\"logoutBtn\").style.display = \"block\";\n\n            const profileIcon = document.getElementById(\"profileIcon\");\n            const username = document.getElementById(\"username\");\n\n            if (user.FullName) {\n                username.textContent = user.FullName;\n                const initials = user.FullName.split(\" \").map(n => n[0]).join(\"\").toUpperCase();\n                profileIcon.textContent = initials;\n            }\n        } else {\n            document.getElementById(\"blockedContainer\").style.display = \"flex\";\n        }\n\n    } catch (err) {\n        console.error(err);\n        document.getElementById(\"loginScreen\").style.display = \"none\";\n        document.getElementById(\"memberContent\").style.display = \"none\";\n        document.getElementById(\"blockedContainer\").style.display = \"flex\";\n    } finally {\n        loginText.style.display = \"block\";\n        loginSpinner.style.display = \"none\";\n    }\n});\n\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n    const savedUser = localStorage.getItem(\"user\");\n    const savedMembership = localStorage.getItem(\"membership\");\n\n    if (savedUser && savedMembership) {\n        const user = JSON.parse(savedUser);\n        const membership = JSON.parse(savedMembership);\n\n        if (membership.is_member === \"yes\") {\n            // Show add-in UI directly\n            document.getElementById(\"memberContent\").style.display = \"block\";\n            document.getElementById(\"addinUI\").style.display = \"block\";\n            document.getElementById(\"logoutBtn\").style.display = \"block\";\n\n            const profileIcon = document.getElementById(\"profileIcon\");\n            const username = document.getElementById(\"username\");\n\n            if (user && user.FullName) {\n                username.textContent = user.FullName;\n                const initials = user.FullName.split(\" \").map(n => n[0]).join(\"\").toUpperCase();\n                profileIcon.textContent = initials;\n            }\n\n            return; // Exit: don't show login screen\n        }\n    }\n\n    // No session → show login\n    document.getElementById(\"loginScreen\").style.display = \"flex\";\n});\n\n\n\n\ndocument.getElementById(\"logoutBtn\").addEventListener(\"click\", () => {\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"membership\");\n\n    document.getElementById(\"memberContent\").style.display = \"none\";\n    document.getElementById(\"addinUI\").style.display = \"none\";\n    document.getElementById(\"logoutBtn\").style.display = \"none\";\n    document.getElementById(\"loginScreen\").style.display = \"flex\";\n});\n\n\n\nOffice.onReady(async (info) => {\n    if (info.host !== Office.HostType.Excel) return;\n\n    const refreshBtn = document.getElementById(\"refreshBtn\");\n    const helpBtn = document.getElementById(\"helpBtn\");\n\n    function getExcelColumnLetter(colNum) {\n        let letter = \"\";\n        while (colNum > 0) {\n            let mod = (colNum - 1) % 26;\n            letter = String.fromCharCode(65 + mod) + letter;\n            colNum = Math.floor((colNum - mod) / 26);\n        }\n        return letter;\n    }\n\n    // Attach Help button\n    helpBtn.onclick = () => {\n        const toggle = document.getElementById(\"dropdownToggle\");\n        const fincode = toggle.dataset.value;\n        if (!fincode) return alert(\"Select a company first.\");\n\n        const url = `https://www.goindiastocks.com/companyinfo/${encodeURIComponent(fincode)}`;\n        window.open(url, \"_blank\");\n    };\n\n    // Attach Refresh button\n    refreshBtn.onclick = async () => {\n        const toggle = document.getElementById(\"dropdownToggle\");\n        const fincode = toggle.dataset.value;\n        const name = toggle.textContent;\n\n        if (!fincode) return alert(\"Select a company first.\");\n\n        const sectorType = document.getElementById(\"dropdownToggle\").dataset.sector;\n\n        // ✅ Read toggle state\n        const modeToggle = document.getElementById(\"modeToggle\");\n        const isIndAS = modeToggle.checked; // true = IndAS, false = Detailed\n\n        // ✅ Decide suffix\n        const sheetSuffix = isIndAS ? \"\" : \"IND\"; // \"\" for In, \"IND\" for De\n\n        console.log(sectorType)\n\n        try {\n            console.log(`🔄 Refreshing data for: ${fincode} - ${name} | Mode: ${isIndAS ? \"In\" : \"De\"}`);\n\n            // === Fetch all APIs in parallel ===\n            const [\n                cashCResp, cashSResp,\n                qplCResp, qplSResp,\n                bsCResp, bsSResp,\n                plCResp, plSResp,\n                keyfResp] = await Promise.all([\n\n                    // Cash Flows\n                    fetch(\"https://transcriptanalyser.com/goindiastock/annual_profitloss\", {\n                        method: \"POST\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                        body: JSON.stringify({ fincode, mode: \"C\", sector: sectorType, sheet: `CashFlow${sheetSuffix}` })\n                    }),\n                    fetch(\"https://transcriptanalyser.com/goindiastock/annual_profitloss\", {\n                        method: \"POST\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                        body: JSON.stringify({ fincode, mode: \"S\", sector: sectorType, sheet: `CashFlow${sheetSuffix}` })\n                    }),\n\n                    // Quarterly Profit & Loss\n                    fetch(\"https://transcriptanalyser.com/goindiastock/annual_profitloss\", {\n                        method: \"POST\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                        body: JSON.stringify({ fincode, mode: \"C\", sector: sectorType, sheet: `QProfitLoss${sheetSuffix}` })\n                    }),\n                    fetch(\"https://transcriptanalyser.com/goindiastock/annual_profitloss\", {\n                        method: \"POST\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                        body: JSON.stringify({ fincode, mode: \"S\", sector: sectorType, sheet: `QProfitLoss${sheetSuffix}` })\n                    }),\n\n                    // Balance Sheet\n                    fetch(\"https://transcriptanalyser.com/goindiastock/annual_profitloss\", {\n                        method: \"POST\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                        body: JSON.stringify({ fincode, mode: \"C\", sector: sectorType, sheet: `BalanceSheet${sheetSuffix}` })\n                    }),\n                    fetch(\"https://transcriptanalyser.com/goindiastock/annual_profitloss\", {\n                        method: \"POST\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                        body: JSON.stringify({ fincode, mode: \"S\", sector: sectorType, sheet: `BalanceSheet${sheetSuffix}` })\n                    }),\n\n                    // Profit & Loss\n                    fetch(\"https://transcriptanalyser.com/goindiastock/annual_profitloss\", {\n                        method: \"POST\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                        body: JSON.stringify({ fincode, mode: \"C\", sector: sectorType, sheet: `ProfitLoss${sheetSuffix}` })\n                    }),\n                    fetch(\"https://transcriptanalyser.com/goindiastock/annual_profitloss\", {\n                        method: \"POST\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                        body: JSON.stringify({ fincode, mode: \"S\", sector: sectorType, sheet: `ProfitLoss${sheetSuffix}` })\n                    }),\n\n                    // Key Financials (single) → does NOT depend on IND suffix\n                    fetch(\"https://transcriptanalyser.com/goindiastock/actuals_forwards\", {\n                        method: \"POST\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                        body: JSON.stringify({ fincode, mode: \"C\", sector_type: sectorType })\n                    })\n                ]);\n\n            const [\n                cashCData, cashSData,\n                qplCData, qplSData,\n                bsCData, bsSData,\n                plCData, plSData,\n                keyfData] = await Promise.all([\n                cashCResp.json(), cashSResp.json(),\n                qplCResp.json(), qplSResp.json(),\n                bsCResp.json(), bsSResp.json(),\n                plCResp.json(), plSResp.json(),\n                keyfResp.json()\n            ]);\n\n            await Excel.run(async (context) => {\n                const workbook = context.workbook;\n                const sheetNames = [\"Key Financials\", \"Quarterly Data\", \"Annual Data\"];\n                workbook.worksheets.load(\"items/name\");\n                await context.sync();\n\n                const existingNames = workbook.worksheets.items.map(s => s.name);\n                const sheetsMap = {};\n\n                // Create or reset sheets\n                for (const sheetName of sheetNames) {\n                    let sheet;\n                    if (existingNames.includes(sheetName)) {\n                        sheet = workbook.worksheets.getItem(sheetName);\n                        sheet.getUsedRange()?.clear();\n                    } else {\n                        sheet = workbook.worksheets.add(sheetName);\n                    }\n                    sheetsMap[sheetName] = sheet;\n\n                    // Company name in A1\n                    const nameCell = sheet.getRange(\"A1\");\n                    nameCell.values = [[name]];\n                    nameCell.format.font.bold = true;\n                    nameCell.format.font.size = 14;\n                    nameCell.format.fill.color = \"#bed1f8\";\n\n                    // Make column A wider\n                    sheet.getRange(\"A:A\").format.columnWidth = 180; \n                }\n\n                await context.sync(); // commit sheet setup\n\n                // --- Helper ---\n                const getExcelColumnLetter = (colNum) => {\n                    let temp = \"\";\n                    let letter = \"\";\n                    while (colNum > 0) {\n                        temp = (colNum - 1) % 26;\n                        letter = String.fromCharCode(temp + 65) + letter;\n                        colNum = (colNum - temp - 1) / 26;\n                    }\n                    return letter;\n                };\n\n                const formatTable = (sheet, startRow, title, headers, values) => {\n                    const lastCol = getExcelColumnLetter(headers.length);\n\n                    // Title row\n                    const titleCell = sheet.getRange(`A${startRow}`);\n                    titleCell.values = [[title]];\n                    titleCell.format.font.bold = true;\n                    startRow++;\n\n                    // Header row\n                    const headerRange = sheet.getRange(`A${startRow}:${lastCol}${startRow}`);\n                    headerRange.values = [headers];\n                    headerRange.format.fill.color = \"#e0e0e0\";\n                    headerRange.format.font.bold = true;\n                    startRow++;\n\n                    // Data rows\n                    if (values.length > 0) {\n                        const dataRange = sheet.getRange(`A${startRow}:${lastCol}${startRow + values.length - 1}`);\n                        dataRange.values = values;\n                        startRow += values.length;\n                    } else {\n                        sheet.getRange(`A${startRow}`).values = [[\"No data available\"]];\n                        startRow++;\n                    }\n\n                    return startRow + 1; // leave a blank row\n                };\n\n                // --- Index Sheet ---\n                const indexSheetName = \"Index\";\n                let indexSheet;\n                if (existingNames.includes(indexSheetName)) {\n                    indexSheet = workbook.worksheets.getItem(indexSheetName);\n                    indexSheet.getUsedRange()?.clear();\n                } else {\n                    indexSheet = workbook.worksheets.add(indexSheetName);\n                }\n                sheetsMap[indexSheetName] = indexSheet;\n\n                // Setup appearance\n                const topRow = indexSheet.getRange(\"A1:Z1\");\n                topRow.format.fill.color = \"#173760\";\n\n                // Insert the logo and title\n                const logoCell = indexSheet.getRange(\"A2\");\n                logoCell.values = [['=IMAGE(\"https://www.goindiastocks.com/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Flogo.eb4c0c16.png&w=1920&q=75\")']];\n                logoCell.format.horizontalAlignment = \"Center\";\n                logoCell.format.rowHeight = 60;\n\n                const titleCell = indexSheet.getRange(\"A3\");\n                titleCell.values = [[\"GO INDIA STOCKS\"]];\n                titleCell.format.font.bold = true;\n                titleCell.format.font.size = 16;\n                titleCell.format.horizontalAlignment = \"CenterAcrossSelection\";\n\n                // List of sections with targets\n                const sections = [\n                    { name: \"Key Financials\", target: \"Key Financials!A1\" },\n                    { name: \"Quarterly Data\", target: \"Quarterly Data!A1\" },\n                    { name: \"Annual Data - Balance Sheet\", target: \"Annual Data!A3\" },\n                    { name: \"Annual Data - Cash Flows\", target: \"Annual Data!A20\" },\n                    { name: \"Annual Data - Detailed P&L\", target: \"Annual Data!A37\" },\n                ];\n\n                // Insert navigation links\n                let rowIdx = 5;\n                for (const section of sections) {\n                    const cell = indexSheet.getRange(`A${rowIdx}`);\n                    cell.values = [[section.name]];\n                    cell.formulas = [[`=HYPERLINK(\"#'${section.target.split(\"!\")[0]}'!${section.target.split(\"!\")[1]}\", \"${section.name}\")`]];\n                    cell.format.font.color = \"#1155CC\";\n                    cell.format.font.underline = \"Single\";\n                    cell.format.horizontalAlignment = \"Left\";\n                    rowIdx++;\n                }\n\n                // Adjust column width\n                indexSheet.getRange(\"A:A\").format.columnWidth = 50;\n\n                // Align all content\n                indexSheet.getRange(\"A2:A\" + rowIdx).format.horizontalAlignment = \"CenterAcrossSelection\";\n\n                // --- Key Financials ---\n                const keySheet = sheetsMap[\"Key Financials\"];\n                if (keyfData?.value?.length > 0) {\n                    const keyArray = keyfData.value;\n                    const staticFields = [\"Parameter\"];\n                    const dynamicHeaders = new Set();\n\n                    keyArray.forEach(row => {\n                        Object.keys(row).forEach(key => {\n                            if (!staticFields.includes(key) && /^FY\\d{4}(E)?$/.test(key)) dynamicHeaders.add(key);\n                        });\n                    });\n\n                    const sortedDynamicHeaders = Array.from(dynamicHeaders).sort((a, b) =>\n                        parseInt(a.replace(\"FY\", \"\").replace(\"E\", \"\")) - parseInt(b.replace(\"FY\", \"\").replace(\"E\", \"\"))\n                    );\n                    const keyHeaders = [\"Parameter\", ...sortedDynamicHeaders];\n                    const keyValues = keyArray.map(row => keyHeaders.map(h => row[h] ?? (h === \"Parameter\" ? row.Parameter ?? \"\" : \"\")));\n\n                    // Format the title row\n                    const startRow = 3; // same as you pass to formatTable\n                    keySheet.getRange(`A${startRow}`).values = [[\"Key Financials\"]];\n                    keySheet.getRange(`A${startRow}`).format.font.bold = true;\n                    keySheet.getRange(`A${startRow}`).format.font.size = 14;\n                    keySheet.getRange(`A${startRow}`).format.fill.color = \"#d9ead3\";\n                    keySheet.getRange(`A${startRow}`).format.horizontalAlignment = \"CenterAcrossSelection\";\n\n                    // Then format the actual table\n                    formatTable(keySheet, startRow, \"Key Financials\", keyHeaders, keyValues);\n                }\n\n                const flattenHierarchicalData = (data, level = 0) => {\n                    if (!data) return [];\n                    const rows = [];\n                    for (const row of data) {\n                        rows.push({ ...row, _level: level });\n                        if (row.child?.length) {\n                            rows.push(...flattenHierarchicalData(row.child, level + 1));\n                        }\n                    }\n                    return rows;\n                };\n\n\n                // --- Helper: Write Standalone + Consolidated side by side ---\n                const writeSideBySide = (sheet, startRow, standaloneData, consolidatedData, sectionName) => {\n                    const staticFields = [\"Parameter\"];\n\n                    const getHeaders = (data) => {\n                        if (!data?.length) return [];\n                        const headers = new Set();\n                        data.forEach(row => {\n                            Object.keys(row).forEach(k => {\n                                if (!staticFields.includes(k) && /^[A-Z][a-z]{2}\\d{4}$/.test(k)) headers.add(k);\n                            });\n                        });\n                        return Array.from(headers).sort((a, b) => {\n                            const months = { Jan:0,Feb:1,Mar:2,Apr:3,May:4,Jun:5,Jul:6,Aug:7,Sep:8,Oct:9,Nov:10,Dec:11 };\n                            const parseDate = s => { const [_, mon, year] = s.match(/^([A-Za-z]+)(\\d{4})$/) || []; return new Date(parseInt(year), months[mon]??0); };\n                            return parseDate(a) - parseDate(b);\n                        });\n                    };\n\n                    const sHeaders = getHeaders(standaloneData);\n                    const cHeaders = getHeaders(consolidatedData);\n\n                    // Section title\n                    sheet.getRange(`A${startRow}`).values = [[sectionName]];\n                    sheet.getRange(`A${startRow}`).format.font.bold = true;\n                    sheet.getRange(`A${startRow}`).format.font.size = 14;\n                    sheet.getRange(`A${startRow}`).format.fill.color = \"#d9ead3\";\n                    sheet.getRange(`A${startRow}`).format.horizontalAlignment = \"CenterAcrossSelection\";\n                    startRow++;\n\n                    const processData = (data, title) => {\n                        if (!data?.length) return startRow;\n\n                        const flatData = flattenHierarchicalData(data);\n                        const headers = [\"Parameter\", ...getHeaders(data)];\n                        const values = flatData.map(row => headers.map(h => h === \"Parameter\" \n                            ? \" \".repeat(row._level * 4) + (row.Parameter ?? \"\")\n                            : row[h] ?? \"\"));\n                        \n                        const dataStartRow = startRow;\n                        startRow = formatTable(sheet, dataStartRow, title, headers, values);\n\n                        // Apply smaller font for children (level > 0)\n                        flatData.forEach((row, idx) => {\n                            if (row._level > 0) {\n                                const r = sheet.getRange(`A${dataStartRow + 1 + idx}:${String.fromCharCode(65 + headers.length - 1)}${dataStartRow + 1 + idx}`);\n                                r.format.font.size = 11;\n                            }\n                        });\n\n                        // Corrected logic for outline grouping\n                        let i = 0;\n                        while (i < flatData.length) {\n                            const currentRow = flatData[i];\n                            const nextRow = flatData[i + 1];\n\n                            // If the next row is a child (higher level), we are at the start of a potential group\n                            if (nextRow && nextRow._level > currentRow._level) {\n                                const groupStartRow = dataStartRow + 1 + (i + 1); // Group starts at the child's row\n                                let j = i + 1;\n                                \n                                // Find the end of the contiguous block of children\n                                while (j < flatData.length && flatData[j]._level > currentRow._level) {\n                                    j++;\n                                }\n\n                                const groupEndRow = dataStartRow + 1 + (j - 1);\n                                \n                                // Ensure a valid range exists before attempting to group\n                                if (groupStartRow <= groupEndRow) {\n                                    sheet.getRange(`A${groupStartRow}:A${groupEndRow}`).getEntireRow().group();\n                                }\n\n                                // Move the main loop's index to the end of the grouped block\n                                i = j;\n                            } else {\n                                // If not a parent, just move to the next row\n                                i++;\n                            }\n                        }\n\n                        return startRow;\n                    };\n\n                    startRow = processData(consolidatedData, \"Consolidated\");\n                    startRow = processData(standaloneData, \"Standalone\");\n\n                    return startRow;\n                };\n\n                // --- Quarterly Data ---\n                writeSideBySide(sheetsMap[\"Quarterly Data\"], 3, qplSData.value, qplCData.value, \"Quarterly P&L\");\n\n                // --- Annual Data ---\n                let row = 3;\n                row = writeSideBySide(sheetsMap[\"Annual Data\"], row, bsSData.value, bsCData.value, \"Balance Sheet\");\n                row++;\n                row = writeSideBySide(sheetsMap[\"Annual Data\"], row, cashSData.value, cashCData.value, \"Cash Flows\");\n                row++;\n                row = writeSideBySide(sheetsMap[\"Annual Data\"], row, plSData.value, plCData.value, \"Detailed P&L\");\n\n                await context.sync();\n            });\n\n            console.log(\"✅ Data successfully written to Excel\");\n\n        } catch (err) {\n            console.error(\"❌ Error in refreshBtn:\", err);\n            alert(\"Failed to fetch company data. Check console for details.\");\n        }\n    };\n});\n","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\n// Module\nvar code = \" <!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>GoIndia Add-in</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://res-1.cdn.office.net/files/fabric-cdn-prod_20230815.002/office-ui-fabric-core/11.1.0/css/fabric.min.css\\\"/> <link href=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> </head> <body class=\\\"ms-font-m ms-welcome ms-Fabric\\\"> <link rel=\\\"stylesheet\\\" href=\\\"https://cdn.jsdelivr.net/npm/choices.js/public/assets/styles/choices.min.css\\\"/> <\" + \"script src=\\\"https://cdn.jsdelivr.net/npm/choices.js/public/assets/scripts/choices.min.js\\\"><\" + \"/script> <\" + \"script src=\\\"https://accounts.google.com/gsi/client\\\" async defer=\\\"defer\\\"><\" + \"/script> <style>#buttons{display:flex;flex-direction:row;gap:4px;align-items:flex-start}button{color:#fff;font-weight:400;border:none;border-radius:8px;padding:8px 16px;font-size:14px;margin-top:8px;cursor:pointer;transition:background-color .2s,transform .1s,box-shadow .2s;box-shadow:0 2px 4px rgba(0,0,0,.2)}#refreshBtn{background-color:#275b9f}#refreshBtn:hover{background-color:#173760;transform:translateY(-1px);box-shadow:0 4px 8px rgba(0,0,0,.25)}#refreshBtn:active{transform:translateY(0);box-shadow:0 2px 4px rgba(0,0,0,.2)}#helpBtn{background-color:#d80404}#helpBtn:hover{background-color:#b80000;transform:translateY(-1px);box-shadow:0 4px 8px rgba(0,0,0,.25)}#helpBtn:active{transform:translateY(0);box-shadow:0 2px 4px rgba(0,0,0,.2)}#logoutBtn:hover{background-color:#b80000;transform:translateY(-1px);box-shadow:0 4px 8px rgba(0,0,0,.25)}#profileSection:hover{background-color:#b80000;transform:translateY(-1px);box-shadow:0 4px 8px rgba(0,0,0,.25)}select{border-radius:8px;border:1px solid #ccc;padding:6px 12px;font-size:14px;cursor:pointer;width:250px;transition:border-color .2s,box-shadow .2s}select:focus{border-color:#0078d4;box-shadow:0 0 4px rgba(0,120,212,.5);outline:0}.dropdown{position:relative;width:280px;font-family:Arial,sans-serif}.dropdown-toggle{padding:10px 12px;width:250px;flex-direction:row;align-items:start;border:3px solid #d6e5f5;border-radius:8px;cursor:pointer;background-color:#fff;font-size:14px}.dropdown-toggle:active{border:3px solid #8bbef4}.dropdown-toggle:focus{border:3px solid #8bbef4}.dropdown-menu{position:absolute;top:100%;left:0;right:0;border:1px solid #8bbef4;border-radius:8px;background-color:#fff;max-height:300px;overflow-y:auto;display:none;margin-top:4px}.dropdown-menu.active{display:block;border:1px solid #8bbef4;border-radius:8px}.dropdown-menu input{width:calc(100% - 24px);margin:8px;padding:6px;border:1px solid #ccc;border-radius:6px;font-size:14px}.dropdown-menu ul{list-style:none;padding:0;margin:0}.dropdown-menu li{padding:8px 12px;cursor:pointer}.dropdown-menu li:hover{background-color:#f0f0f0}.arrow-down{width:0;height:0;border-left:6px solid transparent;border-right:6px solid transparent;border-top:6px solid #000}.toggle-container{display:flex;justify-content:flex-end;margin-bottom:5px;margin-left:160px;margin-top:40px;width:120px}.toggle-label{display:flex;align-items:center;justify-content:space-between;background:#e6e6e6;border-radius:10px;cursor:pointer;width:120px;height:29px;font-family:Arial,sans-serif;font-size:13px;font-weight:550;overflow:hidden;position:relative;transition:background-color .2s,transform .1s,box-shadow .2s}.toggle-label:active{transform:translateY(0);box-shadow:0 2px 4px rgba(0,0,0,.2)}.toggle-option{flex:1;text-align:center;z-index:2;transition:color .3s;font-size:12px}.toggle-slider{position:absolute;top:2px;left:2px;width:calc(50% - 4px);height:25px;background:#173760;border-radius:8px;transition:transform .3s;z-index:1}#modeToggle{display:none}#modeToggle:checked+.toggle-label .toggle-slider{transform:translateX(100%)}#modeToggle:checked+.toggle-label .left{color:#000}#modeToggle:checked+.toggle-label .right{color:#fff}#modeToggle:not(:checked)+.toggle-label .left{color:#fff}#modeToggle:not(:checked)+.toggle-label .right{color:#000}#loginScreen{width:100%;max-width:300px;display:flex;justify-content:start;align-items:flex-start}#loginWrapper{display:flex;flex-direction:column;align-items:start;justify-content:flex-start;min-height:100vh;background-color:#f3f4f6;padding:1rem;box-sizing:border-box}.login-container div{display:flex;flex-direction:column;gap:2px;align-items:flex-start}#loginScreen .login-container{background-color:#fff;border-radius:16px;padding:1.5rem 2rem;box-shadow:0 8px 20px rgba(0,0,0,.08);width:100%;max-width:360px;display:flex;flex-direction:column;align-items:center}#loginScreen h2{margin-bottom:1rem;text-align:center;font-size:1.75rem;color:#173760}#loginScreen input[type=email],#loginScreen input[type=password]{width:88%;padding:.6rem .9rem;border-radius:10px;border:1px solid #ccc;outline:0;font-size:.95rem;margin-bottom:.75rem;transition:border .2s;margin-right:20px}#loginScreen input:focus{border-color:#173760}#loginScreen button[type=submit]{width:100%;padding:.6rem .9rem;border-radius:10px;background-color:#173760;color:#fff;font-weight:600;font-size:.95rem;border:none;cursor:pointer;transition:transform .2s}#loginScreen button[type=submit]:hover{transform:scale(1.03)}#loginScreen .divider{display:flex;align-items:center;gap:.3rem;width:100%;margin:1rem 0}#loginScreen .divider hr{flex:1;border-color:#ccc}#loginScreen .divider span{font-size:.8rem;color:#999}#loginScreen .social-buttons{width:100%;display:flex;flex-direction:column;gap:.75rem;align-items:center}#loginScreen .apple-btn{display:flex;align-items:center;justify-content:center;gap:.4rem;background-color:#000;color:#fff;width:100%;padding:.45rem .8rem;border-radius:10px;font-weight:500;cursor:pointer;transition:transform .2s;border:none}#loginScreen .apple-btn:hover{transform:scale(1.03)}#loginScreen .signup{display:flex;align-items:center;justify-content:center;width:100%;margin-top:.75rem;font-size:.8rem;color:#173760}#loginScreen .signup button{background:#173760;border:1px solid #173760;border-radius:10px;height:35px;padding:.2rem .6rem;font-weight:500;cursor:pointer;transition:transform .2s}#loginScreen .signup button:hover{transform:scale(1.03)}#loginScreen .forgot{display:flex;flex-direction:column;gap:.2rem;margin-top:.5rem;width:100%;font-size:.75rem}#loginScreen .forgot button{background:0 0;border:none;color:#173760;cursor:pointer;text-align:left}#loginScreen .forgot button:hover{text-decoration:underline}#blockedContainer,#memberContent{width:100%;display:flex;flex-direction:column;align-items:start;justify-content:start;padding:1rem;box-sizing:border-box}#loginSpinner{border:2px solid #f3f3f3;border-top:2px solid #fff;border-radius:50%;width:16px;height:16px;animation:spin 1s linear infinite;margin:auto}@keyframes spin{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}</style> <div id=\\\"loginWrapper\\\" style=\\\"display:flex;justify-content:start;align-items:center;min-height:100vh;background:#f3f4f6;flex-direction:column\\\"> <div id=\\\"loginScreen\\\" style=\\\"width:100%;display:none;justify-content:center\\\"> <div class=\\\"login-container\\\" id=\\\"loginContainer\\\"> <img src=\\\"https://www.goindiastocks.com/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Flogo.eb4c0c16.png&w=1920&q=75\\\" alt=\\\"App Logo\\\" style=\\\"width:90px;height:60px;margin-bottom:10px\\\"/> <span style=\\\"font-family:'Open Sans',sans-serif;font-size:16px;margin-bottom:12px\\\"> <span style=\\\"color:#173760;font-weight:600\\\">GO INDIA</span> <span style=\\\"color:#b80000;font-weight:600\\\"> STOCKS</span> </span> <form id=\\\"loginForm\\\"> <input required type=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Email ID\\\"> <input required type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\"> <button type=\\\"submit\\\" class=\\\"login-btn\\\"> <span id=\\\"loginText\\\">Login</span> <div id=\\\"loginSpinner\\\" class=\\\"spinner\\\" style=\\\"display:none\\\"></div> </button> </form> <div class=\\\"divider\\\"> <hr><span>OR</span><hr> </div> <div class=\\\"social-buttons\\\"> <div id=\\\"googleSignInButton\\\"></div> </div> <div class=\\\"signup\\\"> <p>Don't have an account?</p> <button onclick='window.open(\\\"https://www.goindiastocks.com/loginpage\\\",\\\"_blank\\\")'> Sign Up </button> </div> </div> </div> <div id=\\\"memberContent\\\" style=\\\"display:none\\\"> <div id=\\\"addinUI\\\" style=\\\"display:none\\\"> <a href=\\\"https://www.goindiastocks.com/profile\\\" target=\\\"_blank\\\" id=\\\"profileSection\\\" style=\\\"position:absolute;top:5px;left:30px;display:flex;align-items:center;gap:.5rem;background:#fff;padding:.22rem .6rem;border-radius:10px;box-shadow:0 2px 4px rgba(0,0,0,.1);text-decoration:none;color:inherit\\\"> <div id=\\\"profileIcon\\\" style=\\\"width:32px;height:32px;background:#f0f0f0;border-radius:50%;display:flex;align-items:center;justify-content:center;font-weight:700;color:#555;font-size:14px\\\"> U </div> <span id=\\\"username\\\" style=\\\"font-size:14px;color:#333\\\">Username</span> </a> <div class=\\\"toggle-container\\\"> <input type=\\\"checkbox\\\" id=\\\"modeToggle\\\"/> <label for=\\\"modeToggle\\\" class=\\\"toggle-label\\\"> <span class=\\\"toggle-option left\\\">Detailed</span> <span class=\\\"toggle-option right\\\">IndAS</span> <span class=\\\"toggle-slider\\\"></span> </label> </div> <div class=\\\"dropdown\\\" id=\\\"customDropdown\\\"> <div class=\\\"dropdown-toggle\\\" id=\\\"dropdownToggle\\\" data-value=\\\"\\\">Select Company</div> <div class=\\\"dropdown-menu\\\" id=\\\"dropdownMenu\\\"> <input type=\\\"text\\\" id=\\\"dropdownSearch\\\" placeholder=\\\"Search company...\\\"/> <ul id=\\\"dropdownList\\\"></ul> </div> </div> <div id=\\\"buttons\\\"> <button id=\\\"refreshBtn\\\">Refresh</button> <button id=\\\"helpBtn\\\">Help</button> </div> <button id=\\\"logoutBtn\\\" style=\\\"margin-top:3rem;margin-left:0;background:#fff;color:#b80000;padding:.5rem 1rem;border:1px solid #b80000;border-radius:12px;cursor:pointer;transition:transform .2s,box-shadow .2s\\\"> Log Out </button> </div> </div> <div id=\\\"blockedContainer\\\" style=\\\"display:none;text-align:center;padding:2rem;width:100%\\\"> <div style=\\\"background:#fff;border-radius:20px;padding:2rem;max-width:400px;margin:auto;display:flex;flex-direction:column;align-items:center;justify-content:center\\\"> <img src=\\\"https://www.goindiastocks.com/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Flogo.eb4c0c16.png&w=1920&q=75\\\" alt=\\\"Membership Required\\\" style=\\\"width:100px;margin-bottom:1rem\\\"> <p style=\\\"color:#b80000;font-weight:700;margin-bottom:1rem\\\">Only GIIN Club members can access this add-in.</p> <button onclick='window.open(\\\"https://www.goindiastocks.com/pricing\\\",\\\"_blank\\\")' style=\\\"background:#173760;color:#fff;border:none;padding:.5rem 1rem;border-radius:12px;cursor:pointer\\\"> Join Now </button> </div> </div> </div> <\" + \"script>async function handleCredentialResponse(e){console.log(\\\"Google JWT token:\\\",e.credential);try{let t=await fetch(\\\"https://transcriptanalyser.com/payment/getGoogleuser\\\",{method:\\\"POST\\\",headers:{\\\"Content-Type\\\":\\\"application/json\\\"},body:JSON.stringify({token:e.credential})}),o=await t.json();console.log(\\\"User data:\\\",o);let n=await fetch(\\\"https://transcriptanalyser.com/payment/check_membership\\\",{method:\\\"POST\\\",headers:{\\\"Content-Type\\\":\\\"application/json\\\"},body:JSON.stringify({email:o.email})}),a=await n.json();console.log(\\\"Membership check:\\\",a),\\\"yes\\\"===a.is_member?(document.getElementById(\\\"loginContainer\\\").style.display=\\\"none\\\",document.getElementById(\\\"memberContent\\\").style.display=\\\"block\\\"):(document.getElementById(\\\"loginContainer\\\").style.display=\\\"none\\\",document.getElementById(\\\"blockedContainer\\\").style.display=\\\"block\\\")}catch(e){console.error(\\\"Login or membership check failed:\\\",e)}}function handleCredentialResponse(e){console.log(\\\"JWT token:\\\",e.credential)}window.onload=function(){google&&google.accounts&&google.accounts.id?(google.accounts.id.initialize({client_id:\\\"588713186952-isq15ehjattbfce2hhhqnuffdfln3nco.apps.googleusercontent.com\\\",callback:handleCredentialResponse}),google.accounts.id.renderButton(document.getElementById(\\\"googleSignInButton\\\"),{theme:\\\"outline\\\",size:\\\"large\\\",width:250})):console.error(\\\"Google Identity Services not loaded yet.\\\")};let companies=[];async function fetchCompanies(){const e=await fetch(\\\"https://transcriptanalyser.com/operational/companies_excel\\\");return await e.json()}function populateCustomDropdown(e){const t=document.getElementById(\\\"dropdownList\\\"),o=document.getElementById(\\\"dropdownToggle\\\");t.innerHTML=\\\"\\\",e.forEach((e,n)=>{const a=document.createElement(\\\"li\\\");a.textContent=e.CompName,a.dataset.value=e.fincode,a.dataset.sector=e.sector_type,0===n&&(o.textContent=e.CompName,o.dataset.value=e.fincode,o.dataset.sector=e.sector_type),a.addEventListener(\\\"click\\\",()=>{o.textContent=e.CompName,o.dataset.value=e.fincode,o.dataset.sector=e.sector_type,document.getElementById(\\\"dropdownMenu\\\").classList.remove(\\\"active\\\")}),t.appendChild(a)})}async function initCustomDropdown(){companies=await fetchCompanies(),populateCustomDropdown(companies)}document.getElementById(\\\"dropdownToggle\\\").addEventListener(\\\"click\\\",()=>{document.getElementById(\\\"dropdownMenu\\\").classList.toggle(\\\"active\\\")}),document.getElementById(\\\"dropdownSearch\\\").addEventListener(\\\"input\\\",e=>{const t=e.target.value.toLowerCase();populateCustomDropdown(companies.filter(e=>e.CompName.toLowerCase().includes(t)))});const showMessage=e=>{Office?.Runtime?.displayDialogAsync?console.log(e):alert(e)},getSelectedCompany=()=>{const e=document.getElementById(\\\"dropdownToggle\\\");if(!e)return null;const t=e.dataset?.value||\\\"\\\",o=e.textContent?.trim()||\\\"\\\";return t&&o&&\\\"Select Company\\\"!==o?{fincode:t,name:o}:null};document.getElementById(\\\"refreshBtn\\\").addEventListener(\\\"click\\\",()=>{const e=getSelectedCompany();if(!e)return void alert(\\\"⚠ Please select a company before refreshing.\\\");const{fincode:t,name:o}=e,n=document.getElementById(\\\"dropdownToggle\\\").dataset.sector,a=document.getElementById(\\\"modeToggle\\\"),c=a?.checked?\\\"In\\\":\\\"De\\\";console.log(\\\"Refreshing:\\\",o,\\\"| fincode:\\\",t,\\\"| mode:\\\",c,\\\"| sector:\\\",n)}),document.getElementById(\\\"helpBtn\\\").addEventListener(\\\"click\\\",()=>{const e=getSelectedCompany();if(!e)return void alert(\\\"⚠ Please select a company first.\\\");const{fincode:t}=e,o=`https://www.goindiastocks.com/companyinfo/${encodeURIComponent(t)}`;window.open(o,\\\"_blank\\\")}),initCustomDropdown()<\" + \"/script>  </body> </html> \";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","d","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","t","r","Symbol","n","iterator","toStringTag","c","Generator","u","create","_regeneratorDefine2","f","y","G","v","a","bind","l","TypeError","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","_invoke","configurable","writable","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","getElementById","addEventListener","_ref","_callee","email","password","loginText","loginSpinner","resUser","user","resMembership","membership","profileIcon","username","initials","_t","_context","preventDefault","target","style","display","fetch","method","headers","body","JSON","stringify","ok","json","UserId","user_id","is_member","localStorage","setItem","FullName","textContent","split","map","join","console","error","_x","savedUser","getItem","savedMembership","parse","removeItem","Office","onReady","_ref2","_callee4","info","refreshBtn","_context4","host","HostType","Excel","onclick","fincode","dataset","alert","url","concat","encodeURIComponent","open","_callee3","toggle","name","sectorType","modeToggle","isIndAS","sheetSuffix","_yield$Promise$all","_yield$Promise$all2","cashCResp","cashSResp","qplCResp","qplSResp","bsCResp","bsSResp","plCResp","plSResp","keyfResp","_yield$Promise$all3","_yield$Promise$all4","cashCData","cashSData","qplCData","qplSData","bsCData","bsSData","plCData","plSData","keyfData","_t2","_context3","sector","checked","log","all","mode","sheet","sector_type","_slicedToArray","run","_ref4","_callee2","context","_keyfData$value","workbook","sheetNames","existingNames","sheetsMap","_i","_sheetNames","sheetName","_sheet$getUsedRange","nameCell","getExcelColumnLetter","formatTable","indexSheetName","indexSheet","_indexSheet$getUsedRa","logoCell","titleCell","rowIdx","_i2","_sections","section","cell","keySheet","keyArray","staticFields","dynamicHeaders","sortedDynamicHeaders","keyHeaders","keyValues","_flattenHierarchicalData","writeSideBySide","row","_context2","worksheets","load","sync","items","s","includes","getUsedRange","clear","add","getRange","values","format","font","bold","size","fill","color","columnWidth","colNum","temp","letter","String","fromCharCode","startRow","title","lastCol","headerRange","horizontalAlignment","rowHeight","formulas","underline","Set","forEach","keys","Array","from","sort","parseInt","_toConsumableArray","h","_row$h","_row$Parameter","Parameter","flattenHierarchicalData","data","level","_step","rows","_iterator","_createForOfIteratorHelper","_row$child","push","_objectSpread","_level","child","err","standaloneData","consolidatedData","sectionName","getHeaders","k","months","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","parseDate","_months$mon","_ref6","match","mon","year","Date","processData","flatData","_row$Parameter2","_row$h2","repeat","dataStartRow","idx","currentRow","nextRow","groupStartRow","j","groupEndRow","getEntireRow","group","_x3","_x2","URL"],"sourceRoot":""}