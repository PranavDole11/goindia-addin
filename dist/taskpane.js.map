{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/define property getters","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global console, document, Excel, Office */\n\n/*Office.onReady((info) => {\n  if (info.host === Office.HostType.Excel) {\n    document.getElementById(\"sideload-msg\").style.display = \"none\";\n    document.getElementById(\"app-body\").style.display = \"flex\";\n    document.getElementById(\"run\").onclick = run;\n  }\n});*/\n\nexport async function run() {\n  try {\n    await Excel.run(async (context) => {\n      /**\n       * Insert your Excel code here\n       */\n      const range = context.workbook.getSelectedRange();\n\n      // Read the range address\n      range.load(\"address\");\n\n      // Update the fill color\n      range.format.fill.color = \"yellow\";\n\n      await context.sync();\n      console.log(`The range address was ${range.address}.`);\n    });\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function checkAccessStatus(userId) {\n    try {\n        const res = await fetch(`http://localhost:8000/addin/access_status?user_id=${userId}`);\n        const data = await res.json();\n\n        const container = document.getElementById(\"enterpriseRequestContainer\");\n        const messageParagraph = container.querySelector(\"p\");\n\n        if (data.status === \"Approved\") {\n            messageParagraph.textContent = \"Your access has been approved! You can now use the add-in.\";\n            document.getElementById(\"requestAccessBtn\").style.display = \"none\";\n        } else if (data.status === \"Pending\") {\n            messageParagraph.textContent = \"Your request is pending approval. Please wait for the admin to approve it.\";\n            document.getElementById(\"requestAccessBtn\").style.display = \"none\";\n        } else if (data.status === \"Rejected\") {\n            messageParagraph.textContent = \"Your request was rejected. Please contact support for details.\";\n            document.getElementById(\"requestAccessBtn\").style.display = \"none\";\n        } else if (data.status === \"NoRequest\") {\n            messageParagraph.textContent = \"This feature is available only for Enterprise Plan members.\\nIf you need access, request it below.\";\n            document.getElementById(\"requestAccessBtn\").style.display = \"block\";\n        }\n\n        container.style.display = \"flex\";\n\n    } catch (err) {\n        console.error(err);\n    }\n}\n\n/*document.getElementById(\"loginForm\").addEventListener(\"submit\", async (e) => {\n    e.preventDefault();\n\n    const email = e.target.email.value;\n    const password = e.target.password.value;\n\n    // Show spinner\n    const loginText = document.getElementById(\"loginText\");\n    const loginSpinner = document.getElementById(\"loginSpinner\");\n    loginText.style.display = \"none\";\n    loginSpinner.style.display = \"block\";\n\n    try {\n        const resUser = await fetch(\"https://www.transcriptanalyser.com/payment/getUser\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ email, password })\n        });\n\n        if (!resUser.ok) throw new Error(\"Login failed\");\n\n        const user = await resUser.json();\n        if (!user || !user.UserId) throw new Error(\"Invalid user data\");\n\n        const resMembership = await fetch(\"https://transcriptanalyser.com/payment/check_membership\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ user_id: user.UserId })\n        });\n\n        if (!resMembership.ok) throw new Error(\"Membership check failed\");\n\n        const membership = await resMembership.json();\n\n        // Hide all states first\n        document.getElementById(\"loginScreen\").style.display = \"none\";\n        document.getElementById(\"memberContent\").style.display = \"none\";\n        document.getElementById(\"addinUI\").style.display = \"none\";\n        document.getElementById(\"blockedContainer\").style.display = \"none\";\n        document.getElementById(\"enterpriseRequestContainer\").style.display = \"none\";\n\n        // CASE 1: Not a member\n        if (membership.is_member === \"no\") {\n            document.getElementById(\"blockedContainer\").style.display = \"flex\";\n            return;\n        }\n\n        // CASE 2: Member but not enterprise\n        if (!membership.is_enterprise_member) {\n            // First, check if user has already been approved in access requests\n            try {\n                const resStatus = await fetch(`http://localhost:8000/addin/access_status?user_id=${user.UserId}`);\n                const data = await resStatus.json();\n\n                if (data.status === \"Approved\") {\n                    // Treat this user as an enterprise member\n                    localStorage.setItem(\"user\", JSON.stringify(user));\n                    localStorage.setItem(\"membership\", JSON.stringify(membership));\n\n                    document.getElementById(\"memberContent\").style.display = \"block\";\n                    document.getElementById(\"addinUI\").style.display = \"block\";\n                    document.getElementById(\"logoutBtn\").style.display = \"block\";\n\n                    const profileIcon = document.getElementById(\"profileIcon\");\n                    const username = document.getElementById(\"username\");\n                    if (user.FullName) {\n                        username.textContent = user.FullName;\n                        profileIcon.textContent = user.FullName.split(\" \").map(n => n[0]).join(\"\").toUpperCase();\n                    }\n                    return; // Don't proceed to request access UI\n                }\n            } catch (err) {\n                console.error(\"Failed to fetch access status:\", err);\n            }\n\n            // If not approved, show the request access UI\n            const container = document.getElementById(\"enterpriseRequestContainer\");\n            container.style.display = \"flex\";  // Show container\n\n            const statusMessage = document.getElementById(\"statusMessage\");  // New message area\n            const requestBtn = document.getElementById(\"requestAccessBtn\");\n            const checkStatusLink = document.getElementById(\"checkStatusLink\");\n\n            requestBtn.onclick = async () => {\n                try {\n                    const res = await fetch(\"http://localhost:8000/addin/request_access\", {\n                        method: \"POST\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                        body: JSON.stringify({\n                            user_id: user.UserId,\n                            email: user.Email,\n                            full_name: user.FullName\n                        })\n                    });\n\n                    const data = await res.json();\n\n                    if (!res.ok) throw new Error(data.detail || \"Request failed\");\n\n                    alert(data.message);\n                } catch (err) {\n                    console.error(err);\n                    alert(\"Failed to submit request. Please try again later.\");\n                }\n            };\n\n            checkStatusLink.onclick = async (e) => {\n                e.preventDefault();  // Prevent default link behavior\n\n                try {\n                    const resStatus = await fetch(`http://localhost:8000/addin/access_status?user_id=${user.UserId}`);\n                    const data = await resStatus.json();\n\n                    if (data.status === \"Approved\") {\n                        statusMessage.textContent = \"Approved\";\n                        statusMessage.style.color = \"green\";\n                    } else if (data.status === \"Pending\") {\n                        statusMessage.textContent = \"Pending\";\n                        statusMessage.style.color = \"orange\";\n                    } else if (data.status === \"Rejected\") {\n                        statusMessage.textContent = \"Rejected\";\n                        statusMessage.style.color = \"red\";\n                    } else if (data.status === \"NoRequest\") {\n                        statusMessage.textContent = \"No request found\";\n                        statusMessage.style.color = \"#173760\";\n                    }\n                } catch (err) {\n                    console.error(err);\n                    alert(\"Failed to fetch status. Please try again later.\");\n                }\n            };\n        }\n\n        if (membership.is_enterprise_member) {\n            // Save user details to localStorage\n            localStorage.setItem(\"user\", JSON.stringify(user));\n            localStorage.setItem(\"membership\", JSON.stringify(membership));\n\n            // Show member-related content\n            document.getElementById(\"memberContent\").style.display = \"block\";\n            document.getElementById(\"addinUI\").style.display = \"block\";\n            document.getElementById(\"logoutBtn\").style.display = \"block\";\n\n            // Update profile display\n            const profileIcon = document.getElementById(\"profileIcon\");\n            const username = document.getElementById(\"username\");\n            if (user.FullName) {\n                username.textContent = user.FullName;\n                profileIcon.textContent = user.FullName.split(\" \").map(n => n[0]).join(\"\").toUpperCase();\n            }\n        }\n\n        // Update profile\n        \n\n    } catch (err) {\n        console.error(err);\n        document.getElementById(\"blockedContainer\").style.display = \"flex\";\n    } finally {\n        loginText.style.display = \"block\";\n        loginSpinner.style.display = \"none\";\n    }\n});*/\n\ndocument.getElementById(\"loginForm\").addEventListener(\"submit\", async (e) => {\n    e.preventDefault();\n\n    const email = e.target.email.value;\n    const password = e.target.password.value;\n\n    // Show spinner\n    const loginText = document.getElementById(\"loginText\");\n    const loginSpinner = document.getElementById(\"loginSpinner\");\n    loginText.style.display = \"none\";\n    loginSpinner.style.display = \"block\";\n\n    try {\n        // === Hardcoded exception for test user ===\n        if (email === \"ut@gmail.com\" && password === \"123\") {\n            const user = { UserId: \"test123\", FullName: \"Test User\", email };\n            const membership = { is_member: \"yes\", is_enterprise_member: false };\n\n            localStorage.setItem(\"user\", JSON.stringify(user));\n            localStorage.setItem(\"membership\", JSON.stringify(membership));\n\n            document.getElementById(\"loginScreen\").style.display = \"none\";\n            document.getElementById(\"blockedContainer\").style.display = \"none\";\n\n            document.getElementById(\"memberContent\").style.display = \"block\";\n            document.getElementById(\"addinUI\").style.display = \"block\";\n            document.getElementById(\"logoutBtn\").style.display = \"block\";\n\n            const profileIcon = document.getElementById(\"profileIcon\");\n            const usernameEl = document.getElementById(\"username\");\n\n            if (user.FullName) {\n                usernameEl.textContent = user.FullName;\n                const initials = user.FullName.split(\" \").map(n => n[0]).join(\"\").toUpperCase();\n                profileIcon.textContent = initials;\n            }\n\n            // Skip the rest of the login logic\n            return;\n        }\n\n        // === Original login logic ===\n        // Fetch user data\n        const resUser = await fetch(\"https://www.transcriptanalyser.com/payment/getUser\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ email, password })\n        });\n\n        if (!resUser.ok) throw new Error(\"Login failed\");\n\n        const user = await resUser.json();\n        if (!user || !user.UserId) throw new Error(\"Invalid user data\");\n\n        // Check membership\n        const resMembership = await fetch(\"https://transcriptanalyser.com/payment/check_membership\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ user_id: user.UserId })\n        });\n\n        if (!resMembership.ok) throw new Error(\"Membership check failed\");\n\n        const membership = await resMembership.json();\n\n        // Hide irrelevant containers\n        document.getElementById(\"loginScreen\").style.display = \"none\";\n        document.getElementById(\"blockedContainer\").style.display = \"none\";\n\n        if (membership.is_member === \"yes\" || membership.is_enterprise_member) {\n            // Store session data\n            localStorage.setItem(\"user\", JSON.stringify(user));\n            localStorage.setItem(\"membership\", JSON.stringify(membership));\n\n            // Show relevant UI\n            document.getElementById(\"memberContent\").style.display = \"block\";\n            document.getElementById(\"addinUI\").style.display = \"block\";\n            document.getElementById(\"logoutBtn\").style.display = \"block\";\n\n            const profileIcon = document.getElementById(\"profileIcon\");\n            const usernameEl = document.getElementById(\"username\");\n\n            if (user.FullName) {\n                usernameEl.textContent = user.FullName;\n                const initials = user.FullName.split(\" \").map(n => n[0]).join(\"\").toUpperCase();\n                profileIcon.textContent = initials;\n            }\n        } else {\n            // Not a member: show blocked container\n            document.getElementById(\"blockedContainer\").style.display = \"flex\";\n        }\n    } catch (err) {\n        console.error(err);\n\n        // Show blocked state on error\n        document.getElementById(\"loginScreen\").style.display = \"none\";\n        document.getElementById(\"memberContent\").style.display = \"none\";\n        document.getElementById(\"blockedContainer\").style.display = \"flex\";\n    } finally {\n        // Always restore spinner state\n        loginText.style.display = \"block\";\n        loginSpinner.style.display = \"none\";\n    }\n});\n\n\n\n/*window.addEventListener(\"DOMContentLoaded\", async () => {\n    const savedUser = localStorage.getItem(\"user\");\n    const savedMembership = localStorage.getItem(\"membership\");\n\n    if (savedUser && savedMembership) {\n        const user = JSON.parse(savedUser);\n        const membership = JSON.parse(savedMembership);\n\n        try {\n            // Check core membership\n            const resMembership = await fetch(\"https://transcriptanalyser.com/payment/check_membership\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({ user_id: user.UserId })\n            });\n\n            if (!resMembership.ok) throw new Error(\"Failed to verify membership\");\n\n            const updatedMembership = await resMembership.json();\n\n            let isApproved = membership.is_enterprise_member;\n\n            // If not enterprise member, check AddinAccessRequests\n            if (!isApproved) {\n                try {\n                    const resStatus = await fetch(`http://localhost:8000/addin/access_status?user_id=${user.UserId}`);\n                    const statusData = await resStatus.json();\n                    if (statusData.status === \"Approved\") {\n                        isApproved = true;\n                    }\n                } catch (err) {\n                    console.error(err);\n                }\n            }\n\n            // If user is allowed, store session and show UI\n            if (isApproved) {\n                localStorage.setItem(\"user\", JSON.stringify(user));\n                localStorage.setItem(\"membership\", JSON.stringify(membership));\n\n                document.getElementById(\"memberContent\").style.display = \"block\";\n                document.getElementById(\"addinUI\").style.display = \"block\";\n                document.getElementById(\"logoutBtn\").style.display = \"block\";\n\n                const profileIcon = document.getElementById(\"profileIcon\");\n                const username = document.getElementById(\"username\");\n                if (user.FullName) {\n                    username.textContent = user.FullName;\n                    profileIcon.textContent = user.FullName.split(\" \").map(n => n[0]).join(\"\").toUpperCase();\n                }\n\n                return; // Exit early\n            } else {\n                // Access revoked or not allowed\n                localStorage.removeItem(\"user\");\n                localStorage.removeItem(\"membership\");\n            }\n\n            // If not approved → show request access UI\n            document.getElementById(\"enterpriseRequestContainer\").style.display = \"flex\";\n\n        } catch (err) {\n            console.error(\"Error verifying session:\", err);\n            localStorage.removeItem(\"user\");\n            localStorage.removeItem(\"membership\");\n        }\n    }\n\n    // If no valid session, show login screen\n    document.getElementById(\"loginScreen\").style.display = \"flex\";\n});*/\n\nasync function checkLocalSession() {\n    const savedUser = localStorage.getItem(\"user\");\n    const savedMembership = localStorage.getItem(\"membership\");\n\n    if (savedUser && savedMembership) {\n        const user = JSON.parse(savedUser);\n        const membership = JSON.parse(savedMembership);\n\n        try {\n            // Check membership status from API\n            const res = await fetch(\"https://transcriptanalyser.com/payment/check_membership\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({ user_id: user.UserId })\n            });\n\n            if (!res.ok) throw new Error(\"Failed to verify membership\");\n\n            const updatedMembership = await res.json();\n\n            // Only proceed if user is a member\n            if (updatedMembership.is_member === \"yes\" || updatedMembership.is_enterprise_member) {\n                // Show member content\n                document.getElementById(\"memberContent\").style.display = \"block\";\n                document.getElementById(\"addinUI\").style.display = \"block\";\n                document.getElementById(\"logoutBtn\").style.display = \"block\";\n\n                // Update profile display\n                const profileIcon = document.getElementById(\"profileIcon\");\n                const username = document.getElementById(\"username\");\n                if (user.FullName) {\n                    username.textContent = user.FullName;\n                    profileIcon.textContent = user.FullName\n                        .split(\" \")\n                        .map(n => n[0])\n                        .join(\"\")\n                        .toUpperCase();\n                }\n\n                return true; // Session valid\n            } else {\n                // Not a member → clear session\n                localStorage.removeItem(\"user\");\n                localStorage.removeItem(\"membership\");\n            }\n        } catch (err) {\n            console.error(\"Error checking membership session:\", err);\n            localStorage.removeItem(\"user\");\n            localStorage.removeItem(\"membership\");\n        }\n    }\n\n    // No valid session → show login\n    document.getElementById(\"loginScreen\").style.display = \"flex\";\n    return false;\n}\n\n// Usage example\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n    checkLocalSession();\n});\n\n\n\ndocument.getElementById(\"logoutBtn\").addEventListener(\"click\", () => {\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"membership\");\n\n    document.getElementById(\"memberContent\").style.display = \"none\";\n    document.getElementById(\"addinUI\").style.display = \"none\";\n    document.getElementById(\"logoutBtn\").style.display = \"none\";\n    document.getElementById(\"loginScreen\").style.display = \"flex\";\n});\n\nlet lastMatchedCompany = null;\n\nasync function fetchFinancialData() {\n    try {\n        let cellValue;\n\n        await Excel.run(async (context) => {\n            let sheet;\n\n            // Case 1: Try to get \"Key Financials\" sheet\n            try {\n                sheet = context.workbook.worksheets.getItem(\"Key Financials\");\n                sheet.load(\"name\");\n                await context.sync();\n            } catch (err) {\n                console.warn(\"Key Financials sheet not found. First-time user?\");\n                document.getElementById(\"dataStatus\").textContent = \"Empty company data (Ignore if first time user)\";\n                sheet = null;\n            }\n\n            if (sheet) {\n                // Try to read A1\n                const range = sheet.getRange(\"A1\");\n                range.load(\"values\");\n                await context.sync();\n                cellValue = range.values[0][0];\n            }\n\n            // Case 2: If no A1 value, fallback to Index sheet A4\n            if (!cellValue) {\n                let indexSheet;\n                try {\n                    indexSheet = context.workbook.worksheets.getItem(\"Index\");\n                    const fallbackRange = indexSheet.getRange(\"A4\");\n                    fallbackRange.load(\"values\");\n                    await context.sync();\n                    cellValue = fallbackRange.values[0][0];\n                } catch (err) {\n                    console.warn(\"Index sheet or A4 not found. Cannot determine company.\");\n                }\n            }\n        });\n\n        if (!cellValue) {\n            document.getElementById(\"dataStatus\").textContent = \"Empty company data (Ignore if first time user)\";\n            document.getElementById(\"dataStatus\").style.color = \"orange\";\n            return;\n        }\n        // Step 2: Call company_search API\n        const searchRes = await fetch(\"https://transcriptanalyser.com/goindiastock/company_search\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ searchtxt: cellValue })\n        });\n        const searchData = await searchRes.json();\n\n        if (!searchData.data || !searchData.data[0] || !searchData.data[0].value)\n            throw new Error(\"No company match in search\");\n        const companyValue = searchData.data[0].value;\n\n        // Step 3: Get full company list\n        const compRes = await fetch(\"https://transcriptanalyser.com/operational/companies_excel\");\n        const companies = await compRes.json();\n\n        // Step 4: Match fincode\n        const matchedCompany = companies.find(c => c.fincode.toString() === companyValue.toString());\n        if (!matchedCompany) throw new Error(\"No matching company found in list\");\n\n        lastMatchedCompany = matchedCompany; // ✅ save globally\n\n        const fincode = matchedCompany.fincode;\n        const sectorType = matchedCompany.sector_type;\n        // Step 5: Fetch Profit/Loss\n        const plRes = await fetch(\"https://transcriptanalyser.com/goindiastock/annual_profitloss\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ fincode, mode: \"S\", sector: sectorType, sheet: `QProfitLossIND` })\n        });\n        if (!plRes.ok) throw new Error(\"Failed to fetch Profit/Loss data\");\n        const plData = await plRes.json();\n\n        // Step 6: Compare latest column in Quarterly Data sheet\n        await Excel.run(async (context) => {\n            try {\n                const sheet = context.workbook.worksheets.getItem(\"Quarterly Data\");\n\n                // Load the used range and its displayed text\n                const usedRange = sheet.getUsedRange();\n                usedRange.load(\"text\");\n                await context.sync();\n\n                // Row 5 is index 4\n                const rowValues = usedRange.text[4];\n\n                if (!rowValues) {\n                    console.log(\"Row 5 is empty according to Excel API\");\n                    const statusDiv = document.getElementById(\"dataStatus\");\n                    statusDiv.textContent = \"Quarterly Data sheet row 5 appears empty\";\n                    statusDiv.style.color = \"orange\";\n                    return;\n                }\n\n                // Remove empty cells\n                const headers = rowValues.map(h => h ? h.toString().trim() : null).filter(h => h);\n                const latestSheetHeader = headers[headers.length - 1];\n\n                // --- Step 1: Parse API headers and find the latest ---\n                const apiHeaders = plData.column\n                .map(c => c.header || c.accessorKey)\n                .filter(h => {\n                    if (!h) return false;\n                    if (h === 'Parameter') return false;\n                    // Skip non-date headers like \"QProfitLossIND\"\n                    const match = /^[A-Z][a-z]{2}\\d{4}$/.test(h); // e.g., Jun2025\n                    return match;\n                })\n                .map(h => {\n                    const monthStr = h.slice(0,3); // Jun\n                    const year = parseInt(h.slice(3)); // 2025\n                    const month = new Date(`${monthStr} 1, 2000`).getMonth();\n                    return { month, year, original: h };\n                });\n\n                if (!apiHeaders.length) {\n                    console.log(\"No API headers found\");\n                    const statusDiv = document.getElementById(\"dataStatus\");\n                    statusDiv.textContent = \"No Profit/Loss data returned from API\";\n                    statusDiv.style.color = \"orange\";\n                    return;\n                }\n\n                // Find the latest API header by date\n                const latestApi = apiHeaders.reduce((a, b) => {\n                    if (b.year > a.year) return b;\n                    if (b.year === a.year && b.month > a.month) return b;\n                    return a;\n                });\n\n                // --- Step 2: Parse Excel header ---\n                function parseExcelHeader(header) {\n                    const [monthStr, yearStr] = header.split(\"-\");\n                    const month = new Date(`${monthStr} 1, 2000`).getMonth();\n                    const year = 2000 + parseInt(yearStr);\n                    return { month, year };\n                }\n\n                const excelH = parseExcelHeader(latestSheetHeader);\n                const apiH = latestApi;\n\n                // --- Step 3: Compare and update UI ---\n                const statusDiv = document.getElementById(\"dataStatus\");\n                const refreshBtn = document.getElementById(\"refreshStatusBtn\");\n\n                // Enable refresh only if new data available\n                if (excelH.month !== apiH.month || excelH.year !== apiH.year) {\n                    statusDiv.textContent = `New data available for ${matchedCompany.CompName}: ${apiH.original}`;\n                    statusDiv.style.color = \"green\";\n\n                    // Enable refresh button only when new data is available\n                    refreshBtn.disabled = false;\n                } else {\n                    statusDiv.textContent = `Sheet data is up-to-date for ${matchedCompany.CompName}`;\n                    statusDiv.style.color = \"blue\";\n\n                    // Disable refresh button otherwise\n                    refreshBtn.disabled = true;\n                }\n\n            } catch (err) {\n                console.error(\"Excel.run error:\", err);\n                const statusDiv = document.getElementById(\"dataStatus\");\n                statusDiv.textContent = \"Error reading Quarterly Data sheet\";\n                statusDiv.style.color = \"red\";\n            }\n        });\n\n\n\n\n    } catch (err) {\n        console.error(err);\n        const statusDiv = document.getElementById(\"dataStatus\");\n        statusDiv.textContent = `Error: ${err.message}`;\n        statusDiv.style.color = \"red\";\n    }\n}\n\n// Initial load\nOffice.onReady(() => {\n    fetchFinancialData();\n});\n\n\n\nOffice.onReady(async (info) => {\n    if (info.host !== Office.HostType.Excel) return;\n\n    const refreshBtn = document.getElementById(\"refreshBtn\"); // download data\n    const refreshStatusBtn = document.getElementById(\"refreshStatusBtn\"); // new data refresh\n    const helpBtn = document.getElementById(\"helpBtn\");\n\n    function getExcelColumnLetter(colNum) {\n        let letter = \"\";\n        while (colNum > 0) {\n            let mod = (colNum - 1) % 26;\n            letter = String.fromCharCode(65 + mod) + letter;\n            colNum = Math.floor((colNum - mod) / 26);\n        }\n        return letter;\n    }\n\n    // Attach Help button\n    helpBtn.onclick = () => {\n        const toggle = document.getElementById(\"dropdownToggle\");\n        const fincode = toggle.dataset.value;\n        if (!fincode) return alert(\"Select a company first.\");\n\n        const url = `https://www.goindiastocks.com/companyinfo/${encodeURIComponent(fincode)}`;\n        window.open(url, \"_blank\");\n    };\n\n    refreshBtn.onclick = handleRefresh;\n    refreshStatusBtn.onclick = () => {\n        const toggle = document.getElementById(\"dropdownToggle\");\n\n        // If dropdown is empty but we have a lastMatchedCompany, populate it\n        if ((!toggle.dataset.value || toggle.textContent === \"Select Company\") && lastMatchedCompany) {\n            toggle.textContent = lastMatchedCompany.CompName;\n            toggle.dataset.value = lastMatchedCompany.fincode;\n            toggle.dataset.sector = lastMatchedCompany.sector_type;\n        }\n\n        // Now call the common handler\n        handleRefresh();\n    };\n\n    // Attach Refresh button\n    async function handleRefresh() {\n        const toggle = document.getElementById(\"dropdownToggle\");\n        const fincode = toggle.dataset.value;\n        const name = toggle.textContent;\n\n        if (!fincode) return alert(\"Select a company first.\");\n\n        const sectorType = document.getElementById(\"dropdownToggle\").dataset.sector;\n\n        // ✅ Read toggle state\n        const modeToggle = document.getElementById(\"modeToggle\");\n        const isIndAS = modeToggle.checked; // true = IndAS, false = Detailed\n\n        // ✅ Decide suffix\n        const sheetSuffix = isIndAS ? \"\" : \"IND\"; // \"\" for In, \"IND\" for De\n        try {\n            //console.log(`🔄 Refreshing data for: ${fincode} - ${name} | Mode: ${isIndAS ? \"In\" : \"De\"}`);\n\n            // === Fetch all APIs in parallel ===\n            const [\n                cashCResp, cashSResp,\n                qplCResp, qplSResp,\n                bsCResp, bsSResp,\n                plCResp, plSResp,\n                keyfResp] = await Promise.all([\n\n                    // Cash Flows\n                    fetch(\"https://transcriptanalyser.com/goindiastock/annual_profitloss\", {\n                        method: \"POST\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                        body: JSON.stringify({ fincode, mode: \"C\", sector: sectorType, sheet: `CashFlow${sheetSuffix}` })\n                    }),\n                    fetch(\"https://transcriptanalyser.com/goindiastock/annual_profitloss\", {\n                        method: \"POST\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                        body: JSON.stringify({ fincode, mode: \"S\", sector: sectorType, sheet: `CashFlow${sheetSuffix}` })\n                    }),\n\n                    // Quarterly Profit & Loss\n                    fetch(\"https://transcriptanalyser.com/goindiastock/annual_profitloss\", {\n                        method: \"POST\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                        body: JSON.stringify({ fincode, mode: \"C\", sector: sectorType, sheet: `QProfitLoss${sheetSuffix}` })\n                    }),\n                    fetch(\"https://transcriptanalyser.com/goindiastock/annual_profitloss\", {\n                        method: \"POST\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                        body: JSON.stringify({ fincode, mode: \"S\", sector: sectorType, sheet: `QProfitLoss${sheetSuffix}` })\n                    }),\n\n                    // Balance Sheet\n                    fetch(\"https://transcriptanalyser.com/goindiastock/annual_profitloss\", {\n                        method: \"POST\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                        body: JSON.stringify({ fincode, mode: \"C\", sector: sectorType, sheet: `BalanceSheet${sheetSuffix}` })\n                    }),\n                    fetch(\"https://transcriptanalyser.com/goindiastock/annual_profitloss\", {\n                        method: \"POST\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                        body: JSON.stringify({ fincode, mode: \"S\", sector: sectorType, sheet: `BalanceSheet${sheetSuffix}` })\n                    }),\n\n                    // Profit & Loss\n                    fetch(\"https://transcriptanalyser.com/goindiastock/annual_profitloss\", {\n                        method: \"POST\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                        body: JSON.stringify({ fincode, mode: \"C\", sector: sectorType, sheet: `ProfitLoss${sheetSuffix}` })\n                    }),\n                    fetch(\"https://transcriptanalyser.com/goindiastock/annual_profitloss\", {\n                        method: \"POST\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                        body: JSON.stringify({ fincode, mode: \"S\", sector: sectorType, sheet: `ProfitLoss${sheetSuffix}` })\n                    }),\n\n                    // Key Financials (single) → does NOT depend on IND suffix\n                    fetch(\"https://transcriptanalyser.com/goindiastock/actuals_forwards\", {\n                        method: \"POST\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                        body: JSON.stringify({ fincode, mode: \"C\", sector_type: sectorType })\n                    })\n                ]);\n\n\n            let [\n                cashCData, cashSData,\n                qplCData, qplSData,\n                bsCData, bsSData,\n                plCData, plSData,\n                keyfData\n            ] = await Promise.all([\n                cashCResp.json(), cashSResp.json(),\n                qplCResp.json(), qplSResp.json(),\n                bsCResp.json(), bsSResp.json(),\n                plCResp.json(), plSResp.json(),\n                keyfResp.json()\n            ]);\n\n            const isConsolidatedEmpty = (data) => {\n                if (!data?.value?.length) return true;\n\n                const ignoredFields = [\"Parameter\", \"child\", \"Codec\", \"Info\", \"parent_id\", \"hy\", \"ttm\"];\n\n                const checkRow = (row) => {\n                    const keys = Object.keys(row).filter(k => !ignoredFields.includes(k));\n                    const parentEmpty = keys.every(k => {\n                        const val = row[k];\n                        if (val == null) return true;\n                        if (typeof val === \"number\") return val === 0;\n                        if (typeof val === \"string\") {\n                            const v = val.trim().toLowerCase();\n                            return v === \"0\" || v === \"na\" || v === \"division by zero\" || v === \"\";\n                        }\n                        return true; // ignore other types\n                    });\n                    const childrenEmpty = !row.child || isConsolidatedEmpty({ value: row.child });\n                    return parentEmpty && childrenEmpty;\n                };\n\n                return data.value.every(checkRow);\n            };\n\n\n\n            await Excel.run(async (context) => {\n                const workbook = context.workbook;\n                const sheetNames = [\"Key Financials\", \"Quarterly Data\", \"Annual Data\"];\n                workbook.worksheets.load(\"items/name\");\n                await context.sync();\n\n                const existingNames = workbook.worksheets.items.map(s => s.name);\n                const sheetsMap = {};\n\n                // Create or reset sheets\n                for (const sheetName of sheetNames) {\n                    let sheet;\n                    if (existingNames.includes(sheetName)) {\n                        sheet = workbook.worksheets.getItem(sheetName);\n                        sheet.getUsedRange()?.clear();\n                    } else {\n                        sheet = workbook.worksheets.add(sheetName);\n                    }\n                    sheetsMap[sheetName] = sheet;\n\n                    // Company name in A1\n                    const nameCell = sheet.getRange(\"A1\");\n                    nameCell.values = [[name]];\n                    nameCell.format.font.bold = true;\n                    nameCell.format.font.size = 14;\n                    nameCell.format.fill.color = \"#bed1f8\";\n\n                    // Make column A wider\n                    sheet.getRange(\"A:A\").format.columnWidth = 180; \n                }\n\n                await context.sync(); // commit sheet setup\n\n                // --- Helper ---\n                const getExcelColumnLetter = (colNum) => {\n                    let temp = \"\";\n                    let letter = \"\";\n                    while (colNum > 0) {\n                        temp = (colNum - 1) % 26;\n                        letter = String.fromCharCode(temp + 65) + letter;\n                        colNum = (colNum - temp - 1) / 26;\n                    }\n                    return letter;\n                };\n\n                const formatTable = (sheet, startRow, title, headers, values) => {\n                    const lastCol = getExcelColumnLetter(headers.length);\n\n                    // Title row\n                    const titleCell = sheet.getRange(`A${startRow}`);\n                    titleCell.values = [[title]];\n                    titleCell.format.font.bold = true;\n                    startRow++;\n\n                    // Header row\n                    const headerRange = sheet.getRange(`A${startRow}:${lastCol}${startRow}`);\n                    headerRange.values = [headers];\n                    headerRange.format.fill.color = \"#e0e0e0\";\n                    headerRange.format.font.bold = true;\n                    startRow++;\n\n                    // Data rows\n                    if (values.length > 0) {\n                        const dataRange = sheet.getRange(`A${startRow}:${lastCol}${startRow + values.length - 1}`);\n                        dataRange.values = values;\n                        startRow += values.length;\n                    } else {\n                        sheet.getRange(`A${startRow}`).values = [[\"No data available\"]];\n                        startRow++;\n                    }\n\n                    return startRow + 1; // leave a blank row\n                };\n\n                // --- Index Sheet ---\n                const indexSheetName = \"Index\";\n                let indexSheet;\n                if (existingNames.includes(indexSheetName)) {\n                    indexSheet = workbook.worksheets.getItem(indexSheetName);\n                    indexSheet.getUsedRange()?.clear();\n                } else {\n                    indexSheet = workbook.worksheets.add(indexSheetName);\n                }\n                sheetsMap[indexSheetName] = indexSheet;\n\n                // Move Index sheet to the first position\n                indexSheet.position = 0;  \n\n                // Setup appearance\n                const topRow = indexSheet.getRange(\"A1:Z1\");\n                topRow.format.fill.color = \"#173760\";\n\n                // Insert the logo in A1\n                const logoCell = indexSheet.getRange(\"A2\");\n                logoCell.values = [[\n                    '=IMAGE(\"https://www.goindiastocks.com/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Flogo.eb4c0c16.png&w=1920&q=75\")'\n                ]];\n                logoCell.format.horizontalAlignment = \"Center\";\n                logoCell.format.verticalAlignment = \"Center\";\n                logoCell.format.rowHeight = 60;\n                indexSheet.getRange(\"A:A\").format.columnWidth = 20;\n\n                // Adjust the cell dimensions to match image\n                logoCell.format.rowHeight = 60;\n                indexSheet.getRange(\"A:A\").format.columnWidth = 15;\n\n                const titleCell = indexSheet.getRange(\"A3\");\n                titleCell.values = [[\"GO INDIA STOCKS\"]];\n                titleCell.format.font.bold = true;\n                titleCell.format.font.size = 16;\n                titleCell.format.horizontalAlignment = \"CenterAcrossSelection\";\n\n                // Insert company name, updated date and model prepared text\n                const nameCell = indexSheet.getRange(\"A4\");\n                nameCell.values = [[`Company: ${name}`]];\n                nameCell.format.font.bold = true;\n                nameCell.format.font.size = 12;\n                nameCell.format.horizontalAlignment = \"Left\";\n\n                const modelCell = indexSheet.getRange(\"A5\");\n                modelCell.values = [[\"Model prepared by Go India Stocks\"]];\n                modelCell.format.font.size = 11;\n                modelCell.format.horizontalAlignment = \"Left\";\n\n                const dateCell = indexSheet.getRange(\"A6\");\n                const today = new Date();\n                const formattedDate = `${today.getDate().toString().padStart(2,\"0\")}-${(today.getMonth()+1).toString().padStart(2,\"0\")}-${today.getFullYear()}`;\n                dateCell.values = [[`Updated as of ${formattedDate}`]];\n                dateCell.format.font.size = 10;\n                dateCell.format.horizontalAlignment = \"Left\";\n\n                // List of sections with their header markers in the target sheets\n                const sections = [\n                    { name: \"Key Financials\", sheet: \"Key Financials\", marker: \"Key Financials\" },\n                    { name: \"Quarterly Data - Quarterly P&L\", sheet: \"Quarterly Data\", marker: \"Quarterly P&L\" },\n                    { name: \"Annual Data - Balance Sheet\", sheet: \"Annual Data\", marker: \"Balance Sheet\" },\n                    { name: \"Annual Data - Cash Flows\", sheet: \"Annual Data\", marker: \"Cash Flows\" },\n                    { name: \"Annual Data - Detailed P&L\", sheet: \"Annual Data\", marker: \"Detailed P&L\" }\n                ];\n\n                // Insert navigation links starting from row 8\n                let rowIdx = 8;\n                for (const section of sections) {\n                    const cell = indexSheet.getRange(`A${rowIdx}`);\n                    cell.values = [[section.name]];\n                    \n                    // Dynamically build the formula using MATCH to find the correct row\n                    cell.formulas = [[\n                        `=HYPERLINK(\"#'${section.sheet}'!A\" & MATCH(\"${section.marker}\", '${section.sheet}'!A:A, 0), \"${section.name}\")`\n                    ]];\n                    \n                    cell.format.font.color = \"#1155CC\";\n                    cell.format.font.underline = \"Single\";\n                    cell.format.horizontalAlignment = \"Left\";\n                    rowIdx++;\n                }\n\n                // Adjust column width to fit all contents\n                indexSheet.getRange(\"A:A\").format.autofitColumns();\n\n                // Align all content in A column from row 2 to the last one\n                indexSheet.getRange(`A2:A${rowIdx - 1}`).format.horizontalAlignment = \"CenterAcrossSelection\";\n\n\n                // --- Key Financials ---\n                const keySheet = sheetsMap[\"Key Financials\"];\n                if (keyfData?.value?.length > 0) {\n                    const keyArray = keyfData.value;\n                    const staticFields = [\"Parameter\"];\n                    const dynamicHeaders = new Set();\n\n                    keyArray.forEach(row => {\n                        Object.keys(row).forEach(key => {\n                            if (!staticFields.includes(key) && /^FY\\d{4}(E)?$/.test(key)) dynamicHeaders.add(key);\n                        });\n                    });\n\n                    const sortedDynamicHeaders = Array.from(dynamicHeaders).sort((a, b) =>\n                        parseInt(a.replace(\"FY\", \"\").replace(\"E\", \"\")) - parseInt(b.replace(\"FY\", \"\").replace(\"E\", \"\"))\n                    );\n                    const keyHeaders = [\"Parameter\", ...sortedDynamicHeaders];\n                    const keyValues = keyArray.map(row => keyHeaders.map(h => row[h] ?? (h === \"Parameter\" ? row.Parameter ?? \"\" : \"\")));\n\n                    // Format the title row\n                    const startRow = 3; // same as you pass to formatTable\n                    keySheet.getRange(`A${startRow}`).values = [[\"Key Financials\"]];\n                    keySheet.getRange(\"B:B\").format.columnWidth = 90; \n                    keySheet.getRange(`B${startRow}`).values = [[\"(All values in Rs. Cr)\"]];\n                    keySheet.getRange(`B${startRow}`).format.font.bold = true;\n                    keySheet.getRange(`B${startRow}`).format.horizontalAlignment = \"CenterAcrossSelection\";\n                    keySheet.getRange(`A${startRow}`).format.font.bold = true;\n                    keySheet.getRange(`A${startRow}`).format.font.size = 14;\n                    keySheet.getRange(`A${startRow}`).format.fill.color = \"#d9ead3\";\n                    keySheet.getRange(`A${startRow}`).format.horizontalAlignment = \"CenterAcrossSelection\";\n\n                    // Then format the actual table\n                    formatTable(keySheet, startRow, \"Key Financials\", keyHeaders, keyValues);\n                }\n\n                const flattenHierarchicalData = (data, level = 0) => {\n                    if (!data) return [];\n                    const rows = [];\n                    for (const row of data) {\n                        rows.push({ ...row, _level: level });\n                        if (row.child?.length) {\n                            rows.push(...flattenHierarchicalData(row.child, level + 1));\n                        }\n                    }\n                    return rows;\n                };\n\n\n                // --- Helper: Write Standalone + Consolidated side by side ---\n                const writeSideBySide = (sheet, startRow, standaloneData, consolidatedData, sectionName) => {\n                    const staticFields = [\"Parameter\"];\n\n                    // --- Helper: get headers from data ---\n                    const getHeaders = (data) => {\n                        if (!data?.length) return [];\n                        const headers = new Set();\n                        data.forEach(row => {\n                            Object.keys(row).forEach(k => {\n                                if (!staticFields.includes(k) && /^[A-Z][a-z]{2}\\d{4}$/.test(k)) headers.add(k);\n                            });\n                        });\n                        return Array.from(headers).sort((a, b) => {\n                            const months = { Jan:0, Feb:1, Mar:2, Apr:3, May:4, Jun:5, Jul:6, Aug:7, Sep:8, Oct:9, Nov:10, Dec:11 };\n                            const parseDate = s => {\n                                const [_, mon, year] = s.match(/^([A-Za-z]+)(\\d{4})$/) || [];\n                                return new Date(parseInt(year), months[mon] ?? 0);\n                            };\n                            return parseDate(a) - parseDate(b);\n                        });\n                    };\n\n                    // --- Flatten hierarchical data ---\n                    const flattenHierarchicalData = (data, level = 0) => {\n                        if (!data) return [];\n                        const rows = [];\n                        for (const row of data) {\n                            rows.push({ ...row, _level: level });\n                            if (row.child?.length) {\n                                rows.push(...flattenHierarchicalData(row.child, level + 1));\n                            }\n                        }\n                        return rows;\n                    };\n\n                    // --- Section Title ---\n                    sheet.getRange(\"B:B\").format.columnWidth = 90; \n                    sheet.getRange(`B${startRow}`).values = [[\"(All values in Rs. Cr)\"]];\n                    \n                    sheet.getRange(`B${startRow}`).format.font.bold = true;\n                    sheet.getRange(`B${startRow}`).format.horizontalAlignment = \"CenterAcrossSelection\";\n                    sheet.getRange(`A${startRow}`).values = [[sectionName]];\n                    sheet.getRange(`A${startRow}`).format.font.bold = true;\n                    sheet.getRange(`A${startRow}`).format.font.size = 14;\n                    sheet.getRange(`A${startRow}`).format.fill.color = \"#d9ead3\";\n                    sheet.getRange(`A${startRow}`).format.horizontalAlignment = \"CenterAcrossSelection\";\n                    startRow++;\n\n                    // --- Helper: process data ---\n                    const processData = (data, title) => {\n                        if (!data?.value?.length) {\n                            // Single-row message if no data\n                            sheet.getRange(`A${startRow}`).values = [[`${title} not available for this company`]];\n                            startRow++;\n                            return startRow;\n                        }\n\n                        const flatData = flattenHierarchicalData(data.value);\n                        const headers = [\"Parameter\", ...getHeaders(data.value)];\n                        const values = flatData.map(row => headers.map(h =>\n                            h === \"Parameter\"\n                                ? \" \".repeat(row._level * 4) + (row.Parameter ?? \"\")\n                                : row[h] ?? \"\"\n                        ));\n\n                        const dataStartRow = startRow;\n                        startRow = formatTable(sheet, dataStartRow, title, headers, values);\n\n                        // Smaller font for child rows\n                        flatData.forEach((row, idx) => {\n                            if (row._level > 0) {\n                                const lastCol = String.fromCharCode(65 + headers.length - 1);\n                                const r = sheet.getRange(`A${dataStartRow + 1 + idx}:${lastCol}${dataStartRow + 1 + idx}`);\n                                r.format.font.size = 11;\n                            }\n                        });\n\n                        return startRow;\n                    };\n\n                    // --- Print Standalone ---\n                    startRow = processData(standaloneData, \"Standalone\");\n\n                    // --- Print Consolidated ---\n                    if (isConsolidatedEmpty(consolidatedData)) {\n                        // Show single-row message for empty consolidated\n                        sheet.getRange(`A${startRow}`).values = [[\"\"]];\n                        startRow++;\n                    } else {\n                        startRow++; // leave a blank row\n                        startRow = processData(consolidatedData, \"Consolidated\");\n                    }\n\n                    return startRow;\n                };\n\n\n                writeSideBySide(\n                    sheetsMap[\"Quarterly Data\"], \n                    3, \n                    qplSData,   // standalone object\n                    qplCData,   // consolidated object\n                    \"Quarterly P&L\"\n                );\n\n                let row = 3;\n                row = writeSideBySide(sheetsMap[\"Annual Data\"], row, bsSData, bsCData, \"Balance Sheet\");\n                row++;\n                row = writeSideBySide(sheetsMap[\"Annual Data\"], row, cashSData, cashCData, \"Cash Flows\");\n                row++;\n                row = writeSideBySide(sheetsMap[\"Annual Data\"], row, plSData, plCData, \"Detailed P&L\");\n                await context.sync();\n            });\n\n            console.log(\"✅ Data successfully written to Excel\");\n\n            fetchFinancialData();\n\n        } catch (err) {\n            console.error(\"❌ Error in refreshBtn:\", err);\n            alert(\"Failed to fetch company data. Check console for details.\");\n        }\n    };\n});\n","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\n// Module\nvar code = \" <!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>GoIndia Add-in</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://res-1.cdn.office.net/files/fabric-cdn-prod_20230815.002/office-ui-fabric-core/11.1.0/css/fabric.min.css\\\"/> <link href=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> </head> <body class=\\\"ms-font-m ms-welcome ms-Fabric\\\"> <link rel=\\\"stylesheet\\\" href=\\\"https://cdn.jsdelivr.net/npm/choices.js/public/assets/styles/choices.min.css\\\"/> <\" + \"script src=\\\"https://cdn.jsdelivr.net/npm/choices.js/public/assets/scripts/choices.min.js\\\"><\" + \"/script> <\" + \"script src=\\\"https://accounts.google.com/gsi/client\\\" async defer=\\\"defer\\\"><\" + \"/script> <style>#buttons{display:flex;flex-direction:row;gap:4px;align-items:flex-start}button{color:#fff;font-weight:400;border:none;border-radius:8px;padding:8px 16px;font-size:14px;margin-top:8px;margin-bottom:12px;cursor:pointer;transition:background-color .2s,transform .1s,box-shadow .2s;box-shadow:0 2px 4px rgba(0,0,0,.2)}#refreshBtn{background-color:#275b9f}#refreshBtn:hover{background-color:#173760;transform:translateY(-1px);box-shadow:0 4px 8px rgba(0,0,0,.25)}#refreshBtn:active{transform:translateY(0);box-shadow:0 2px 4px rgba(0,0,0,.2)}#refreshStatusBtn{background-color:#4b9f27}#refreshStatusBtn:hover{background-color:#316017;transform:translateY(-1px);box-shadow:0 4px 8px rgba(0,0,0,.25)}#refreshStatusBtn:active{transform:translateY(0);box-shadow:0 2px 4px rgba(0,0,0,.2)}#refreshStatusBtn:disabled{background-color:#999}#helpBtn{background-color:#d80404}#helpBtn:hover{background-color:#b80000;transform:translateY(-1px);box-shadow:0 4px 8px rgba(0,0,0,.25)}#helpBtn:active{transform:translateY(0);box-shadow:0 2px 4px rgba(0,0,0,.2)}#logoutBtn:hover{background-color:#b80000;transform:translateY(-1px);box-shadow:0 4px 8px rgba(0,0,0,.25)}#profileSection:hover{background-color:#b80000;transform:translateY(-1px);box-shadow:0 4px 8px rgba(0,0,0,.25)}select{border-radius:8px;border:1px solid #ccc;padding:6px 12px;font-size:14px;cursor:pointer;width:250px;transition:border-color .2s,box-shadow .2s}select:focus{border-color:#0078d4;box-shadow:0 0 4px rgba(0,120,212,.5);outline:0}.dropdown{position:relative;width:280px;font-family:Arial,sans-serif}.dropdown-toggle{padding:10px 12px;width:250px;flex-direction:row;align-items:start;border:3px solid #d6e5f5;border-radius:8px;cursor:pointer;background-color:#fff;font-size:14px}.dropdown-toggle:active{border:3px solid #8bbef4}.dropdown-toggle:focus{border:3px solid #8bbef4}.dropdown-menu{position:absolute;top:100%;left:0;right:0;border:1px solid #8bbef4;border-radius:8px;background-color:#fff;max-height:300px;overflow-y:auto;display:none;margin-top:4px}.dropdown-menu.active{display:block;border:1px solid #8bbef4;border-radius:8px}.dropdown-menu input{width:calc(100% - 24px);margin:8px;padding:6px;border:1px solid #ccc;border-radius:6px;font-size:14px}.dropdown-menu ul{list-style:none;padding:0;margin:0}.dropdown-menu li{padding:8px 12px;cursor:pointer}.dropdown-menu li:hover{background-color:#f0f0f0}.arrow-down{width:0;height:0;border-left:6px solid transparent;border-right:6px solid transparent;border-top:6px solid #000}.toggle-container{display:flex;justify-content:flex-end;margin-bottom:5px;margin-left:160px;margin-top:40px;width:120px}.toggle-label{display:flex;align-items:center;justify-content:space-between;background:#e6e6e6;border-radius:10px;cursor:pointer;width:120px;height:29px;font-family:Arial,sans-serif;font-size:13px;font-weight:550;overflow:hidden;position:relative;transition:background-color .2s,transform .1s,box-shadow .2s}.toggle-label:active{transform:translateY(0);box-shadow:0 2px 4px rgba(0,0,0,.2)}.toggle-option{flex:1;text-align:center;z-index:2;transition:color .3s;font-size:12px}.toggle-slider{position:absolute;top:2px;left:2px;width:calc(51% - 4px);height:25px;background:#173760;border-radius:8px;transition:transform .3s;z-index:1}#modeToggle{display:none}#modeToggle:checked+.toggle-label .toggle-slider{transform:translateX(100%)}#modeToggle:checked+.toggle-label .left{color:#000}#modeToggle:checked+.toggle-label .right{color:#fff}#modeToggle:not(:checked)+.toggle-label .left{color:#fff}#modeToggle:not(:checked)+.toggle-label .right{color:#000}#loginScreen{width:100%;max-width:300px;display:flex;justify-content:start;align-items:flex-start}#loginWrapper{display:flex;flex-direction:column;align-items:start;justify-content:flex-start;min-height:100vh;background-color:#f3f4f6;padding:1rem;box-sizing:border-box}.login-container div{display:flex;flex-direction:column;gap:2px;align-items:flex-start}#loginScreen .login-container{background-color:#fff;border-radius:16px;padding:1.5rem 2rem;box-shadow:0 8px 20px rgba(0,0,0,.08);width:100%;max-width:360px;display:flex;flex-direction:column;align-items:center}#loginScreen h2{margin-bottom:1rem;text-align:center;font-size:1.75rem;color:#173760}#loginScreen input[type=email],#loginScreen input[type=password]{width:88%;padding:.6rem .9rem;border-radius:10px;border:1px solid #ccc;outline:0;font-size:.95rem;margin-bottom:.75rem;transition:border .2s;margin-right:20px}#loginScreen input:focus{border-color:#173760}#loginScreen button[type=submit]{width:100%;padding:.6rem .9rem;border-radius:10px;background-color:#173760;color:#fff;font-weight:600;font-size:.95rem;border:none;cursor:pointer;transition:transform .2s}#loginScreen button[type=submit]:hover{transform:scale(1.03)}#loginScreen .divider{display:flex;align-items:center;gap:.3rem;width:100%;margin:1rem 0}#loginScreen .divider hr{flex:1;border-color:#ccc}#loginScreen .divider span{font-size:.8rem;color:#999}#loginScreen .social-buttons{width:100%;display:flex;flex-direction:column;gap:.75rem;align-items:center}#loginScreen .apple-btn{display:flex;align-items:center;justify-content:center;gap:.4rem;background-color:#000;color:#fff;width:100%;padding:.45rem .8rem;border-radius:10px;font-weight:500;cursor:pointer;transition:transform .2s;border:none}#loginScreen .apple-btn:hover{transform:scale(1.03)}#loginScreen .signup{display:flex;align-items:center;justify-content:center;width:100%;margin-top:.75rem;font-size:.8rem;color:#173760}#loginScreen .signup button{background:#173760;border:1px solid #173760;border-radius:10px;height:35px;padding:.2rem .6rem;font-weight:500;cursor:pointer;transition:transform .2s}#loginScreen .signup button:hover{transform:scale(1.03)}#loginScreen .forgot{display:flex;flex-direction:column;gap:.2rem;margin-top:.5rem;width:100%;font-size:.75rem}#loginScreen .forgot button{background:0 0;border:none;color:#173760;cursor:pointer;text-align:left}#loginScreen .forgot button:hover{text-decoration:underline}#blockedContainer,#enterpriseRequestContainer,#memberContent{width:100%;display:flex;flex-direction:column;align-items:start;justify-content:start;padding:1rem;box-sizing:border-box}#loginSpinner{border:2px solid #f3f3f3;border-top:2px solid #fff;border-radius:50%;width:16px;height:16px;animation:spin 1s linear infinite;margin:auto}@keyframes spin{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}#infoBox{border:2px dotted #f39c12;background-color:#fff8e5;color:#333;padding:10px 12px;margin-top:12px;border-radius:8px;display:flex;align-items:center;font-size:13px;position:relative}#infoBox .icon{margin-right:8px;font-size:18px}#infoBox .text{flex:1}#infoBox .closeBtn{cursor:pointer;font-weight:700;font-size:18px;margin-left:10px;color:#666}#infoBox .closeBtn:hover{color:#000}</style> <div id=\\\"loginWrapper\\\" style=\\\"display:flex;justify-content:start;align-items:center;min-height:100vh;background:#f3f4f6;flex-direction:column\\\"> <div id=\\\"loginScreen\\\" style=\\\"width:100%;display:none;justify-content:center\\\"> <div class=\\\"login-container\\\" id=\\\"loginContainer\\\"> <img src=\\\"https://www.goindiastocks.com/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Flogo.eb4c0c16.png&w=1920&q=75\\\" alt=\\\"App Logo\\\" style=\\\"width:90px;height:60px;margin-bottom:10px\\\"/> <span style=\\\"font-family:'Open Sans',sans-serif;font-size:16px;margin-bottom:12px\\\"> <span style=\\\"color:#173760;font-weight:600\\\">GO INDIA</span> <span style=\\\"color:#b80000;font-weight:600\\\"> STOCKS</span> </span> <form id=\\\"loginForm\\\"> <input required type=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Email ID\\\"> <input required type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\"> <button type=\\\"submit\\\" class=\\\"login-btn\\\"> <span id=\\\"loginText\\\">Login</span> <div id=\\\"loginSpinner\\\" class=\\\"spinner\\\" style=\\\"display:none\\\"></div> </button> </form> <div class=\\\"divider\\\"> <hr><span>OR</span><hr> </div> <div class=\\\"social-buttons\\\"> <div id=\\\"googleSignInButton\\\"></div> </div> <div class=\\\"signup\\\"> <p>Don't have an account?</p> <button onclick='window.open(\\\"https://www.goindiastocks.com/loginpage\\\",\\\"_blank\\\")'> Sign Up </button> </div> </div> </div> <div id=\\\"memberContent\\\" style=\\\"display:none\\\"> <div id=\\\"addinUI\\\" style=\\\"display:none\\\"> <a href=\\\"https://www.goindiastocks.com/profile\\\" target=\\\"_blank\\\" id=\\\"profileSection\\\" style=\\\"position:absolute;top:5px;left:30px;display:flex;align-items:center;gap:.5rem;background:#fff;padding:.22rem .6rem;border-radius:10px;box-shadow:0 2px 4px rgba(0,0,0,.1);text-decoration:none;color:inherit\\\"> <div id=\\\"profileIcon\\\" style=\\\"width:32px;height:32px;background:#f0f0f0;border-radius:50%;display:flex;align-items:center;justify-content:center;font-weight:700;color:#555;font-size:14px\\\"> U </div> <span id=\\\"username\\\" style=\\\"font-size:14px;color:#333\\\">Username</span> </a> <div class=\\\"toggle-container\\\"> <input type=\\\"checkbox\\\" id=\\\"modeToggle\\\"/> <label for=\\\"modeToggle\\\" class=\\\"toggle-label\\\"> <span class=\\\"toggle-option left\\\">IndAS</span> <span class=\\\"toggle-option right\\\">Detailed</span> <span class=\\\"toggle-slider\\\"></span> </label> </div> <div class=\\\"dropdown\\\" id=\\\"customDropdown\\\"> <div class=\\\"dropdown-toggle\\\" id=\\\"dropdownToggle\\\" data-value=\\\"\\\">Select Company</div> <div class=\\\"dropdown-menu\\\" id=\\\"dropdownMenu\\\"> <input type=\\\"text\\\" id=\\\"dropdownSearch\\\" placeholder=\\\"Search company...\\\"/> <ul id=\\\"dropdownList\\\"></ul> </div> </div> <div id=\\\"buttons\\\"> <button id=\\\"refreshBtn\\\">Download Data</button> <button id=\\\"helpBtn\\\">Help</button> </div> <div id=\\\"warningMsg\\\" style=\\\"display:none;color:red;margin-top:10px\\\"></div> <div id=\\\"infoBox\\\"> <span class=\\\"icon\\\">⚠️</span> <span class=\\\"text\\\"> Reminder: Clicking the <b>Download Data</b> button will replace the existing data in your Key Financials, Quarterly and Annual Data sheets with the new company's data. </span> <span class=\\\"closeBtn\\\">&times;</span> </div> <div style=\\\"margin-top:22px;display:flex;padding:8px;align-items:center;gap:10px;border:1px solid #ccc;border-radius:5px\\\"> <div id=\\\"dataStatus\\\" style=\\\"font-size:small\\\"> Checking for new data... </div> <button id=\\\"refreshStatusBtn\\\" disabled=\\\"disabled\\\">Refresh</button> </div> <button id=\\\"logoutBtn\\\" style=\\\"margin-top:3rem;margin-left:0;background:#fff;color:#b80000;padding:.5rem 1rem;border:1px solid #b80000;border-radius:12px;cursor:pointer;transition:transform .2s,box-shadow .2s\\\"> Log Out </button> </div> </div> <div id=\\\"blockedContainer\\\" style=\\\"display:none;text-align:center;padding:2rem;width:100%\\\"> <div style=\\\"background:#fff;border-radius:20px;padding:2rem;max-width:400px;margin:auto;display:flex;flex-direction:column;align-items:center;justify-content:center\\\"> <img src=\\\"https://www.goindiastocks.com/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Flogo.eb4c0c16.png&w=1920&q=75\\\" alt=\\\"Membership Required\\\" style=\\\"width:100px;margin-bottom:1rem\\\"> <p style=\\\"color:#b80000;font-weight:700;margin-bottom:1rem\\\">Only GIIN Club/Enterprise members can access this add-in.</p> <button onclick='window.open(\\\"https://www.goindiastocks.com/pricing\\\",\\\"_blank\\\")' style=\\\"background:#173760;color:#fff;border:none;padding:.5rem 1rem;border-radius:12px;cursor:pointer\\\"> Join Now </button> </div> </div> </div> <\" + \"script>function parseJwt(e){const t=e.split(\\\".\\\")[1].replace(/-/g,\\\"+\\\").replace(/_/g,\\\"/\\\"),n=decodeURIComponent(atob(t).split(\\\"\\\").map(function(e){return\\\"%\\\"+(\\\"00\\\"+e.charCodeAt(0).toString(16)).slice(-2)}).join(\\\"\\\"));return JSON.parse(n)}async function handleCredentialResponse(e){try{const t=parseJwt(e.credential),n=t.name,o=t.email;let a=await fetch(\\\"https://transcriptanalyser.com/payment/getGoogleuser\\\",{method:\\\"POST\\\",headers:{\\\"Content-Type\\\":\\\"application/json\\\"},body:JSON.stringify({fullname:n,email:o})}),l=await a.json(),s=await fetch(\\\"https://transcriptanalyser.com/payment/check_membership\\\",{method:\\\"POST\\\",headers:{\\\"Content-Type\\\":\\\"application/json\\\"},body:JSON.stringify({user_id:l.UserId})}),d=await s.json();if(\\\"yes\\\"===d.is_member||d.is_enterprise_member){localStorage.setItem(\\\"user\\\",JSON.stringify(l)),localStorage.setItem(\\\"membership\\\",JSON.stringify(d)),document.getElementById(\\\"loginContainer\\\").style.display=\\\"none\\\",document.getElementById(\\\"memberContent\\\").style.display=\\\"block\\\",document.getElementById(\\\"addinUI\\\").style.display=\\\"block\\\",document.getElementById(\\\"logoutBtn\\\").style.display=\\\"block\\\";const e=document.getElementById(\\\"profileIcon\\\"),t=document.getElementById(\\\"username\\\");if(l.FullName){t.textContent=l.FullName;const n=l.FullName.split(\\\" \\\").map(e=>e[0]).join(\\\"\\\").toUpperCase();e.textContent=n}}else document.getElementById(\\\"loginContainer\\\").style.display=\\\"none\\\",document.getElementById(\\\"blockedContainer\\\").style.display=\\\"block\\\"}catch(e){console.error(\\\"Login or membership check failed:\\\",e)}}document.addEventListener(\\\"DOMContentLoaded\\\",()=>{document.querySelector(\\\"#infoBox .closeBtn\\\").addEventListener(\\\"click\\\",()=>{document.getElementById(\\\"infoBox\\\").style.display=\\\"none\\\"})}),window.onload=function(){google&&google.accounts&&google.accounts.id?(google.accounts.id.initialize({client_id:\\\"588713186952-isq15ehjattbfce2hhhqnuffdfln3nco.apps.googleusercontent.com\\\",callback:handleCredentialResponse}),google.accounts.id.renderButton(document.getElementById(\\\"googleSignInButton\\\"),{theme:\\\"outline\\\",size:\\\"large\\\",width:250})):console.error(\\\"Google Identity Services not loaded yet.\\\")};let companies=[];async function fetchCompanies(){const e=await fetch(\\\"https://transcriptanalyser.com/operational/companies_excel\\\");return await e.json()}function populateCustomDropdown(e,t=!1){const n=document.getElementById(\\\"dropdownList\\\"),o=document.getElementById(\\\"dropdownToggle\\\");n.innerHTML=\\\"\\\",t&&(o.textContent=\\\"Select Company\\\",o.dataset.value=\\\"\\\",o.dataset.sector=\\\"\\\"),e.forEach(e=>{const t=document.createElement(\\\"li\\\");t.textContent=e.CompName,t.dataset.value=e.fincode,t.dataset.sector=e.sector_type,t.addEventListener(\\\"click\\\",()=>{o.textContent=e.CompName,o.dataset.value=e.fincode,o.dataset.sector=e.sector_type,document.getElementById(\\\"dropdownMenu\\\").classList.remove(\\\"active\\\")}),n.appendChild(t)})}async function initCustomDropdown(){companies=await fetchCompanies(),populateCustomDropdown(companies,!0)}document.getElementById(\\\"dropdownToggle\\\").addEventListener(\\\"click\\\",()=>{document.getElementById(\\\"dropdownMenu\\\").classList.toggle(\\\"active\\\")}),document.getElementById(\\\"dropdownSearch\\\").addEventListener(\\\"input\\\",e=>{const t=e.target.value.toLowerCase();populateCustomDropdown(companies.filter(e=>e.CompName.toLowerCase().includes(t)))}),initCustomDropdown();const showMessage=e=>{Office?.Runtime?.displayDialogAsync?console.log(e):alert(e)},getSelectedCompany=()=>{const e=document.getElementById(\\\"dropdownToggle\\\");if(!e)return null;const t=e.dataset?.value||\\\"\\\",n=e.textContent?.trim()||\\\"\\\";return t&&n&&\\\"Select Company\\\"!==n?{fincode:t,name:n}:null};document.getElementById(\\\"refreshBtn\\\").addEventListener(\\\"click\\\",()=>{const e=getSelectedCompany(),t=document.getElementById(\\\"warningMsg\\\");if(!e)return t.textContent=\\\"⚠ Please select a company to download data.\\\",t.style.display=\\\"block\\\",void setTimeout(()=>{t.style.display=\\\"none\\\"},3e3);t.style.display=\\\"none\\\";const{fincode:n,name:o}=e;document.getElementById(\\\"dropdownToggle\\\").dataset.sector,document.getElementById(\\\"modeToggle\\\")}),document.getElementById(\\\"helpBtn\\\").addEventListener(\\\"click\\\",()=>{const e=getSelectedCompany();if(!e)return void alert(\\\"⚠ Please select a company first.\\\");const{fincode:t}=e,n=`https://www.goindiastocks.com/companyinfo/${encodeURIComponent(t)}`;window.open(n,\\\"_blank\\\")}),initCustomDropdown()<\" + \"/script>  </body> </html> \";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","d","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","t","r","Symbol","n","iterator","toStringTag","c","Generator","u","create","_regeneratorDefine2","f","y","G","v","a","bind","l","TypeError","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","_invoke","configurable","writable","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_checkLocalSession","_callee8","savedUser","savedMembership","user","res","updatedMembership","profileIcon","username","_t5","_context8","localStorage","getItem","JSON","parse","fetch","method","headers","body","stringify","user_id","UserId","ok","json","is_member","is_enterprise_member","getElementById","style","display","FullName","textContent","split","map","join","removeItem","console","error","addEventListener","_ref","_callee","email","password","loginText","loginSpinner","_user","_membership","usernameEl","initials","resUser","resMembership","membership","_profileIcon","_usernameEl","_initials","_t","_context","preventDefault","target","setItem","_x2","checkLocalSession","lastMatchedCompany","fetchFinancialData","_fetchFinancialData","_callee1","cellValue","searchRes","searchData","companyValue","compRes","companies","matchedCompany","fincode","sectorType","plRes","plData","statusDiv","_t9","_context1","Excel","run","_ref7","_callee9","context","sheet","range","indexSheet","fallbackRange","_context9","workbook","worksheets","load","sync","warn","getRange","values","_x6","color","searchtxt","data","find","toString","sector_type","mode","sector","_ref8","_callee0","parseExcelHeader","usedRange","rowValues","_statusDiv","latestSheetHeader","apiHeaders","_statusDiv2","latestApi","excelH","apiH","refreshBtn","_statusDiv3","_t8","_context0","header","_header$split2","_slicedToArray","monthStr","yearStr","month","Date","concat","getMonth","year","parseInt","getUsedRange","text","log","h","trim","filter","column","accessorKey","slice","original","reduce","CompName","disabled","_x7","message","Office","onReady","_ref2","_callee4","info","refreshStatusBtn","handleRefresh","_handleRefresh","_context4","_callee3","toggle","name","modeToggle","isIndAS","sheetSuffix","_yield$Promise$all","_yield$Promise$all2","cashCResp","cashSResp","qplCResp","qplSResp","bsCResp","bsSResp","plCResp","plSResp","keyfResp","_yield$Promise$all3","_yield$Promise$all4","cashCData","cashSData","qplCData","qplSData","bsCData","bsSData","plCData","plSData","keyfData","_isConsolidatedEmpty","_t2","_context3","dataset","alert","checked","all","isConsolidatedEmpty","_data$value","ignoredFields","every","row","parentEmpty","keys","k","includes","val","toLowerCase","childrenEmpty","child","_ref3","_callee2","_keyfData$value","sheetNames","existingNames","sheetsMap","_i","_sheetNames","sheetName","_sheet$getUsedRange","_nameCell","getExcelColumnLetter","formatTable","indexSheetName","_indexSheet$getUsedRa","logoCell","titleCell","nameCell","modelCell","dateCell","today","formattedDate","rowIdx","_i2","_sections","section","cell","keySheet","keyArray","staticFields","dynamicHeaders","sortedDynamicHeaders","keyHeaders","keyValues","_flattenHierarchicalData","writeSideBySide","_context2","items","s","clear","add","format","font","bold","size","fill","columnWidth","colNum","temp","letter","String","fromCharCode","startRow","title","lastCol","headerRange","position","horizontalAlignment","verticalAlignment","rowHeight","getDate","padStart","getFullYear","marker","formulas","underline","autofitColumns","Set","forEach","Array","from","sort","_toConsumableArray","_row$h","_row$Parameter","Parameter","flattenHierarchicalData","level","_step","rows","_iterator","_createForOfIteratorHelper","_row$child","push","_objectSpread","_level","err","standaloneData","consolidatedData","sectionName","_step2","_iterator2","_row2$child","processData","_data$value2","flatData","months","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","parseDate","_months$mon","_ref5","match","mon","getHeaders","_row$Parameter2","_row$h2","repeat","dataStartRow","idx","_x4","host","HostType","onclick","url","encodeURIComponent","open","_x3","URL"],"sourceRoot":""}