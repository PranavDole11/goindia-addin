{"version":3,"file":"taskpane.js","mappings":";iGACIA,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,OACf,CAGAJ,EAAoBO,EAAID,ECxBxBN,EAAoBQ,EAAI,SAASJ,EAASK,GACzC,IAAI,IAAIC,KAAOD,EACXT,EAAoBW,EAAEF,EAAYC,KAASV,EAAoBW,EAAEP,EAASM,IAC5EE,OAAOC,eAAeT,EAASM,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAG3E,ECPAV,EAAoBgB,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,EAChB,CAAE,MAAOC,GACR,GAAsB,iBAAXC,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxBrB,EAAoBW,EAAI,SAASW,EAAKC,GAAQ,OAAOX,OAAOY,UAAUC,eAAeC,KAAKJ,EAAKC,EAAO,E,WCAtG,IAAII,EACA3B,EAAoBgB,EAAEY,gBAAeD,EAAY3B,EAAoBgB,EAAEa,SAAW,IACtF,IAAIC,EAAW9B,EAAoBgB,EAAEc,SACrC,IAAKH,GAAaG,IACbA,EAASC,eAAkE,WAAjDD,EAASC,cAAcC,QAAQC,gBAC5DN,EAAYG,EAASC,cAAcG,MAC/BP,GAAW,CACf,IAAIQ,EAAUL,EAASM,qBAAqB,UAC5C,GAAGD,EAAQE,OAEV,IADA,IAAIC,EAAIH,EAAQE,OAAS,EAClBC,GAAK,KAAOX,IAAc,aAAaY,KAAKZ,KAAaA,EAAYQ,EAAQG,KAAKJ,GAE3F,CAID,IAAKP,EAAW,MAAM,IAAIa,MAAM,yDAChCb,EAAYA,EAAUc,QAAQ,SAAU,IAAIA,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KAC1GzC,EAAoB0C,EAAIf,C,IClBxB3B,EAAoB2C,EAAIb,SAASc,SAAWC,KAAKhB,SAASiB,K,orGCC1D,IAAA1B,EAAA2B,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAxC,EAAAqC,EAAAI,aAAA,yBAAAd,EAAAU,EAAAE,EAAAvC,EAAA2B,GAAA,IAAAe,EAAAH,GAAAA,EAAA1B,qBAAA8B,EAAAJ,EAAAI,EAAAC,EAAA3C,OAAA4C,OAAAH,EAAA7B,WAAA,OAAAiC,EAAAF,EAAA,mBAAAP,EAAAE,EAAAvC,GAAA,IAAA2B,EAAAe,EAAAE,EAAAG,EAAA,EAAAhB,EAAA/B,GAAA,GAAAgD,GAAA,EAAAC,EAAA,CAAAlB,EAAA,EAAAQ,EAAA,EAAAW,EAAAzC,EAAA0C,EAAAtD,EAAAkD,EAAAlD,EAAAuD,KAAA3C,EAAA,GAAAZ,EAAA,SAAAuC,EAAAC,GAAA,OAAAV,EAAAS,EAAAM,EAAA,EAAAE,EAAAnC,EAAAwC,EAAAV,EAAAF,EAAAc,CAAA,YAAAtD,EAAAwC,EAAAE,GAAA,IAAAG,EAAAL,EAAAO,EAAAL,EAAAH,EAAA,GAAAY,GAAAD,IAAA/C,GAAAoC,EAAAL,EAAAL,OAAAU,IAAA,KAAApC,EAAA2B,EAAAI,EAAAK,GAAAvC,EAAAoD,EAAAlB,EAAAsB,EAAA1B,EAAA,GAAAU,EAAA,GAAArC,EAAAqD,IAAAd,KAAAK,EAAAjB,GAAAe,EAAAf,EAAA,OAAAe,EAAA,MAAAf,EAAA,GAAAA,EAAA,GAAAlB,GAAAkB,EAAA,IAAA9B,KAAAG,EAAAqC,EAAA,GAAAxC,EAAA8B,EAAA,KAAAe,EAAA,EAAAO,EAAAC,EAAAX,EAAAU,EAAAV,EAAAZ,EAAA,IAAA9B,EAAAwD,IAAArD,EAAAqC,EAAA,GAAAV,EAAA,GAAAY,GAAAA,EAAAc,KAAA1B,EAAA,GAAAU,EAAAV,EAAA,GAAAY,EAAAU,EAAAV,EAAAc,EAAAX,EAAA,OAAA1C,GAAAqC,EAAA,SAAAc,EAAA,MAAAH,GAAA,EAAAT,CAAA,iBAAAvC,EAAA+B,EAAAsB,GAAA,GAAAN,EAAA,QAAAO,UAAA,oCAAAN,GAAA,IAAAjB,GAAAlC,EAAAkC,EAAAsB,GAAAX,EAAAX,EAAAa,EAAAS,GAAAjB,EAAAM,EAAA,EAAAjC,EAAAmC,KAAAI,GAAA,CAAArB,IAAAe,EAAAA,EAAA,GAAAA,EAAA,IAAAO,EAAAV,GAAA,GAAA1C,EAAA6C,EAAAE,IAAAK,EAAAV,EAAAK,EAAAK,EAAAC,EAAAN,GAAA,OAAAG,EAAA,EAAApB,EAAA,IAAAe,IAAA1C,EAAA,QAAAoC,EAAAT,EAAA3B,GAAA,MAAAoC,EAAAA,EAAArB,KAAAY,EAAAiB,IAAA,MAAAU,UAAA,wCAAAlB,EAAAmB,KAAA,OAAAnB,EAAAQ,EAAAR,EAAAoB,MAAAd,EAAA,IAAAA,EAAA,YAAAA,IAAAN,EAAAT,EAAA8B,SAAArB,EAAArB,KAAAY,GAAAe,EAAA,IAAAE,EAAAU,UAAA,oCAAAtD,EAAA,YAAA0C,EAAA,GAAAf,EAAAlB,CAAA,UAAA2B,GAAAY,EAAAC,EAAAV,EAAA,GAAAK,EAAAP,EAAAtB,KAAAwB,EAAAU,MAAAE,EAAA,YAAAf,GAAAT,EAAAlB,EAAAiC,EAAA,EAAAE,EAAAR,CAAA,SAAAW,EAAA,UAAAS,MAAApB,EAAAmB,KAAAP,EAAA,GAAAX,EAAArC,EAAA2B,IAAA,GAAAiB,CAAA,KAAAO,EAAA,YAAAR,IAAA,UAAAe,IAAA,UAAAC,IAAA,CAAAvB,EAAAnC,OAAA2D,eAAA,IAAAlB,EAAA,GAAAH,GAAAH,EAAAA,EAAA,GAAAG,QAAAO,EAAAV,EAAA,GAAAG,EAAA,yBAAAH,GAAAQ,EAAAe,EAAA9C,UAAA8B,EAAA9B,UAAAZ,OAAA4C,OAAAH,GAAA,SAAAK,EAAAtC,GAAA,OAAAR,OAAA4D,eAAA5D,OAAA4D,eAAApD,EAAAkD,IAAAlD,EAAAqD,UAAAH,EAAAb,EAAArC,EAAAT,EAAA,sBAAAS,EAAAI,UAAAZ,OAAA4C,OAAAD,GAAAnC,CAAA,QAAAiD,EAAA7C,UAAA8C,EAAAb,EAAAF,EAAA,cAAAe,GAAAb,EAAAa,EAAA,cAAAD,GAAAA,EAAAK,YAAA,oBAAAjB,EAAAa,EAAA3D,EAAA,qBAAA8C,EAAAF,GAAAE,EAAAF,EAAA5C,EAAA,aAAA8C,EAAAF,EAAAL,EAAA,yBAAAO,EAAAF,EAAA,oDAAAoB,EAAA,kBAAAC,EAAAtC,EAAA/B,EAAAmD,EAAA,cAAAD,EAAArC,EAAA4B,EAAAE,EAAAH,GAAA,IAAAT,EAAA1B,OAAAC,eAAA,IAAAyB,EAAA,gBAAAlB,GAAAkB,EAAA,EAAAmB,EAAA,SAAArC,EAAA4B,EAAAE,EAAAH,GAAA,SAAApC,EAAAqC,EAAAE,GAAAO,EAAArC,EAAA4B,EAAA,SAAA5B,GAAA,YAAAyD,QAAA7B,EAAAE,EAAA9B,EAAA,GAAA4B,EAAAV,EAAAA,EAAAlB,EAAA4B,EAAA,CAAAmB,MAAAjB,EAAApC,YAAAiC,EAAA+B,cAAA/B,EAAAgC,UAAAhC,IAAA3B,EAAA4B,GAAAE,GAAAvC,EAAA,UAAAA,EAAA,WAAAA,EAAA,cAAA8C,EAAArC,EAAA4B,EAAAE,EAAAH,EAAA,UAAAiC,EAAA9B,EAAAH,EAAA3B,EAAA4B,EAAArC,EAAAmD,EAAAT,GAAA,QAAAf,EAAAY,EAAAY,GAAAT,GAAAE,EAAAjB,EAAA6B,KAAA,OAAAjB,GAAA,YAAA9B,EAAA8B,EAAA,CAAAZ,EAAA4B,KAAAnB,EAAAQ,GAAA0B,QAAAC,QAAA3B,GAAA4B,KAAAnC,EAAArC,EAAA,UAAAyE,EAAAlC,GAAA,sBAAAH,EAAA,KAAA3B,EAAAiE,UAAA,WAAAJ,QAAA,SAAAjC,EAAArC,GAAA,IAAAmD,EAAAZ,EAAAoC,MAAAvC,EAAA3B,GAAA,SAAAmE,EAAArC,GAAA8B,EAAAlB,EAAAd,EAAArC,EAAA4E,EAAAC,EAAA,OAAAtC,EAAA,UAAAsC,EAAAtC,GAAA8B,EAAAlB,EAAAd,EAAArC,EAAA4E,EAAAC,EAAA,QAAAtC,EAAA,CAAAqC,OAAA,MAobA,SAAAE,IAFC,OAEDA,EAAAL,EAAAT,IAAApE,EAzDA,SAAAmF,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAtB,IAAAC,EAAA,SAAAsB,GAAA,cAAAA,EAAAxD,EAAAwD,EAAAhD,GAAA,OAE8D,GADpDyC,EAAYQ,aAAaC,QAAQ,QACjCR,EAAkBO,aAAaC,QAAQ,eAEzCT,IAAaC,EAAe,CAAAM,EAAAhD,EAAA,QAEkB,OADxC2C,EAAOQ,KAAKC,MAAMX,GACLU,KAAKC,MAAMV,GAAgBM,EAAAxD,EAAA,EAAAwD,EAAAhD,EAAA,EAIxBqD,MAAM,0DAA2D,CAC/EC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAML,KAAKM,UAAU,CAAEC,QAASf,EAAKgB,WACvC,OAJO,IAAHf,EAAGI,EAAArC,GAMAiD,GAAI,CAAFZ,EAAAhD,EAAA,cAAQ,IAAIV,MAAM,+BAA8B,cAAA0D,EAAAhD,EAAA,EAE3B4C,EAAIiB,OAAM,OAAnB,GAGa,QAHbb,EAAArC,EAGDmD,UAAmB,CAAAd,EAAAhD,EAAA,QAgBpC,OAdDpB,SAASmF,eAAe,iBAAiBC,MAAMC,QAAU,QACzDrF,SAASmF,eAAe,WAAWC,MAAMC,QAAU,QACnDrF,SAASmF,eAAe,aAAaC,MAAMC,QAAU,QAG/CpB,EAAcjE,SAASmF,eAAe,eACtCjB,EAAWlE,SAASmF,eAAe,YACrCpB,EAAKuB,WACLpB,EAASqB,YAAcxB,EAAKuB,SAC5BrB,EAAYsB,YAAcxB,EAAKuB,SAC1BE,MAAM,KACNC,IAAI,SAAArE,GAAC,OAAIA,EAAE,EAAE,GACbsE,KAAK,IACLvF,eACRiE,EAAApC,EAAA,GAEM,GAAI,OAGXqC,aAAasB,WAAW,QACxBtB,aAAasB,WAAW,cAAc,OAAAvB,EAAAhD,EAAA,eAAAgD,EAAAxD,EAAA,EAAAuD,EAAAC,EAAArC,EAG1C6D,QAAQC,MAAM,qCAAoC1B,GAClDE,aAAasB,WAAW,QACxBtB,aAAasB,WAAW,cAAc,OAKgB,OAA9D3F,SAASmF,eAAe,eAAeC,MAAMC,QAAU,OAAOjB,EAAApC,EAAA,GACvD,GAAK,EAAA4B,EAAA,kBACfJ,MAAA,KAAAD,UAAA,CA7MDvD,SAASmF,eAAe,aAAaW,iBAAiB,SAAQ,eAAAC,EAAAzC,EAAAT,IAAApE,EAAE,SAAAuH,EAAO1G,GAAC,IAAA2G,EAAAC,EAAAC,EAAAC,EAAAC,EAAAtC,EAAAuC,EAAAC,EAAAtC,EAAAC,EAAAsC,EAAAC,EAAA,OAAA5D,IAAAC,EAAA,SAAA4D,GAAA,cAAAA,EAAA9F,EAAA8F,EAAAtF,GAAA,OAU/B,OATrC9B,EAAEqH,iBAEIV,EAAQ3G,EAAEsH,OAAOX,MAAM5D,MACvB6D,EAAW5G,EAAEsH,OAAOV,SAAS7D,MAG7B8D,EAAYnG,SAASmF,eAAe,aACpCiB,EAAepG,SAASmF,eAAe,gBAC7CgB,EAAUf,MAAMC,QAAU,OAC1Be,EAAahB,MAAMC,QAAU,QAAQqB,EAAA9F,EAAA,EAAA8F,EAAAtF,EAAA,EAIXqD,MAAM,qDAAsD,CAC9EC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAML,KAAKM,UAAU,CAAEoB,MAAAA,EAAOC,SAAAA,MAChC,OAJW,IAAPG,EAAOK,EAAA3E,GAMAiD,GAAI,CAAF0B,EAAAtF,EAAA,cAAQ,IAAIV,MAAM,gBAAe,cAAAgG,EAAAtF,EAAA,EAE7BiF,EAAQpB,OAAM,OAAvB,IAAJlB,EAAI2C,EAAA3E,IACIgC,EAAKgB,OAAM,CAAA2B,EAAAtF,EAAA,cAAQ,IAAIV,MAAM,qBAAoB,cAAAgG,EAAAtF,EAAA,EAGnCqD,MAAM,0DAA2D,CACzFC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAML,KAAKM,UAAU,CAAEC,QAASf,EAAKgB,WACvC,OAJiB,IAAbuB,EAAaI,EAAA3E,GAMAiD,GAAI,CAAF0B,EAAAtF,EAAA,cAAQ,IAAIV,MAAM,2BAA0B,cAAAgG,EAAAtF,EAAA,EAExCkF,EAAcrB,OAAM,OAAvCsB,EAAUG,EAAA3E,EAGhB/B,SAASmF,eAAe,eAAeC,MAAMC,QAAU,OACvDrF,SAASmF,eAAe,oBAAoBC,MAAMC,QAAU,OAE/B,QAAzBkB,EAAWrB,WAEXb,aAAawC,QAAQ,OAAQtC,KAAKM,UAAUd,IAC5CM,aAAawC,QAAQ,aAActC,KAAKM,UAAU0B,IAGlDvG,SAASmF,eAAe,iBAAiBC,MAAMC,QAAU,QACzDrF,SAASmF,eAAe,WAAWC,MAAMC,QAAU,QACnDrF,SAASmF,eAAe,aAAaC,MAAMC,QAAU,QAE/CpB,EAAcjE,SAASmF,eAAe,eACtCjB,EAAWlE,SAASmF,eAAe,YAErCpB,EAAKuB,WACLpB,EAASqB,YAAcxB,EAAKuB,SACtBkB,EAAWzC,EAAKuB,SAASE,MAAM,KAAKC,IAAI,SAAArE,GAAC,OAAIA,EAAE,EAAE,GAAEsE,KAAK,IAAIvF,cAClE8D,EAAYsB,YAAciB,IAI9BxG,SAASmF,eAAe,oBAAoBC,MAAMC,QAAU,OAC/DqB,EAAAtF,EAAA,gBAAAsF,EAAA9F,EAAA,EAAA6F,EAAAC,EAAA3E,EAED6D,QAAQC,MAAKY,GAGbzG,SAASmF,eAAe,eAAeC,MAAMC,QAAU,OACvDrF,SAASmF,eAAe,iBAAiBC,MAAMC,QAAU,OACzDrF,SAASmF,eAAe,oBAAoBC,MAAMC,QAAU,OAAO,QAI/B,OAJ+BqB,EAAA9F,EAAA,GAGnEuF,EAAUf,MAAMC,QAAU,QAC1Be,EAAahB,MAAMC,QAAU,OAAOqB,EAAA9E,EAAA,mBAAA8E,EAAA1E,EAAA,KAAAgE,EAAA,uBAE3C,gBAAAc,GAAA,OAAAf,EAAAvC,MAAA,KAAAD,UAAA,EA1E6D,IAgN9DhE,OAAOuG,iBAAiB,mBAAoB,YAlI5C,WAwEgCnC,EAAAH,MAAC,KAADD,UAAA,CA2D5BwD,EACJ,GAIA/G,SAASmF,eAAe,aAAaW,iBAAiB,QAAS,WAC3DzB,aAAasB,WAAW,QACxBtB,aAAasB,WAAW,cAExB3F,SAASmF,eAAe,iBAAiBC,MAAMC,QAAU,OACzDrF,SAASmF,eAAe,WAAWC,MAAMC,QAAU,OACnDrF,SAASmF,eAAe,aAAaC,MAAMC,QAAU,OACrDrF,SAASmF,eAAe,eAAeC,MAAMC,QAAU,MAC3D,GAIA2B,OAAOC,QAAO,eAAAC,EAAA5D,EAAAT,IAAApE,EAAC,SAAA0I,EAAOC,GAAI,IAAAC,EAMO,OAAAxE,IAAAC,EAAC,SAADwE,GAAA,cAAAA,EAAAlG,GAAA,OAQ5B,GAbGgG,EAAKG,OAASP,OAAOQ,SAASC,MAAK,CAAAH,EAAAlG,EAAA,eAAAkG,EAAAtF,EAAA,UAEjCqF,EAAarH,SAASmF,eAAe,cAC3BnF,SAASmF,eAAe,WAahCuC,QAAU,WACd,IACMC,EADS3H,SAASmF,eAAe,kBAChByC,QAAQvF,MAC/B,IAAKsF,EAAS,OAAOE,MAAM,2BAE3B,IAAMC,EAAM,6CAAHC,OAAgDC,mBAAmBL,IAC5EpI,OAAO0I,KAAKH,EAAK,SACrB,EAGAT,EAAWK,QAAOpE,EAAAT,IAAApE,EAAG,SAAAyJ,IAAA,IAAAC,EAAAR,EAAAS,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAnH,IAAAC,EAAA,SAAAmH,GAAA,cAAAA,EAAArJ,EAAAqJ,EAAA7I,GAAA,OAGc,GAFzB+G,EAASnI,SAASmF,eAAe,kBACjCwC,EAAUQ,EAAOP,QAAQvF,MACzB+F,EAAOD,EAAO5C,YAEfoC,EAAS,CAAFsC,EAAA7I,EAAA,eAAA6I,EAAAjI,EAAA,EAAS6F,MAAM,4BAA0B,OAajD,OAXEQ,EAAarI,SAASmF,eAAe,kBAAkByC,QAAQsC,OAG/D5B,EAAatI,SAASmF,eAAe,cACrCoD,EAAUD,EAAW6B,QAGrB3B,EAAcD,EAAU,GAAK,MAAO0B,EAAArJ,EAAA,EAEtCgF,QAAQwE,IAAI,2BAADrC,OAA4BJ,EAAO,OAAAI,OAAMK,EAAI,aAAAL,OAAYQ,EAAU,KAAO,OAErF0B,EAAA7I,EAAA,EAMsB+B,QAAQkH,IAAI,CAG1B5F,MAAM,gEAAiE,CACnEC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAML,KAAKM,UAAU,CAAE8C,QAAAA,EAAS2C,KAAM,IAAKJ,OAAQ7B,EAAYkC,MAAO,WAAFxC,OAAaS,OAErF/D,MAAM,gEAAiE,CACnEC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAML,KAAKM,UAAU,CAAE8C,QAAAA,EAAS2C,KAAM,IAAKJ,OAAQ7B,EAAYkC,MAAO,WAAFxC,OAAaS,OAIrF/D,MAAM,gEAAiE,CACnEC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAML,KAAKM,UAAU,CAAE8C,QAAAA,EAAS2C,KAAM,IAAKJ,OAAQ7B,EAAYkC,MAAO,cAAFxC,OAAgBS,OAExF/D,MAAM,gEAAiE,CACnEC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAML,KAAKM,UAAU,CAAE8C,QAAAA,EAAS2C,KAAM,IAAKJ,OAAQ7B,EAAYkC,MAAO,cAAFxC,OAAgBS,OAIxF/D,MAAM,gEAAiE,CACnEC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAML,KAAKM,UAAU,CAAE8C,QAAAA,EAAS2C,KAAM,IAAKJ,OAAQ7B,EAAYkC,MAAO,eAAFxC,OAAiBS,OAEzF/D,MAAM,gEAAiE,CACnEC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAML,KAAKM,UAAU,CAAE8C,QAAAA,EAAS2C,KAAM,IAAKJ,OAAQ7B,EAAYkC,MAAO,eAAFxC,OAAiBS,OAIzF/D,MAAM,gEAAiE,CACnEC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAML,KAAKM,UAAU,CAAE8C,QAAAA,EAAS2C,KAAM,IAAKJ,OAAQ7B,EAAYkC,MAAO,aAAFxC,OAAeS,OAEvF/D,MAAM,gEAAiE,CACnEC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAML,KAAKM,UAAU,CAAE8C,QAAAA,EAAS2C,KAAM,IAAKJ,OAAQ7B,EAAYkC,MAAO,aAAFxC,OAAeS,OAIvF/D,MAAM,+DAAgE,CAClEC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAML,KAAKM,UAAU,CAAE8C,QAAAA,EAAS2C,KAAM,IAAKE,YAAanC,QAE9D,OAxDM,OAwDNI,EAAAwB,EAAAlI,EAAA2G,EAAA+B,EAAAhC,EAAA,GA5DFE,EAASD,EAAA,GAAEE,EAASF,EAAA,GACpBG,EAAQH,EAAA,GAAEI,EAAQJ,EAAA,GAClBK,EAAOL,EAAA,GAAEM,EAAON,EAAA,GAChBO,EAAOP,EAAA,GAAEQ,EAAOR,EAAA,GAChBS,EAAQT,EAAA,GAAAuB,EAAA7I,EAAA,EAiEF+B,QAAQkH,IAAI,CAClB1B,EAAU1D,OAAQ2D,EAAU3D,OAC5B4D,EAAS5D,OAAQ6D,EAAS7D,OAC1B8D,EAAQ9D,OAAQ+D,EAAQ/D,OACxBgE,EAAQhE,OAAQiE,EAAQjE,OACxBkE,EAASlE,SACX,OAwBD,OAxBCmE,EAAAa,EAAAlI,EAAAsH,EAAAoB,EAAArB,EAAA,GAXEE,EAASD,EAAA,GAAEE,EAASF,EAAA,GACpBG,EAAQH,EAAA,GAAEI,EAAQJ,EAAA,GAClBK,EAAOL,EAAA,GAAEM,EAAON,EAAA,GAChBO,EAAOP,EAAA,GAAEQ,EAAOR,EAAA,GAChBS,EAAQT,EAAA,GASNqB,EAAsB,SAACC,GAAS,IAAAC,EAClC,GAAKD,SAAW,QAAPC,EAAJD,EAAMtI,aAAK,IAAAuI,IAAXA,EAAarK,OAAQ,OAAO,EAEjC,IAAMsK,EAAgB,CAAC,YAAa,QAAS,QAAS,OAAQ,YAAa,KAAM,OAkBjF,OAAOF,EAAKtI,MAAMyI,MAhBD,SAACC,GACd,IACMC,EADOlM,OAAOmM,KAAKF,GAAKG,OAAO,SAAAC,GAAC,OAAKN,EAAcO,SAASD,EAAE,GAC3CL,MAAM,SAAAK,GAC3B,IAAME,EAAMN,EAAII,GAChB,GAAW,MAAPE,EAAa,OAAO,EACxB,GAAmB,iBAARA,EAAkB,OAAe,IAARA,EACpC,GAAmB,iBAARA,EAAkB,CACzB,IAAMtJ,EAAIsJ,EAAIC,OAAOC,cACrB,MAAa,MAANxJ,GAAmB,OAANA,GAAoB,qBAANA,GAAkC,KAANA,CAClE,CACA,OAAO,CACX,GACMyJ,GAAiBT,EAAIU,OAASf,EAAoB,CAAErI,MAAO0I,EAAIU,QACrE,OAAOT,GAAeQ,CAC1B,EAGJ,EAACvB,EAAA7I,EAAA,EAIKqG,MAAMiE,IAAG,eAAAC,EAAArI,EAAAT,IAAApE,EAAC,SAAAmN,EAAOC,GAAO,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA9B,EAAA+B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAAlD,GAAA,OAAAlI,IAAAC,EAAA,SAAAoL,GAAA,cAAAA,EAAA9M,GAAA,OAGa,OAFjC2K,EAAWF,EAAQE,SACnBC,EAAa,CAAC,iBAAkB,iBAAkB,eACxDD,EAASoC,WAAWC,KAAK,cAAcF,EAAA9M,EAAA,EACjCyK,EAAQwC,OAAM,OAMpB,IAJMpC,EAAgBF,EAASoC,WAAWG,MAAM7I,IAAI,SAAA8I,GAAC,OAAIA,EAAEnG,IAAI,GACzD8D,EAAY,CAAC,EAGnBC,EAAA,EAAAC,EAAwBJ,EAAUG,EAAAC,EAAA7L,OAAA4L,IAAvBE,EAASD,EAAAD,GACZ5B,OAAK,EACL0B,EAAcb,SAASiB,IACvB9B,EAAQwB,EAASoC,WAAW7J,QAAQ+H,GAChB,QAApBC,EAAA/B,EAAMiE,sBAAc,IAAAlC,GAApBA,EAAsBmC,SAEtBlE,EAAQwB,EAASoC,WAAWO,IAAIrC,GAEpCH,EAAUG,GAAa9B,GAGjBwC,EAAWxC,EAAMoE,SAAS,OACvBC,OAAS,CAAC,CAACxG,IACpB2E,EAAS8B,OAAOC,KAAKC,MAAO,EAC5BhC,EAAS8B,OAAOC,KAAKE,KAAO,GAC5BjC,EAAS8B,OAAOI,KAAKC,MAAQ,UAG7B3E,EAAMoE,SAAS,OAAOE,OAAOM,YAAc,IAC9C,OAAAjB,EAAA9M,EAAA,EAEKyK,EAAQwC,OAAM,OA+GpB,IA5GM7B,EAAuB,SAAC4C,GAG1B,IAFA,IAAIC,EAAO,GACPC,EAAS,GACNF,EAAS,GACZC,GAAQD,EAAS,GAAK,GACtBE,EAASC,OAAOC,aAAaH,EAAO,IAAMC,EAC1CF,GAAUA,EAASC,EAAO,GAAK,GAEnC,OAAOC,CACX,EAEM7C,EAAc,SAAClC,EAAOkF,EAAUC,EAAO/K,EAASiK,GAClD,IAAMe,EAAUnD,EAAqB7H,EAAQpE,QAGvCuM,EAAYvC,EAAMoE,SAAS,IAAD5G,OAAK0H,IACrC3C,EAAU8B,OAAS,CAAC,CAACc,IACrB5C,EAAU+B,OAAOC,KAAKC,MAAO,EAC7BU,IAGA,IAAMG,EAAcrF,EAAMoE,SAAS,IAAD5G,OAAK0H,EAAQ,KAAA1H,OAAI4H,GAAO5H,OAAG0H,IAgB7D,OAfAG,EAAYhB,OAAS,CAACjK,GACtBiL,EAAYf,OAAOI,KAAKC,MAAQ,UAChCU,EAAYf,OAAOC,KAAKC,MAAO,EAC/BU,IAGIb,EAAOrO,OAAS,GACEgK,EAAMoE,SAAS,IAAD5G,OAAK0H,EAAQ,KAAA1H,OAAI4H,GAAO5H,OAAG0H,EAAWb,EAAOrO,OAAS,IAC5EqO,OAASA,EACnBa,GAAYb,EAAOrO,SAEnBgK,EAAMoE,SAAS,IAAD5G,OAAK0H,IAAYb,OAAS,CAAC,CAAC,sBAC1Ca,KAGGA,EAAW,CACtB,EAGM/C,EAAiB,QAEnBT,EAAcb,SAASsB,IACvBC,EAAaZ,EAASoC,WAAW7J,QAAQoI,GAChB,QAAzBE,EAAAD,EAAW6B,sBAAc,IAAA5B,GAAzBA,EAA2B6B,SAE3B9B,EAAaZ,EAASoC,WAAWO,IAAIhC,GAEzCR,EAAUQ,GAAkBC,EAG5BA,EAAWkD,SAAW,EAGPlD,EAAWgC,SAAS,SAC5BE,OAAOI,KAAKC,MAAQ,WAGrBrC,EAAWF,EAAWgC,SAAS,OAC5BC,OAAS,CAAC,CACf,sHAEJ/B,EAASgC,OAAOiB,oBAAsB,SACtCjD,EAASgC,OAAOkB,kBAAoB,SACpClD,EAASgC,OAAOmB,UAAY,GAC5BrD,EAAWgC,SAAS,OAAOE,OAAOM,YAAc,GAGhDtC,EAASgC,OAAOmB,UAAY,GAC5BrD,EAAWgC,SAAS,OAAOE,OAAOM,YAAc,IAE1CrC,EAAYH,EAAWgC,SAAS,OAC5BC,OAAS,CAAC,CAAC,oBACrB9B,EAAU+B,OAAOC,KAAKC,MAAO,EAC7BjC,EAAU+B,OAAOC,KAAKE,KAAO,GAC7BlC,EAAU+B,OAAOiB,oBAAsB,yBAGjC/C,EAAWJ,EAAWgC,SAAS,OAC5BC,OAAS,CAAC,CAAC,YAAD7G,OAAaK,KAChC2E,EAAS8B,OAAOC,KAAKC,MAAO,EAC5BhC,EAAS8B,OAAOC,KAAKE,KAAO,GAC5BjC,EAAS8B,OAAOiB,oBAAsB,QAEhC9C,EAAYL,EAAWgC,SAAS,OAC5BC,OAAS,CAAC,CAAC,sCACrB5B,EAAU6B,OAAOC,KAAKE,KAAO,GAC7BhC,EAAU6B,OAAOiB,oBAAsB,OAEjC7C,EAAWN,EAAWgC,SAAS,MAC/BzB,EAAQ,IAAI+C,KACZ9C,EAAgB,GAAHpF,OAAMmF,EAAMgD,UAAUC,WAAWC,SAAS,EAAE,KAAI,KAAArI,QAAKmF,EAAMmD,WAAW,GAAGF,WAAWC,SAAS,EAAE,KAAI,KAAArI,OAAImF,EAAMoD,eAChIrD,EAAS2B,OAAS,CAAC,CAAC,iBAAD7G,OAAkBoF,KACrCF,EAAS4B,OAAOC,KAAKE,KAAO,GAC5B/B,EAAS4B,OAAOiB,oBAAsB,OAYlC1C,EAAS,EACbC,EAAA,EAAAC,EAViB,CACb,CAAElF,KAAM,iBAAkBmC,MAAO,iBAAkBgG,OAAQ,kBAC3D,CAAEnI,KAAM,iCAAkCmC,MAAO,iBAAkBgG,OAAQ,iBAC3E,CAAEnI,KAAM,8BAA+BmC,MAAO,cAAegG,OAAQ,iBACrE,CAAEnI,KAAM,2BAA4BmC,MAAO,cAAegG,OAAQ,cAClE,CAAEnI,KAAM,6BAA8BmC,MAAO,cAAegG,OAAQ,iBAK1ClD,EAAAC,EAAA/M,OAAA8M,IAAnBE,EAAOD,EAAAD,IACRG,EAAOb,EAAWgC,SAAS,IAAD5G,OAAKqF,KAChCwB,OAAS,CAAC,CAACrB,EAAQnF,OAGxBoF,EAAKgD,SAAW,CAAC,CAAC,kBAADzI,OACIwF,EAAQhD,MAAK,mBAAAxC,OAAiBwF,EAAQgD,OAAM,SAAAxI,OAAOwF,EAAQhD,MAAK,iBAAAxC,OAAewF,EAAQnF,KAAI,QAGhHoF,EAAKqB,OAAOC,KAAKI,MAAQ,UACzB1B,EAAKqB,OAAOC,KAAK2B,UAAY,SAC7BjD,EAAKqB,OAAOiB,oBAAsB,OAClC1C,IAgKmF,OA5JvFT,EAAWgC,SAAS,OAAOE,OAAO6B,iBAGlC/D,EAAWgC,SAAS,OAAD5G,OAAQqF,EAAS,IAAKyB,OAAOiB,oBAAsB,wBAIhErC,EAAWvB,EAAU,mBACvBpC,SAAe,QAAPgC,EAARhC,EAAUzH,aAAK,IAAAyJ,OAAA,EAAfA,EAAiBvL,QAAS,IACpBmN,EAAW5D,EAASzH,MACpBsL,EAAe,CAAC,aAChBC,EAAiB,IAAI+C,IAE3BjD,EAASkD,QAAQ,SAAA7F,GACbjM,OAAOmM,KAAKF,GAAK6F,QAAQ,SAAAhS,IAChB+O,EAAavC,SAASxM,IAAQ,gBAAgB6B,KAAK7B,IAAMgP,EAAec,IAAI9P,EACrF,EACJ,GAEMiP,EAAuBgD,MAAMC,KAAKlD,GAAgBmD,KAAK,SAAC/O,EAAGnB,GAAC,OAC9DmQ,SAAShP,EAAErB,QAAQ,KAAM,IAAIA,QAAQ,IAAK,KAAOqQ,SAASnQ,EAAEF,QAAQ,KAAM,IAAIA,QAAQ,IAAK,IAAI,GAE7FmN,EAAa,CAAC,aAAW/F,OAAAkJ,EAAKpD,IAC9BE,EAAYL,EAASjI,IAAI,SAAAsF,GAAG,OAAI+C,EAAWrI,IAAI,SAAAyL,GAAC,IAAAC,EAAAC,EAAA,OAAU,QAAVD,EAAIpG,EAAImG,UAAE,IAAAC,EAAAA,EAAW,cAAND,GAAiC,QAAhBE,EAAGrG,EAAIsG,iBAAS,IAAAD,EAAAA,EAAS,EAAE,EAAE,GAInH3D,EAASkB,SAAS,IAAD5G,OADA,IACiB6G,OAAS,CAAC,CAAC,mBAC7CnB,EAASkB,SAAS,IAAD5G,OAFA,IAEiB8G,OAAOC,KAAKC,MAAO,EACrDtB,EAASkB,SAAS,IAAD5G,OAHA,IAGiB8G,OAAOC,KAAKE,KAAO,GACrDvB,EAASkB,SAAS,IAAD5G,OAJA,IAIiB8G,OAAOI,KAAKC,MAAQ,UACtDzB,EAASkB,SAAS,IAAD5G,OALA,IAKiB8G,OAAOiB,oBAAsB,wBAG/DrD,EAAYgB,EARK,EAQe,iBAAkBK,EAAYC,IAG5DuD,EAA0B,SAAC3G,GAAoB,IAAd4G,EAAKhO,UAAAhD,OAAA,QAAAlC,IAAAkF,UAAA,GAAAA,UAAA,GAAG,EAC3C,IAAKoH,EAAM,MAAO,GAClB,IACsB6G,EADhBC,EAAO,GAAGC,EAAAC,EACEhH,GAAI,IAAtB,IAAA+G,EAAAnD,MAAAiD,EAAAE,EAAAtQ,KAAAgB,MAAwB,KAAAwP,EAAb7G,EAAGyG,EAAAnP,MACVoP,EAAKI,KAAIC,EAAAA,EAAC,CAAC,EAAI/G,GAAG,IAAEgH,OAAQR,KACf,QAAbK,EAAI7G,EAAIU,aAAK,IAAAmG,GAATA,EAAWrR,QACXkR,EAAKI,KAAIrO,MAATiO,EAAIR,EAASK,EAAwBvG,EAAIU,MAAO8F,EAAQ,IAEhE,CAAC,OAAAS,GAAAN,EAAApS,EAAA0S,EAAA,SAAAN,EAAA9P,GAAA,CACD,OAAO6P,CACX,EAIMxD,GAAkB,SAAC1D,EAAOkF,EAAUwC,EAAgBC,EAAkBC,GACxE,IAAMxE,EAAe,CAAC,aAsBhB2D,EAA0B,SAAC3G,GAAoB,IAAd4G,EAAKhO,UAAAhD,OAAA,QAAAlC,IAAAkF,UAAA,GAAAA,UAAA,GAAG,EAC3C,IAAKoH,EAAM,MAAO,GAClB,IACsByH,EADhBX,EAAO,GAAGY,EAAAV,EACEhH,GAAI,IAAtB,IAAA0H,EAAA9D,MAAA6D,EAAAC,EAAAjR,KAAAgB,MAAwB,KAAAkQ,EAAbvH,EAAGqH,EAAA/P,MACVoP,EAAKI,KAAIC,EAAAA,EAAC,CAAC,EAAI/G,GAAG,IAAEgH,OAAQR,KACf,QAAbe,EAAIvH,EAAIU,aAAK,IAAA6G,GAATA,EAAW/R,QACXkR,EAAKI,KAAIrO,MAATiO,EAAIR,EAASK,EAAwBvG,EAAIU,MAAO8F,EAAQ,IAEhE,CAAC,OAAAS,GAAAK,EAAA/S,EAAA0S,EAAA,SAAAK,EAAAzQ,GAAA,CACD,OAAO6P,CACX,EAGAlH,EAAMoE,SAAS,IAAD5G,OAAK0H,IAAYb,OAAS,CAAC,CAACuD,IAC1C5H,EAAMoE,SAAS,IAAD5G,OAAK0H,IAAYZ,OAAOC,KAAKC,MAAO,EAClDxE,EAAMoE,SAAS,IAAD5G,OAAK0H,IAAYZ,OAAOC,KAAKE,KAAO,GAClDzE,EAAMoE,SAAS,IAAD5G,OAAK0H,IAAYZ,OAAOI,KAAKC,MAAQ,UACnD3E,EAAMoE,SAAS,IAAD5G,OAAK0H,IAAYZ,OAAOiB,oBAAsB,wBAC5DL,IAGA,IAAM8C,EAAc,SAAC5H,EAAM+E,GAAU,IAAA8C,EACjC,GAAK7H,SAAW,QAAP6H,EAAJ7H,EAAMtI,aAAK,IAAAmQ,IAAXA,EAAajS,OAId,OAFAgK,EAAMoE,SAAS,IAAD5G,OAAK0H,IAAYb,OAAS,CAAC,CAAC,GAAD7G,OAAI2H,EAAK,uCAClDD,EAIJ,IAAMgD,EAAWnB,EAAwB3G,EAAKtI,OACxCsC,EAAU,CAAC,aAAWoD,OAAAkJ,EAjDb,SAACtG,GAChB,GAAKA,UAAAA,EAAMpK,OAAQ,MAAO,GAC1B,IAAMoE,EAAU,IAAIgM,IAMpB,OALAhG,EAAKiG,QAAQ,SAAA7F,GACTjM,OAAOmM,KAAKF,GAAK6F,QAAQ,SAAAzF,IAChBwC,EAAavC,SAASD,IAAM,uBAAuB1K,KAAK0K,IAAIxG,EAAQ+J,IAAIvD,EACjF,EACJ,GACO0F,MAAMC,KAAKnM,GAASoM,KAAK,SAAC/O,EAAGnB,GAChC,IAAM6R,EAAS,CAAEC,IAAI,EAAGC,IAAI,EAAGC,IAAI,EAAGC,IAAI,EAAGC,IAAI,EAAGC,IAAI,EAAGC,IAAI,EAAGC,IAAI,EAAGC,IAAI,EAAGC,IAAI,EAAGC,IAAI,GAAIC,IAAI,IAC7FC,EAAY,SAAAhF,GAAK,IAAAiF,EACyCC,EAAAhJ,EAArC8D,EAAEmF,MAAM,yBAA2B,GAAE,GAAlDC,GAAFF,EAAA,GAAKA,EAAA,IAAEG,EAAIH,EAAA,GACnB,OAAO,IAAIxD,KAAKe,SAAS4C,GAAkB,QAAbJ,EAAEd,EAAOiB,UAAI,IAAAH,EAAAA,EAAI,EACnD,EACA,OAAOD,EAAUvR,GAAKuR,EAAU1S,EACpC,EACJ,CAiCqCgT,CAAWlJ,EAAKtI,SAC3CuM,EAAS6D,EAAShN,IAAI,SAAAsF,GAAG,OAAIpG,EAAQc,IAAI,SAAAyL,GAAC,IAAA4C,EAAAC,EAAA,MACtC,cAAN7C,EACM,IAAI8C,OAAoB,EAAbjJ,EAAIgH,SAA4B,QAAjB+B,EAAI/I,EAAIsG,iBAAS,IAAAyC,EAAAA,EAAI,IACzC,QAD4CC,EAClDhJ,EAAImG,UAAE,IAAA6C,EAAAA,EAAI,EAAE,EACrB,GAEKE,EAAexE,EAYrB,OAXAA,EAAWhD,EAAYlC,EAAO0J,EAAcvE,EAAO/K,EAASiK,GAG5D6D,EAAS7B,QAAQ,SAAC7F,EAAKmJ,GACnB,GAAInJ,EAAIgH,OAAS,EAAG,CAChB,IAAMpC,EAAUJ,OAAOC,aAAa,GAAK7K,EAAQpE,OAAS,GAChDgK,EAAMoE,SAAS,IAAD5G,OAAKkM,EAAe,EAAIC,EAAG,KAAAnM,OAAI4H,GAAO5H,OAAGkM,EAAe,EAAIC,IAClFrF,OAAOC,KAAKE,KAAO,EACzB,CACJ,GAEOS,CACX,EAeA,OAZAA,EAAW8C,EAAYN,EAAgB,cAGnCvH,EAAoBwH,IAEpB3H,EAAMoE,SAAS,IAAD5G,OAAK0H,IAAYb,OAAS,CAAC,CAAC,KAC1Ca,MAEAA,IACAA,EAAW8C,EAAYL,EAAkB,iBAGtCzC,CACX,EAGAxB,GACI/B,EAAU,kBACV,EACAzC,EACAD,EACA,iBAGAuB,GAAM,EACVA,GAAMkD,GAAgB/B,EAAU,eAAgBnB,GAAKpB,EAASD,EAAS,iBACvEqB,KACAA,GAAMkD,GAAgB/B,EAAU,eAAgBnB,GAAKxB,EAAWD,EAAW,cAC3EyB,KACAA,GAAMkD,GAAgB/B,EAAU,eAAgBnB,GAAKlB,EAASD,EAAS,gBAAgBsE,EAAA9M,EAAA,EACjFyK,EAAQwC,OAAM,cAAAH,EAAAlM,EAAA,KAAA4J,EAAA,IACvB,gBAAAuI,GAAA,OAAAxI,EAAAnI,MAAA,KAAAD,UAAA,EA5Tc,IA4Tb,OAEFqC,QAAQwE,IAAI,wCAAwCH,EAAA7I,EAAA,eAAA6I,EAAArJ,EAAA,EAAAoJ,EAAAC,EAAAlI,EAGpD6D,QAAQC,MAAM,yBAAwBmE,GACtCnC,MAAM,4DAA4D,cAAAoC,EAAAjI,EAAA,KAAAkG,EAAA,iBAExE,cAAAZ,EAAAtF,EAAA,KAAAmF,EAAA,IACL,gBAAAiN,GAAA,OAAAlN,EAAA1D,MAAA,KAAAD,UAAA,EA3da,G,ICvcmB,IAAI8Q,IAAI,a","sources":["webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/define property getters","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global console, document, Excel, Office */\n\n/*Office.onReady((info) => {\n  if (info.host === Office.HostType.Excel) {\n    document.getElementById(\"sideload-msg\").style.display = \"none\";\n    document.getElementById(\"app-body\").style.display = \"flex\";\n    document.getElementById(\"run\").onclick = run;\n  }\n});*/\n\nexport async function run() {\n  try {\n    await Excel.run(async (context) => {\n      /**\n       * Insert your Excel code here\n       */\n      const range = context.workbook.getSelectedRange();\n\n      // Read the range address\n      range.load(\"address\");\n\n      // Update the fill color\n      range.format.fill.color = \"yellow\";\n\n      await context.sync();\n      console.log(`The range address was ${range.address}.`);\n    });\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function checkAccessStatus(userId) {\n    try {\n        const res = await fetch(`http://localhost:8000/addin/access_status?user_id=${userId}`);\n        const data = await res.json();\n\n        const container = document.getElementById(\"enterpriseRequestContainer\");\n        const messageParagraph = container.querySelector(\"p\");\n\n        if (data.status === \"Approved\") {\n            messageParagraph.textContent = \"Your access has been approved! You can now use the add-in.\";\n            document.getElementById(\"requestAccessBtn\").style.display = \"none\";\n        } else if (data.status === \"Pending\") {\n            messageParagraph.textContent = \"Your request is pending approval. Please wait for the admin to approve it.\";\n            document.getElementById(\"requestAccessBtn\").style.display = \"none\";\n        } else if (data.status === \"Rejected\") {\n            messageParagraph.textContent = \"Your request was rejected. Please contact support for details.\";\n            document.getElementById(\"requestAccessBtn\").style.display = \"none\";\n        } else if (data.status === \"NoRequest\") {\n            messageParagraph.textContent = \"This feature is available only for Enterprise Plan members.\\nIf you need access, request it below.\";\n            document.getElementById(\"requestAccessBtn\").style.display = \"block\";\n        }\n\n        container.style.display = \"flex\";\n\n    } catch (err) {\n        console.error(err);\n    }\n}\n\n/*document.getElementById(\"loginForm\").addEventListener(\"submit\", async (e) => {\n    e.preventDefault();\n\n    const email = e.target.email.value;\n    const password = e.target.password.value;\n\n    // Show spinner\n    const loginText = document.getElementById(\"loginText\");\n    const loginSpinner = document.getElementById(\"loginSpinner\");\n    loginText.style.display = \"none\";\n    loginSpinner.style.display = \"block\";\n\n    try {\n        const resUser = await fetch(\"https://www.transcriptanalyser.com/payment/getUser\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ email, password })\n        });\n\n        if (!resUser.ok) throw new Error(\"Login failed\");\n\n        const user = await resUser.json();\n        if (!user || !user.UserId) throw new Error(\"Invalid user data\");\n\n        const resMembership = await fetch(\"https://transcriptanalyser.com/payment/check_membership\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ user_id: user.UserId })\n        });\n\n        if (!resMembership.ok) throw new Error(\"Membership check failed\");\n\n        const membership = await resMembership.json();\n\n        // Hide all states first\n        document.getElementById(\"loginScreen\").style.display = \"none\";\n        document.getElementById(\"memberContent\").style.display = \"none\";\n        document.getElementById(\"addinUI\").style.display = \"none\";\n        document.getElementById(\"blockedContainer\").style.display = \"none\";\n        document.getElementById(\"enterpriseRequestContainer\").style.display = \"none\";\n\n        // CASE 1: Not a member\n        if (membership.is_member === \"no\") {\n            document.getElementById(\"blockedContainer\").style.display = \"flex\";\n            return;\n        }\n\n        // CASE 2: Member but not enterprise\n        if (!membership.is_enterprise_member) {\n            // First, check if user has already been approved in access requests\n            try {\n                const resStatus = await fetch(`http://localhost:8000/addin/access_status?user_id=${user.UserId}`);\n                const data = await resStatus.json();\n\n                if (data.status === \"Approved\") {\n                    // Treat this user as an enterprise member\n                    localStorage.setItem(\"user\", JSON.stringify(user));\n                    localStorage.setItem(\"membership\", JSON.stringify(membership));\n\n                    document.getElementById(\"memberContent\").style.display = \"block\";\n                    document.getElementById(\"addinUI\").style.display = \"block\";\n                    document.getElementById(\"logoutBtn\").style.display = \"block\";\n\n                    const profileIcon = document.getElementById(\"profileIcon\");\n                    const username = document.getElementById(\"username\");\n                    if (user.FullName) {\n                        username.textContent = user.FullName;\n                        profileIcon.textContent = user.FullName.split(\" \").map(n => n[0]).join(\"\").toUpperCase();\n                    }\n                    return; // Don't proceed to request access UI\n                }\n            } catch (err) {\n                console.error(\"Failed to fetch access status:\", err);\n            }\n\n            // If not approved, show the request access UI\n            const container = document.getElementById(\"enterpriseRequestContainer\");\n            container.style.display = \"flex\";  // Show container\n\n            const statusMessage = document.getElementById(\"statusMessage\");  // New message area\n            const requestBtn = document.getElementById(\"requestAccessBtn\");\n            const checkStatusLink = document.getElementById(\"checkStatusLink\");\n\n            requestBtn.onclick = async () => {\n                try {\n                    const res = await fetch(\"http://localhost:8000/addin/request_access\", {\n                        method: \"POST\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                        body: JSON.stringify({\n                            user_id: user.UserId,\n                            email: user.Email,\n                            full_name: user.FullName\n                        })\n                    });\n\n                    const data = await res.json();\n\n                    if (!res.ok) throw new Error(data.detail || \"Request failed\");\n\n                    alert(data.message);\n                } catch (err) {\n                    console.error(err);\n                    alert(\"Failed to submit request. Please try again later.\");\n                }\n            };\n\n            checkStatusLink.onclick = async (e) => {\n                e.preventDefault();  // Prevent default link behavior\n\n                try {\n                    const resStatus = await fetch(`http://localhost:8000/addin/access_status?user_id=${user.UserId}`);\n                    const data = await resStatus.json();\n\n                    if (data.status === \"Approved\") {\n                        statusMessage.textContent = \"Approved\";\n                        statusMessage.style.color = \"green\";\n                    } else if (data.status === \"Pending\") {\n                        statusMessage.textContent = \"Pending\";\n                        statusMessage.style.color = \"orange\";\n                    } else if (data.status === \"Rejected\") {\n                        statusMessage.textContent = \"Rejected\";\n                        statusMessage.style.color = \"red\";\n                    } else if (data.status === \"NoRequest\") {\n                        statusMessage.textContent = \"No request found\";\n                        statusMessage.style.color = \"#173760\";\n                    }\n                } catch (err) {\n                    console.error(err);\n                    alert(\"Failed to fetch status. Please try again later.\");\n                }\n            };\n        }\n\n        if (membership.is_enterprise_member) {\n            // Save user details to localStorage\n            localStorage.setItem(\"user\", JSON.stringify(user));\n            localStorage.setItem(\"membership\", JSON.stringify(membership));\n\n            // Show member-related content\n            document.getElementById(\"memberContent\").style.display = \"block\";\n            document.getElementById(\"addinUI\").style.display = \"block\";\n            document.getElementById(\"logoutBtn\").style.display = \"block\";\n\n            // Update profile display\n            const profileIcon = document.getElementById(\"profileIcon\");\n            const username = document.getElementById(\"username\");\n            if (user.FullName) {\n                username.textContent = user.FullName;\n                profileIcon.textContent = user.FullName.split(\" \").map(n => n[0]).join(\"\").toUpperCase();\n            }\n        }\n\n        // Update profile\n        \n\n    } catch (err) {\n        console.error(err);\n        document.getElementById(\"blockedContainer\").style.display = \"flex\";\n    } finally {\n        loginText.style.display = \"block\";\n        loginSpinner.style.display = \"none\";\n    }\n});*/\n\ndocument.getElementById(\"loginForm\").addEventListener(\"submit\", async (e) => {\n    e.preventDefault();\n\n    const email = e.target.email.value;\n    const password = e.target.password.value;\n\n    // Show spinner\n    const loginText = document.getElementById(\"loginText\");\n    const loginSpinner = document.getElementById(\"loginSpinner\");\n    loginText.style.display = \"none\";\n    loginSpinner.style.display = \"block\";\n\n    try {\n        // Fetch user data\n        const resUser = await fetch(\"https://www.transcriptanalyser.com/payment/getUser\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ email, password })\n        });\n\n        if (!resUser.ok) throw new Error(\"Login failed\");\n\n        const user = await resUser.json();\n        if (!user || !user.UserId) throw new Error(\"Invalid user data\");\n\n        // Check membership\n        const resMembership = await fetch(\"https://transcriptanalyser.com/payment/check_membership\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ user_id: user.UserId })\n        });\n\n        if (!resMembership.ok) throw new Error(\"Membership check failed\");\n\n        const membership = await resMembership.json();\n\n        // Hide irrelevant containers\n        document.getElementById(\"loginScreen\").style.display = \"none\";\n        document.getElementById(\"blockedContainer\").style.display = \"none\";\n\n        if (membership.is_member === \"yes\") {\n            // Store session data\n            localStorage.setItem(\"user\", JSON.stringify(user));\n            localStorage.setItem(\"membership\", JSON.stringify(membership));\n\n            // Show relevant UI\n            document.getElementById(\"memberContent\").style.display = \"block\";\n            document.getElementById(\"addinUI\").style.display = \"block\";\n            document.getElementById(\"logoutBtn\").style.display = \"block\";\n\n            const profileIcon = document.getElementById(\"profileIcon\");\n            const username = document.getElementById(\"username\");\n\n            if (user.FullName) {\n                username.textContent = user.FullName;\n                const initials = user.FullName.split(\" \").map(n => n[0]).join(\"\").toUpperCase();\n                profileIcon.textContent = initials;\n            }\n        } else {\n            // Not a member: show blocked container\n            document.getElementById(\"blockedContainer\").style.display = \"flex\";\n        }\n    } catch (err) {\n        console.error(err);\n\n        // Show blocked state on error\n        document.getElementById(\"loginScreen\").style.display = \"none\";\n        document.getElementById(\"memberContent\").style.display = \"none\";\n        document.getElementById(\"blockedContainer\").style.display = \"flex\";\n    } finally {\n        // Always restore spinner state\n        loginText.style.display = \"block\";\n        loginSpinner.style.display = \"none\";\n    }\n});\n\n\n\n/*window.addEventListener(\"DOMContentLoaded\", async () => {\n    const savedUser = localStorage.getItem(\"user\");\n    const savedMembership = localStorage.getItem(\"membership\");\n\n    if (savedUser && savedMembership) {\n        const user = JSON.parse(savedUser);\n        const membership = JSON.parse(savedMembership);\n\n        try {\n            // Check core membership\n            const resMembership = await fetch(\"https://transcriptanalyser.com/payment/check_membership\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({ user_id: user.UserId })\n            });\n\n            if (!resMembership.ok) throw new Error(\"Failed to verify membership\");\n\n            const updatedMembership = await resMembership.json();\n\n            let isApproved = membership.is_enterprise_member;\n\n            // If not enterprise member, check AddinAccessRequests\n            if (!isApproved) {\n                try {\n                    const resStatus = await fetch(`http://localhost:8000/addin/access_status?user_id=${user.UserId}`);\n                    const statusData = await resStatus.json();\n                    if (statusData.status === \"Approved\") {\n                        isApproved = true;\n                    }\n                } catch (err) {\n                    console.error(err);\n                }\n            }\n\n            // If user is allowed, store session and show UI\n            if (isApproved) {\n                localStorage.setItem(\"user\", JSON.stringify(user));\n                localStorage.setItem(\"membership\", JSON.stringify(membership));\n\n                document.getElementById(\"memberContent\").style.display = \"block\";\n                document.getElementById(\"addinUI\").style.display = \"block\";\n                document.getElementById(\"logoutBtn\").style.display = \"block\";\n\n                const profileIcon = document.getElementById(\"profileIcon\");\n                const username = document.getElementById(\"username\");\n                if (user.FullName) {\n                    username.textContent = user.FullName;\n                    profileIcon.textContent = user.FullName.split(\" \").map(n => n[0]).join(\"\").toUpperCase();\n                }\n\n                return; // Exit early\n            } else {\n                // Access revoked or not allowed\n                localStorage.removeItem(\"user\");\n                localStorage.removeItem(\"membership\");\n            }\n\n            // If not approved → show request access UI\n            document.getElementById(\"enterpriseRequestContainer\").style.display = \"flex\";\n\n        } catch (err) {\n            console.error(\"Error verifying session:\", err);\n            localStorage.removeItem(\"user\");\n            localStorage.removeItem(\"membership\");\n        }\n    }\n\n    // If no valid session, show login screen\n    document.getElementById(\"loginScreen\").style.display = \"flex\";\n});*/\n\nasync function checkLocalSession() {\n    const savedUser = localStorage.getItem(\"user\");\n    const savedMembership = localStorage.getItem(\"membership\");\n\n    if (savedUser && savedMembership) {\n        const user = JSON.parse(savedUser);\n        const membership = JSON.parse(savedMembership);\n\n        try {\n            // Check membership status from API\n            const res = await fetch(\"https://transcriptanalyser.com/payment/check_membership\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({ user_id: user.UserId })\n            });\n\n            if (!res.ok) throw new Error(\"Failed to verify membership\");\n\n            const updatedMembership = await res.json();\n\n            // Only proceed if user is a member\n            if (updatedMembership.is_member === \"yes\") {\n                // Show member content\n                document.getElementById(\"memberContent\").style.display = \"block\";\n                document.getElementById(\"addinUI\").style.display = \"block\";\n                document.getElementById(\"logoutBtn\").style.display = \"block\";\n\n                // Update profile display\n                const profileIcon = document.getElementById(\"profileIcon\");\n                const username = document.getElementById(\"username\");\n                if (user.FullName) {\n                    username.textContent = user.FullName;\n                    profileIcon.textContent = user.FullName\n                        .split(\" \")\n                        .map(n => n[0])\n                        .join(\"\")\n                        .toUpperCase();\n                }\n\n                return true; // Session valid\n            } else {\n                // Not a member → clear session\n                localStorage.removeItem(\"user\");\n                localStorage.removeItem(\"membership\");\n            }\n        } catch (err) {\n            console.error(\"Error checking membership session:\", err);\n            localStorage.removeItem(\"user\");\n            localStorage.removeItem(\"membership\");\n        }\n    }\n\n    // No valid session → show login\n    document.getElementById(\"loginScreen\").style.display = \"flex\";\n    return false;\n}\n\n// Usage example\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n    checkLocalSession();\n});\n\n\n\ndocument.getElementById(\"logoutBtn\").addEventListener(\"click\", () => {\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"membership\");\n\n    document.getElementById(\"memberContent\").style.display = \"none\";\n    document.getElementById(\"addinUI\").style.display = \"none\";\n    document.getElementById(\"logoutBtn\").style.display = \"none\";\n    document.getElementById(\"loginScreen\").style.display = \"flex\";\n});\n\n\n\nOffice.onReady(async (info) => {\n    if (info.host !== Office.HostType.Excel) return;\n\n    const refreshBtn = document.getElementById(\"refreshBtn\");\n    const helpBtn = document.getElementById(\"helpBtn\");\n\n    function getExcelColumnLetter(colNum) {\n        let letter = \"\";\n        while (colNum > 0) {\n            let mod = (colNum - 1) % 26;\n            letter = String.fromCharCode(65 + mod) + letter;\n            colNum = Math.floor((colNum - mod) / 26);\n        }\n        return letter;\n    }\n\n    // Attach Help button\n    helpBtn.onclick = () => {\n        const toggle = document.getElementById(\"dropdownToggle\");\n        const fincode = toggle.dataset.value;\n        if (!fincode) return alert(\"Select a company first.\");\n\n        const url = `https://www.goindiastocks.com/companyinfo/${encodeURIComponent(fincode)}`;\n        window.open(url, \"_blank\");\n    };\n\n    // Attach Refresh button\n    refreshBtn.onclick = async () => {\n        const toggle = document.getElementById(\"dropdownToggle\");\n        const fincode = toggle.dataset.value;\n        const name = toggle.textContent;\n\n        if (!fincode) return alert(\"Select a company first.\");\n\n        const sectorType = document.getElementById(\"dropdownToggle\").dataset.sector;\n\n        // ✅ Read toggle state\n        const modeToggle = document.getElementById(\"modeToggle\");\n        const isIndAS = modeToggle.checked; // true = IndAS, false = Detailed\n\n        // ✅ Decide suffix\n        const sheetSuffix = isIndAS ? \"\" : \"IND\"; // \"\" for In, \"IND\" for De\n        try {\n            console.log(`🔄 Refreshing data for: ${fincode} - ${name} | Mode: ${isIndAS ? \"In\" : \"De\"}`);\n\n            // === Fetch all APIs in parallel ===\n            const [\n                cashCResp, cashSResp,\n                qplCResp, qplSResp,\n                bsCResp, bsSResp,\n                plCResp, plSResp,\n                keyfResp] = await Promise.all([\n\n                    // Cash Flows\n                    fetch(\"https://transcriptanalyser.com/goindiastock/annual_profitloss\", {\n                        method: \"POST\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                        body: JSON.stringify({ fincode, mode: \"C\", sector: sectorType, sheet: `CashFlow${sheetSuffix}` })\n                    }),\n                    fetch(\"https://transcriptanalyser.com/goindiastock/annual_profitloss\", {\n                        method: \"POST\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                        body: JSON.stringify({ fincode, mode: \"S\", sector: sectorType, sheet: `CashFlow${sheetSuffix}` })\n                    }),\n\n                    // Quarterly Profit & Loss\n                    fetch(\"https://transcriptanalyser.com/goindiastock/annual_profitloss\", {\n                        method: \"POST\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                        body: JSON.stringify({ fincode, mode: \"C\", sector: sectorType, sheet: `QProfitLoss${sheetSuffix}` })\n                    }),\n                    fetch(\"https://transcriptanalyser.com/goindiastock/annual_profitloss\", {\n                        method: \"POST\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                        body: JSON.stringify({ fincode, mode: \"S\", sector: sectorType, sheet: `QProfitLoss${sheetSuffix}` })\n                    }),\n\n                    // Balance Sheet\n                    fetch(\"https://transcriptanalyser.com/goindiastock/annual_profitloss\", {\n                        method: \"POST\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                        body: JSON.stringify({ fincode, mode: \"C\", sector: sectorType, sheet: `BalanceSheet${sheetSuffix}` })\n                    }),\n                    fetch(\"https://transcriptanalyser.com/goindiastock/annual_profitloss\", {\n                        method: \"POST\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                        body: JSON.stringify({ fincode, mode: \"S\", sector: sectorType, sheet: `BalanceSheet${sheetSuffix}` })\n                    }),\n\n                    // Profit & Loss\n                    fetch(\"https://transcriptanalyser.com/goindiastock/annual_profitloss\", {\n                        method: \"POST\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                        body: JSON.stringify({ fincode, mode: \"C\", sector: sectorType, sheet: `ProfitLoss${sheetSuffix}` })\n                    }),\n                    fetch(\"https://transcriptanalyser.com/goindiastock/annual_profitloss\", {\n                        method: \"POST\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                        body: JSON.stringify({ fincode, mode: \"S\", sector: sectorType, sheet: `ProfitLoss${sheetSuffix}` })\n                    }),\n\n                    // Key Financials (single) → does NOT depend on IND suffix\n                    fetch(\"https://transcriptanalyser.com/goindiastock/actuals_forwards\", {\n                        method: \"POST\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                        body: JSON.stringify({ fincode, mode: \"C\", sector_type: sectorType })\n                    })\n                ]);\n\n\n            let [\n                cashCData, cashSData,\n                qplCData, qplSData,\n                bsCData, bsSData,\n                plCData, plSData,\n                keyfData\n            ] = await Promise.all([\n                cashCResp.json(), cashSResp.json(),\n                qplCResp.json(), qplSResp.json(),\n                bsCResp.json(), bsSResp.json(),\n                plCResp.json(), plSResp.json(),\n                keyfResp.json()\n            ]);\n\n            const isConsolidatedEmpty = (data) => {\n                if (!data?.value?.length) return true;\n\n                const ignoredFields = [\"Parameter\", \"child\", \"Codec\", \"Info\", \"parent_id\", \"hy\", \"ttm\"];\n\n                const checkRow = (row) => {\n                    const keys = Object.keys(row).filter(k => !ignoredFields.includes(k));\n                    const parentEmpty = keys.every(k => {\n                        const val = row[k];\n                        if (val == null) return true;\n                        if (typeof val === \"number\") return val === 0;\n                        if (typeof val === \"string\") {\n                            const v = val.trim().toLowerCase();\n                            return v === \"0\" || v === \"na\" || v === \"division by zero\" || v === \"\";\n                        }\n                        return true; // ignore other types\n                    });\n                    const childrenEmpty = !row.child || isConsolidatedEmpty({ value: row.child });\n                    return parentEmpty && childrenEmpty;\n                };\n\n                return data.value.every(checkRow);\n            };\n\n\n\n            await Excel.run(async (context) => {\n                const workbook = context.workbook;\n                const sheetNames = [\"Key Financials\", \"Quarterly Data\", \"Annual Data\"];\n                workbook.worksheets.load(\"items/name\");\n                await context.sync();\n\n                const existingNames = workbook.worksheets.items.map(s => s.name);\n                const sheetsMap = {};\n\n                // Create or reset sheets\n                for (const sheetName of sheetNames) {\n                    let sheet;\n                    if (existingNames.includes(sheetName)) {\n                        sheet = workbook.worksheets.getItem(sheetName);\n                        sheet.getUsedRange()?.clear();\n                    } else {\n                        sheet = workbook.worksheets.add(sheetName);\n                    }\n                    sheetsMap[sheetName] = sheet;\n\n                    // Company name in A1\n                    const nameCell = sheet.getRange(\"A1\");\n                    nameCell.values = [[name]];\n                    nameCell.format.font.bold = true;\n                    nameCell.format.font.size = 14;\n                    nameCell.format.fill.color = \"#bed1f8\";\n\n                    // Make column A wider\n                    sheet.getRange(\"A:A\").format.columnWidth = 180; \n                }\n\n                await context.sync(); // commit sheet setup\n\n                // --- Helper ---\n                const getExcelColumnLetter = (colNum) => {\n                    let temp = \"\";\n                    let letter = \"\";\n                    while (colNum > 0) {\n                        temp = (colNum - 1) % 26;\n                        letter = String.fromCharCode(temp + 65) + letter;\n                        colNum = (colNum - temp - 1) / 26;\n                    }\n                    return letter;\n                };\n\n                const formatTable = (sheet, startRow, title, headers, values) => {\n                    const lastCol = getExcelColumnLetter(headers.length);\n\n                    // Title row\n                    const titleCell = sheet.getRange(`A${startRow}`);\n                    titleCell.values = [[title]];\n                    titleCell.format.font.bold = true;\n                    startRow++;\n\n                    // Header row\n                    const headerRange = sheet.getRange(`A${startRow}:${lastCol}${startRow}`);\n                    headerRange.values = [headers];\n                    headerRange.format.fill.color = \"#e0e0e0\";\n                    headerRange.format.font.bold = true;\n                    startRow++;\n\n                    // Data rows\n                    if (values.length > 0) {\n                        const dataRange = sheet.getRange(`A${startRow}:${lastCol}${startRow + values.length - 1}`);\n                        dataRange.values = values;\n                        startRow += values.length;\n                    } else {\n                        sheet.getRange(`A${startRow}`).values = [[\"No data available\"]];\n                        startRow++;\n                    }\n\n                    return startRow + 1; // leave a blank row\n                };\n\n                // --- Index Sheet ---\n                const indexSheetName = \"Index\";\n                let indexSheet;\n                if (existingNames.includes(indexSheetName)) {\n                    indexSheet = workbook.worksheets.getItem(indexSheetName);\n                    indexSheet.getUsedRange()?.clear();\n                } else {\n                    indexSheet = workbook.worksheets.add(indexSheetName);\n                }\n                sheetsMap[indexSheetName] = indexSheet;\n\n                // Move Index sheet to the first position\n                indexSheet.position = 0;  \n\n                // Setup appearance\n                const topRow = indexSheet.getRange(\"A1:Z1\");\n                topRow.format.fill.color = \"#173760\";\n\n                // Insert the logo in A1\n                const logoCell = indexSheet.getRange(\"A2\");\n                logoCell.values = [[\n                    '=IMAGE(\"https://www.goindiastocks.com/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Flogo.eb4c0c16.png&w=1920&q=75\")'\n                ]];\n                logoCell.format.horizontalAlignment = \"Center\";\n                logoCell.format.verticalAlignment = \"Center\";\n                logoCell.format.rowHeight = 60;\n                indexSheet.getRange(\"A:A\").format.columnWidth = 20;\n\n                // Adjust the cell dimensions to match image\n                logoCell.format.rowHeight = 60;\n                indexSheet.getRange(\"A:A\").format.columnWidth = 15;\n\n                const titleCell = indexSheet.getRange(\"A3\");\n                titleCell.values = [[\"GO INDIA STOCKS\"]];\n                titleCell.format.font.bold = true;\n                titleCell.format.font.size = 16;\n                titleCell.format.horizontalAlignment = \"CenterAcrossSelection\";\n\n                // Insert company name, updated date and model prepared text\n                const nameCell = indexSheet.getRange(\"A4\");\n                nameCell.values = [[`Company: ${name}`]];\n                nameCell.format.font.bold = true;\n                nameCell.format.font.size = 12;\n                nameCell.format.horizontalAlignment = \"Left\";\n\n                const modelCell = indexSheet.getRange(\"A5\");\n                modelCell.values = [[\"Model prepared by Go India Stocks\"]];\n                modelCell.format.font.size = 11;\n                modelCell.format.horizontalAlignment = \"Left\";\n\n                const dateCell = indexSheet.getRange(\"A6\");\n                const today = new Date();\n                const formattedDate = `${today.getDate().toString().padStart(2,\"0\")}-${(today.getMonth()+1).toString().padStart(2,\"0\")}-${today.getFullYear()}`;\n                dateCell.values = [[`Updated as of ${formattedDate}`]];\n                dateCell.format.font.size = 10;\n                dateCell.format.horizontalAlignment = \"Left\";\n\n                // List of sections with their header markers in the target sheets\n                const sections = [\n                    { name: \"Key Financials\", sheet: \"Key Financials\", marker: \"Key Financials\" },\n                    { name: \"Quarterly Data - Quarterly P&L\", sheet: \"Quarterly Data\", marker: \"Quarterly P&L\" },\n                    { name: \"Annual Data - Balance Sheet\", sheet: \"Annual Data\", marker: \"Balance Sheet\" },\n                    { name: \"Annual Data - Cash Flows\", sheet: \"Annual Data\", marker: \"Cash Flows\" },\n                    { name: \"Annual Data - Detailed P&L\", sheet: \"Annual Data\", marker: \"Detailed P&L\" }\n                ];\n\n                // Insert navigation links starting from row 8\n                let rowIdx = 8;\n                for (const section of sections) {\n                    const cell = indexSheet.getRange(`A${rowIdx}`);\n                    cell.values = [[section.name]];\n                    \n                    // Dynamically build the formula using MATCH to find the correct row\n                    cell.formulas = [[\n                        `=HYPERLINK(\"#'${section.sheet}'!A\" & MATCH(\"${section.marker}\", '${section.sheet}'!A:A, 0), \"${section.name}\")`\n                    ]];\n                    \n                    cell.format.font.color = \"#1155CC\";\n                    cell.format.font.underline = \"Single\";\n                    cell.format.horizontalAlignment = \"Left\";\n                    rowIdx++;\n                }\n\n                // Adjust column width to fit all contents\n                indexSheet.getRange(\"A:A\").format.autofitColumns();\n\n                // Align all content in A column from row 2 to the last one\n                indexSheet.getRange(`A2:A${rowIdx - 1}`).format.horizontalAlignment = \"CenterAcrossSelection\";\n\n\n                // --- Key Financials ---\n                const keySheet = sheetsMap[\"Key Financials\"];\n                if (keyfData?.value?.length > 0) {\n                    const keyArray = keyfData.value;\n                    const staticFields = [\"Parameter\"];\n                    const dynamicHeaders = new Set();\n\n                    keyArray.forEach(row => {\n                        Object.keys(row).forEach(key => {\n                            if (!staticFields.includes(key) && /^FY\\d{4}(E)?$/.test(key)) dynamicHeaders.add(key);\n                        });\n                    });\n\n                    const sortedDynamicHeaders = Array.from(dynamicHeaders).sort((a, b) =>\n                        parseInt(a.replace(\"FY\", \"\").replace(\"E\", \"\")) - parseInt(b.replace(\"FY\", \"\").replace(\"E\", \"\"))\n                    );\n                    const keyHeaders = [\"Parameter\", ...sortedDynamicHeaders];\n                    const keyValues = keyArray.map(row => keyHeaders.map(h => row[h] ?? (h === \"Parameter\" ? row.Parameter ?? \"\" : \"\")));\n\n                    // Format the title row\n                    const startRow = 3; // same as you pass to formatTable\n                    keySheet.getRange(`A${startRow}`).values = [[\"Key Financials\"]];\n                    keySheet.getRange(`A${startRow}`).format.font.bold = true;\n                    keySheet.getRange(`A${startRow}`).format.font.size = 14;\n                    keySheet.getRange(`A${startRow}`).format.fill.color = \"#d9ead3\";\n                    keySheet.getRange(`A${startRow}`).format.horizontalAlignment = \"CenterAcrossSelection\";\n\n                    // Then format the actual table\n                    formatTable(keySheet, startRow, \"Key Financials\", keyHeaders, keyValues);\n                }\n\n                const flattenHierarchicalData = (data, level = 0) => {\n                    if (!data) return [];\n                    const rows = [];\n                    for (const row of data) {\n                        rows.push({ ...row, _level: level });\n                        if (row.child?.length) {\n                            rows.push(...flattenHierarchicalData(row.child, level + 1));\n                        }\n                    }\n                    return rows;\n                };\n\n\n                // --- Helper: Write Standalone + Consolidated side by side ---\n                const writeSideBySide = (sheet, startRow, standaloneData, consolidatedData, sectionName) => {\n                    const staticFields = [\"Parameter\"];\n\n                    // --- Helper: get headers from data ---\n                    const getHeaders = (data) => {\n                        if (!data?.length) return [];\n                        const headers = new Set();\n                        data.forEach(row => {\n                            Object.keys(row).forEach(k => {\n                                if (!staticFields.includes(k) && /^[A-Z][a-z]{2}\\d{4}$/.test(k)) headers.add(k);\n                            });\n                        });\n                        return Array.from(headers).sort((a, b) => {\n                            const months = { Jan:0, Feb:1, Mar:2, Apr:3, May:4, Jun:5, Jul:6, Aug:7, Sep:8, Oct:9, Nov:10, Dec:11 };\n                            const parseDate = s => {\n                                const [_, mon, year] = s.match(/^([A-Za-z]+)(\\d{4})$/) || [];\n                                return new Date(parseInt(year), months[mon] ?? 0);\n                            };\n                            return parseDate(a) - parseDate(b);\n                        });\n                    };\n\n                    // --- Flatten hierarchical data ---\n                    const flattenHierarchicalData = (data, level = 0) => {\n                        if (!data) return [];\n                        const rows = [];\n                        for (const row of data) {\n                            rows.push({ ...row, _level: level });\n                            if (row.child?.length) {\n                                rows.push(...flattenHierarchicalData(row.child, level + 1));\n                            }\n                        }\n                        return rows;\n                    };\n\n                    // --- Section Title ---\n                    sheet.getRange(`A${startRow}`).values = [[sectionName]];\n                    sheet.getRange(`A${startRow}`).format.font.bold = true;\n                    sheet.getRange(`A${startRow}`).format.font.size = 14;\n                    sheet.getRange(`A${startRow}`).format.fill.color = \"#d9ead3\";\n                    sheet.getRange(`A${startRow}`).format.horizontalAlignment = \"CenterAcrossSelection\";\n                    startRow++;\n\n                    // --- Helper: process data ---\n                    const processData = (data, title) => {\n                        if (!data?.value?.length) {\n                            // Single-row message if no data\n                            sheet.getRange(`A${startRow}`).values = [[`${title} not available for this company`]];\n                            startRow++;\n                            return startRow;\n                        }\n\n                        const flatData = flattenHierarchicalData(data.value);\n                        const headers = [\"Parameter\", ...getHeaders(data.value)];\n                        const values = flatData.map(row => headers.map(h =>\n                            h === \"Parameter\"\n                                ? \" \".repeat(row._level * 4) + (row.Parameter ?? \"\")\n                                : row[h] ?? \"\"\n                        ));\n\n                        const dataStartRow = startRow;\n                        startRow = formatTable(sheet, dataStartRow, title, headers, values);\n\n                        // Smaller font for child rows\n                        flatData.forEach((row, idx) => {\n                            if (row._level > 0) {\n                                const lastCol = String.fromCharCode(65 + headers.length - 1);\n                                const r = sheet.getRange(`A${dataStartRow + 1 + idx}:${lastCol}${dataStartRow + 1 + idx}`);\n                                r.format.font.size = 11;\n                            }\n                        });\n\n                        return startRow;\n                    };\n\n                    // --- Print Standalone ---\n                    startRow = processData(standaloneData, \"Standalone\");\n\n                    // --- Print Consolidated ---\n                    if (isConsolidatedEmpty(consolidatedData)) {\n                        // Show single-row message for empty consolidated\n                        sheet.getRange(`A${startRow}`).values = [[\"\"]];\n                        startRow++;\n                    } else {\n                        startRow++; // leave a blank row\n                        startRow = processData(consolidatedData, \"Consolidated\");\n                    }\n\n                    return startRow;\n                };\n\n\n                writeSideBySide(\n                    sheetsMap[\"Quarterly Data\"], \n                    3, \n                    qplSData,   // standalone object\n                    qplCData,   // consolidated object\n                    \"Quarterly P&L\"\n                );\n\n                let row = 3;\n                row = writeSideBySide(sheetsMap[\"Annual Data\"], row, bsSData, bsCData, \"Balance Sheet\");\n                row++;\n                row = writeSideBySide(sheetsMap[\"Annual Data\"], row, cashSData, cashCData, \"Cash Flows\");\n                row++;\n                row = writeSideBySide(sheetsMap[\"Annual Data\"], row, plSData, plCData, \"Detailed P&L\");\n                await context.sync();\n            });\n\n            console.log(\"✅ Data successfully written to Excel\");\n\n        } catch (err) {\n            console.error(\"❌ Error in refreshBtn:\", err);\n            alert(\"Failed to fetch company data. Check console for details.\");\n        }\n    };\n});\n","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\n// Module\nvar code = \" <!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>GoIndia Add-in</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://res-1.cdn.office.net/files/fabric-cdn-prod_20230815.002/office-ui-fabric-core/11.1.0/css/fabric.min.css\\\"/> <link href=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> </head> <body class=\\\"ms-font-m ms-welcome ms-Fabric\\\"> <link rel=\\\"stylesheet\\\" href=\\\"https://cdn.jsdelivr.net/npm/choices.js/public/assets/styles/choices.min.css\\\"/> <\" + \"script src=\\\"https://cdn.jsdelivr.net/npm/choices.js/public/assets/scripts/choices.min.js\\\"><\" + \"/script> <\" + \"script src=\\\"https://accounts.google.com/gsi/client\\\" async defer=\\\"defer\\\"><\" + \"/script> <style>#buttons{display:flex;flex-direction:row;gap:4px;align-items:flex-start}button{color:#fff;font-weight:400;border:none;border-radius:8px;padding:8px 16px;font-size:14px;margin-top:8px;cursor:pointer;transition:background-color .2s,transform .1s,box-shadow .2s;box-shadow:0 2px 4px rgba(0,0,0,.2)}#refreshBtn{background-color:#275b9f}#refreshBtn:hover{background-color:#173760;transform:translateY(-1px);box-shadow:0 4px 8px rgba(0,0,0,.25)}#refreshBtn:active{transform:translateY(0);box-shadow:0 2px 4px rgba(0,0,0,.2)}#helpBtn{background-color:#d80404}#helpBtn:hover{background-color:#b80000;transform:translateY(-1px);box-shadow:0 4px 8px rgba(0,0,0,.25)}#helpBtn:active{transform:translateY(0);box-shadow:0 2px 4px rgba(0,0,0,.2)}#logoutBtn:hover{background-color:#b80000;transform:translateY(-1px);box-shadow:0 4px 8px rgba(0,0,0,.25)}#profileSection:hover{background-color:#b80000;transform:translateY(-1px);box-shadow:0 4px 8px rgba(0,0,0,.25)}select{border-radius:8px;border:1px solid #ccc;padding:6px 12px;font-size:14px;cursor:pointer;width:250px;transition:border-color .2s,box-shadow .2s}select:focus{border-color:#0078d4;box-shadow:0 0 4px rgba(0,120,212,.5);outline:0}.dropdown{position:relative;width:280px;font-family:Arial,sans-serif}.dropdown-toggle{padding:10px 12px;width:250px;flex-direction:row;align-items:start;border:3px solid #d6e5f5;border-radius:8px;cursor:pointer;background-color:#fff;font-size:14px}.dropdown-toggle:active{border:3px solid #8bbef4}.dropdown-toggle:focus{border:3px solid #8bbef4}.dropdown-menu{position:absolute;top:100%;left:0;right:0;border:1px solid #8bbef4;border-radius:8px;background-color:#fff;max-height:300px;overflow-y:auto;display:none;margin-top:4px}.dropdown-menu.active{display:block;border:1px solid #8bbef4;border-radius:8px}.dropdown-menu input{width:calc(100% - 24px);margin:8px;padding:6px;border:1px solid #ccc;border-radius:6px;font-size:14px}.dropdown-menu ul{list-style:none;padding:0;margin:0}.dropdown-menu li{padding:8px 12px;cursor:pointer}.dropdown-menu li:hover{background-color:#f0f0f0}.arrow-down{width:0;height:0;border-left:6px solid transparent;border-right:6px solid transparent;border-top:6px solid #000}.toggle-container{display:flex;justify-content:flex-end;margin-bottom:5px;margin-left:160px;margin-top:40px;width:120px}.toggle-label{display:flex;align-items:center;justify-content:space-between;background:#e6e6e6;border-radius:10px;cursor:pointer;width:120px;height:29px;font-family:Arial,sans-serif;font-size:13px;font-weight:550;overflow:hidden;position:relative;transition:background-color .2s,transform .1s,box-shadow .2s}.toggle-label:active{transform:translateY(0);box-shadow:0 2px 4px rgba(0,0,0,.2)}.toggle-option{flex:1;text-align:center;z-index:2;transition:color .3s;font-size:12px}.toggle-slider{position:absolute;top:2px;left:2px;width:calc(51% - 4px);height:25px;background:#173760;border-radius:8px;transition:transform .3s;z-index:1}#modeToggle{display:none}#modeToggle:checked+.toggle-label .toggle-slider{transform:translateX(100%)}#modeToggle:checked+.toggle-label .left{color:#000}#modeToggle:checked+.toggle-label .right{color:#fff}#modeToggle:not(:checked)+.toggle-label .left{color:#fff}#modeToggle:not(:checked)+.toggle-label .right{color:#000}#loginScreen{width:100%;max-width:300px;display:flex;justify-content:start;align-items:flex-start}#loginWrapper{display:flex;flex-direction:column;align-items:start;justify-content:flex-start;min-height:100vh;background-color:#f3f4f6;padding:1rem;box-sizing:border-box}.login-container div{display:flex;flex-direction:column;gap:2px;align-items:flex-start}#loginScreen .login-container{background-color:#fff;border-radius:16px;padding:1.5rem 2rem;box-shadow:0 8px 20px rgba(0,0,0,.08);width:100%;max-width:360px;display:flex;flex-direction:column;align-items:center}#loginScreen h2{margin-bottom:1rem;text-align:center;font-size:1.75rem;color:#173760}#loginScreen input[type=email],#loginScreen input[type=password]{width:88%;padding:.6rem .9rem;border-radius:10px;border:1px solid #ccc;outline:0;font-size:.95rem;margin-bottom:.75rem;transition:border .2s;margin-right:20px}#loginScreen input:focus{border-color:#173760}#loginScreen button[type=submit]{width:100%;padding:.6rem .9rem;border-radius:10px;background-color:#173760;color:#fff;font-weight:600;font-size:.95rem;border:none;cursor:pointer;transition:transform .2s}#loginScreen button[type=submit]:hover{transform:scale(1.03)}#loginScreen .divider{display:flex;align-items:center;gap:.3rem;width:100%;margin:1rem 0}#loginScreen .divider hr{flex:1;border-color:#ccc}#loginScreen .divider span{font-size:.8rem;color:#999}#loginScreen .social-buttons{width:100%;display:flex;flex-direction:column;gap:.75rem;align-items:center}#loginScreen .apple-btn{display:flex;align-items:center;justify-content:center;gap:.4rem;background-color:#000;color:#fff;width:100%;padding:.45rem .8rem;border-radius:10px;font-weight:500;cursor:pointer;transition:transform .2s;border:none}#loginScreen .apple-btn:hover{transform:scale(1.03)}#loginScreen .signup{display:flex;align-items:center;justify-content:center;width:100%;margin-top:.75rem;font-size:.8rem;color:#173760}#loginScreen .signup button{background:#173760;border:1px solid #173760;border-radius:10px;height:35px;padding:.2rem .6rem;font-weight:500;cursor:pointer;transition:transform .2s}#loginScreen .signup button:hover{transform:scale(1.03)}#loginScreen .forgot{display:flex;flex-direction:column;gap:.2rem;margin-top:.5rem;width:100%;font-size:.75rem}#loginScreen .forgot button{background:0 0;border:none;color:#173760;cursor:pointer;text-align:left}#loginScreen .forgot button:hover{text-decoration:underline}#blockedContainer,#enterpriseRequestContainer,#memberContent{width:100%;display:flex;flex-direction:column;align-items:start;justify-content:start;padding:1rem;box-sizing:border-box}#loginSpinner{border:2px solid #f3f3f3;border-top:2px solid #fff;border-radius:50%;width:16px;height:16px;animation:spin 1s linear infinite;margin:auto}@keyframes spin{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}</style> <div id=\\\"loginWrapper\\\" style=\\\"display:flex;justify-content:start;align-items:center;min-height:100vh;background:#f3f4f6;flex-direction:column\\\"> <div id=\\\"loginScreen\\\" style=\\\"width:100%;display:none;justify-content:center\\\"> <div class=\\\"login-container\\\" id=\\\"loginContainer\\\"> <img src=\\\"https://www.goindiastocks.com/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Flogo.eb4c0c16.png&w=1920&q=75\\\" alt=\\\"App Logo\\\" style=\\\"width:90px;height:60px;margin-bottom:10px\\\"/> <span style=\\\"font-family:'Open Sans',sans-serif;font-size:16px;margin-bottom:12px\\\"> <span style=\\\"color:#173760;font-weight:600\\\">GO INDIA</span> <span style=\\\"color:#b80000;font-weight:600\\\"> STOCKS</span> </span> <form id=\\\"loginForm\\\"> <input required type=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Email ID\\\"> <input required type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\"> <button type=\\\"submit\\\" class=\\\"login-btn\\\"> <span id=\\\"loginText\\\">Login</span> <div id=\\\"loginSpinner\\\" class=\\\"spinner\\\" style=\\\"display:none\\\"></div> </button> </form> <div class=\\\"divider\\\"> <hr><span>OR</span><hr> </div> <div class=\\\"social-buttons\\\"> <div id=\\\"googleSignInButton\\\"></div> </div> <div class=\\\"signup\\\"> <p>Don't have an account?</p> <button onclick='window.open(\\\"https://www.goindiastocks.com/loginpage\\\",\\\"_blank\\\")'> Sign Up </button> </div> </div> </div> <div id=\\\"memberContent\\\" style=\\\"display:none\\\"> <div id=\\\"addinUI\\\" style=\\\"display:none\\\"> <a href=\\\"https://www.goindiastocks.com/profile\\\" target=\\\"_blank\\\" id=\\\"profileSection\\\" style=\\\"position:absolute;top:5px;left:30px;display:flex;align-items:center;gap:.5rem;background:#fff;padding:.22rem .6rem;border-radius:10px;box-shadow:0 2px 4px rgba(0,0,0,.1);text-decoration:none;color:inherit\\\"> <div id=\\\"profileIcon\\\" style=\\\"width:32px;height:32px;background:#f0f0f0;border-radius:50%;display:flex;align-items:center;justify-content:center;font-weight:700;color:#555;font-size:14px\\\"> U </div> <span id=\\\"username\\\" style=\\\"font-size:14px;color:#333\\\">Username</span> </a> <div class=\\\"toggle-container\\\"> <input type=\\\"checkbox\\\" id=\\\"modeToggle\\\"/> <label for=\\\"modeToggle\\\" class=\\\"toggle-label\\\"> <span class=\\\"toggle-option left\\\">IndAS</span> <span class=\\\"toggle-option right\\\">Detailed</span> <span class=\\\"toggle-slider\\\"></span> </label> </div> <div class=\\\"dropdown\\\" id=\\\"customDropdown\\\"> <div class=\\\"dropdown-toggle\\\" id=\\\"dropdownToggle\\\" data-value=\\\"\\\">Select Company</div> <div class=\\\"dropdown-menu\\\" id=\\\"dropdownMenu\\\"> <input type=\\\"text\\\" id=\\\"dropdownSearch\\\" placeholder=\\\"Search company...\\\"/> <ul id=\\\"dropdownList\\\"></ul> </div> </div> <div id=\\\"buttons\\\"> <button id=\\\"refreshBtn\\\">Refresh</button> <button id=\\\"helpBtn\\\">Help</button> </div> <button id=\\\"logoutBtn\\\" style=\\\"margin-top:3rem;margin-left:0;background:#fff;color:#b80000;padding:.5rem 1rem;border:1px solid #b80000;border-radius:12px;cursor:pointer;transition:transform .2s,box-shadow .2s\\\"> Log Out </button> </div> </div> <div id=\\\"blockedContainer\\\" style=\\\"display:none;text-align:center;padding:2rem;width:100%\\\"> <div style=\\\"background:#fff;border-radius:20px;padding:2rem;max-width:400px;margin:auto;display:flex;flex-direction:column;align-items:center;justify-content:center\\\"> <img src=\\\"https://www.goindiastocks.com/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Flogo.eb4c0c16.png&w=1920&q=75\\\" alt=\\\"Membership Required\\\" style=\\\"width:100px;margin-bottom:1rem\\\"> <p style=\\\"color:#b80000;font-weight:700;margin-bottom:1rem\\\">Only Enterprise members can access this add-in.</p> <button onclick='window.open(\\\"https://www.goindiastocks.com/pricing\\\",\\\"_blank\\\")' style=\\\"background:#173760;color:#fff;border:none;padding:.5rem 1rem;border-radius:12px;cursor:pointer\\\"> Join Now </button> </div> </div> </div> <\" + \"script>function parseJwt(e){const t=e.split(\\\".\\\")[1].replace(/-/g,\\\"+\\\").replace(/_/g,\\\"/\\\"),n=decodeURIComponent(atob(t).split(\\\"\\\").map(function(e){return\\\"%\\\"+(\\\"00\\\"+e.charCodeAt(0).toString(16)).slice(-2)}).join(\\\"\\\"));return JSON.parse(n)}async function handleCredentialResponse(e){try{const t=parseJwt(e.credential),n=t.name,o=t.email;console.log(\\\"Parsed user info:\\\",{fullname:n,email:o});let a=await fetch(\\\"https://transcriptanalyser.com/payment/getGoogleuser\\\",{method:\\\"POST\\\",headers:{\\\"Content-Type\\\":\\\"application/json\\\"},body:JSON.stringify({fullname:n,email:o})}),l=await a.json();console.log(\\\"User data:\\\",l);let c=await fetch(\\\"https://transcriptanalyser.com/payment/check_membership\\\",{method:\\\"POST\\\",headers:{\\\"Content-Type\\\":\\\"application/json\\\"},body:JSON.stringify({user_id:l.UserId})}),s=await c.json();if(console.log(\\\"Membership data:\\\",s),\\\"yes\\\"===s.is_member){localStorage.setItem(\\\"user\\\",JSON.stringify(l)),localStorage.setItem(\\\"membership\\\",JSON.stringify(s)),document.getElementById(\\\"loginContainer\\\").style.display=\\\"none\\\",document.getElementById(\\\"memberContent\\\").style.display=\\\"block\\\",document.getElementById(\\\"addinUI\\\").style.display=\\\"block\\\",document.getElementById(\\\"logoutBtn\\\").style.display=\\\"block\\\";const e=document.getElementById(\\\"profileIcon\\\"),t=document.getElementById(\\\"username\\\");if(l.FullName){t.textContent=l.FullName;const n=l.FullName.split(\\\" \\\").map(e=>e[0]).join(\\\"\\\").toUpperCase();e.textContent=n}}else document.getElementById(\\\"loginContainer\\\").style.display=\\\"none\\\",document.getElementById(\\\"blockedContainer\\\").style.display=\\\"block\\\"}catch(e){console.error(\\\"Login or membership check failed:\\\",e)}}window.onload=function(){google&&google.accounts&&google.accounts.id?(google.accounts.id.initialize({client_id:\\\"588713186952-isq15ehjattbfce2hhhqnuffdfln3nco.apps.googleusercontent.com\\\",callback:handleCredentialResponse}),google.accounts.id.renderButton(document.getElementById(\\\"googleSignInButton\\\"),{theme:\\\"outline\\\",size:\\\"large\\\",width:250})):console.error(\\\"Google Identity Services not loaded yet.\\\")};let companies=[];async function fetchCompanies(){const e=await fetch(\\\"https://transcriptanalyser.com/operational/companies_excel\\\");return await e.json()}function populateCustomDropdown(e,t=!1){const n=document.getElementById(\\\"dropdownList\\\"),o=document.getElementById(\\\"dropdownToggle\\\");n.innerHTML=\\\"\\\",t&&(o.textContent=\\\"Select Company\\\",o.dataset.value=\\\"\\\",o.dataset.sector=\\\"\\\"),e.forEach(e=>{const t=document.createElement(\\\"li\\\");t.textContent=e.CompName,t.dataset.value=e.fincode,t.dataset.sector=e.sector_type,t.addEventListener(\\\"click\\\",()=>{o.textContent=e.CompName,o.dataset.value=e.fincode,o.dataset.sector=e.sector_type,document.getElementById(\\\"dropdownMenu\\\").classList.remove(\\\"active\\\")}),n.appendChild(t)})}async function initCustomDropdown(){companies=await fetchCompanies(),populateCustomDropdown(companies,!0)}document.getElementById(\\\"dropdownToggle\\\").addEventListener(\\\"click\\\",()=>{document.getElementById(\\\"dropdownMenu\\\").classList.toggle(\\\"active\\\")}),document.getElementById(\\\"dropdownSearch\\\").addEventListener(\\\"input\\\",e=>{const t=e.target.value.toLowerCase();populateCustomDropdown(companies.filter(e=>e.CompName.toLowerCase().includes(t)))}),initCustomDropdown();const showMessage=e=>{Office?.Runtime?.displayDialogAsync?console.log(e):alert(e)},getSelectedCompany=()=>{const e=document.getElementById(\\\"dropdownToggle\\\");if(!e)return null;const t=e.dataset?.value||\\\"\\\",n=e.textContent?.trim()||\\\"\\\";return t&&n&&\\\"Select Company\\\"!==n?{fincode:t,name:n}:null};document.getElementById(\\\"refreshBtn\\\").addEventListener(\\\"click\\\",()=>{const e=getSelectedCompany();if(!e)return void alert(\\\"⚠ Please select a company before refreshing.\\\");const{fincode:t,name:n}=e,o=document.getElementById(\\\"dropdownToggle\\\").dataset.sector,a=document.getElementById(\\\"modeToggle\\\"),l=a?.checked?\\\"In\\\":\\\"De\\\";console.log(\\\"Refreshing:\\\",n,\\\"| fincode:\\\",t,\\\"| mode:\\\",l,\\\"| sector:\\\",o)}),document.getElementById(\\\"helpBtn\\\").addEventListener(\\\"click\\\",()=>{const e=getSelectedCompany();if(!e)return void alert(\\\"⚠ Please select a company first.\\\");const{fincode:t}=e,n=`https://www.goindiastocks.com/companyinfo/${encodeURIComponent(t)}`;window.open(n,\\\"_blank\\\")}),initCustomDropdown()<\" + \"/script>  </body> </html> \";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","d","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","t","r","Symbol","n","iterator","toStringTag","c","Generator","u","create","_regeneratorDefine2","f","y","G","v","a","bind","l","TypeError","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","_invoke","configurable","writable","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_checkLocalSession","_callee8","savedUser","savedMembership","user","res","profileIcon","username","_t5","_context8","localStorage","getItem","JSON","parse","fetch","method","headers","body","stringify","user_id","UserId","ok","json","is_member","getElementById","style","display","FullName","textContent","split","map","join","removeItem","console","error","addEventListener","_ref","_callee","email","password","loginText","loginSpinner","resUser","resMembership","membership","initials","_t","_context","preventDefault","target","setItem","_x2","checkLocalSession","Office","onReady","_ref2","_callee4","info","refreshBtn","_context4","host","HostType","Excel","onclick","fincode","dataset","alert","url","concat","encodeURIComponent","open","_callee3","toggle","name","sectorType","modeToggle","isIndAS","sheetSuffix","_yield$Promise$all","_yield$Promise$all2","cashCResp","cashSResp","qplCResp","qplSResp","bsCResp","bsSResp","plCResp","plSResp","keyfResp","_yield$Promise$all3","_yield$Promise$all4","cashCData","cashSData","qplCData","qplSData","bsCData","bsSData","plCData","plSData","keyfData","_isConsolidatedEmpty","_t2","_context3","sector","checked","log","all","mode","sheet","sector_type","_slicedToArray","isConsolidatedEmpty","data","_data$value","ignoredFields","every","row","parentEmpty","keys","filter","k","includes","val","trim","toLowerCase","childrenEmpty","child","run","_ref4","_callee2","context","_keyfData$value","workbook","sheetNames","existingNames","sheetsMap","_i","_sheetNames","sheetName","_sheet$getUsedRange","_nameCell","getExcelColumnLetter","formatTable","indexSheetName","indexSheet","_indexSheet$getUsedRa","logoCell","titleCell","nameCell","modelCell","dateCell","today","formattedDate","rowIdx","_i2","_sections","section","cell","keySheet","keyArray","staticFields","dynamicHeaders","sortedDynamicHeaders","keyHeaders","keyValues","_flattenHierarchicalData","writeSideBySide","_context2","worksheets","load","sync","items","s","getUsedRange","clear","add","getRange","values","format","font","bold","size","fill","color","columnWidth","colNum","temp","letter","String","fromCharCode","startRow","title","lastCol","headerRange","position","horizontalAlignment","verticalAlignment","rowHeight","Date","getDate","toString","padStart","getMonth","getFullYear","marker","formulas","underline","autofitColumns","Set","forEach","Array","from","sort","parseInt","_toConsumableArray","h","_row$h","_row$Parameter","Parameter","flattenHierarchicalData","level","_step","rows","_iterator","_createForOfIteratorHelper","_row$child","push","_objectSpread","_level","err","standaloneData","consolidatedData","sectionName","_step2","_iterator2","_row2$child","processData","_data$value2","flatData","months","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","parseDate","_months$mon","_ref6","match","mon","year","getHeaders","_row$Parameter2","_row$h2","repeat","dataStartRow","idx","_x4","_x3","URL"],"sourceRoot":""}